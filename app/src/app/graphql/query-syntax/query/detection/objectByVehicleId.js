import { gql } from 'apollo-angular';

const objectByVehicleId  = gql`
query ObjectDetectionQuery ($vehicleId: BigInt $cursor:Int $size:Int){
    objects(
          first: $size
          offset: $cursor
          orderBy:ID_DESC 
          condition:{vehicleId:$vehicleId}
          ){
            totalCount
            pageInfo{
              startCursor
              hasNextPage
              hasPreviousPage
            }
            nodes{
            readingat
            id
            topicId
            topic{
              name
            }
            vehicleId
            message{
              header{
                headerid
                readingat
                seq
                node
              }
              cameraName
              detection{
                header{
                  headerid
                  readingat
                  seq
                  node
                }
                  cuboid {
                  centroid{
                    xM
                    yM
                    zM
                  }
                  dimension{
                    widthM
                    depthM
                    heightM
                  }
                  orientation{
                    rollDeg
                    pitchDeg
                    yawDeg
                  }
                }
                roi{
                  x
                  y
                  width
                  height
                  thetaDeg
                }
                label
                confidence
              }
              centroidRpy{
                rollDeg
                pitchDeg
                yawDeg
              }
              centroidLocation{
                xyzCamera{
                  xM
                  yM
                  zM
                }
                xyzStarfire{
                  xM
                  yM
                  zM
                }
                lla{
                  latitudeDeg
                  longitudeDeg
                  altitudeM
                }
                enu{
                  eastM
                  northM
                  upM
                }
                fieldOrigin{
                  latitudeDeg
                  longitudeDeg
                  altitudeM
                }
                ecef{
                  xM
                  yM
                  zM
                }
              }
              objectMessageVertices{
                nodes{
                  xyzCamera{
                    xM
                    yM
                    zM
                  }
                }
              }
            }      
          }
        }
  }
  `

  export { objectByVehicleId as default }