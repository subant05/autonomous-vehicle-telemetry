{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/graphql/query-syntax/query/geolocation.js","./src/app/graphql/query-syntax/query/image-pair.js","./src/app/graphql/query-syntax/query/index.js","./src/app/graphql/query-syntax/query/segmentation-map.js","./src/app/graphql/query-syntax/query/topics.js","./src/app/graphql/query-syntax/subscriptions/device-message.js","./src/app/graphql/query-syntax/subscriptions/geographic-coordinates.js","./src/app/graphql/query-syntax/subscriptions/index.js","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/image/image.component.ts","./src/app/components/image/image.component.html","./src/app/components/layout/layout.component.ts","./src/app/components/layout/layout.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/components/top-navigation/top-navigation.component.html","./src/app/components/top-navigation/top-navigation.component.ts","./src/app/components/topics/image-pair/image-pair.component.ts","./src/app/components/topics/image-pair/image-pair.component.html","./src/app/components/topics/image-segmentation/image-segmentation.component.ts","./src/app/components/topics/image-segmentation/image-segmentation.component.html","./src/app/components/topics/starfire/starfire.component.ts","./src/app/components/topics/starfire/starfire.component.html","./src/app/modules/graphql.module.ts","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/devices/devices.component.html","./src/app/pages/devices/devices.component.ts","./src/app/pages/devices/pages/device-live/device-live.component.ts","./src/app/pages/devices/pages/device-live/device-live.component.html","./src/app/pages/devices/pages/device-topic/device-topic.component.html","./src/app/pages/devices/pages/device-topic/device-topic.component.ts","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/routes/app-routes.module.ts","./src/app/services/auth/auth-guard.service.ts","./src/app/services/geolocation/geolocation.service.ts","./src/app/services/graphql/gql-query.service.ts","./src/app/services/graphql/gql-subscription.service.ts","./src/app/services/images/image.service.ts","./src/app/services/navigation/menu.service.ts","./src/environments/environment.ts","./src/environments/shared.confg.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;ACZqC;;AAErC,oBAAoB,mDAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACXqC;;AAErC,uBAAuB,mDAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACtC6B;AACU;AACH;AACY;;;;;;;;;;;;;;;;;;ACHX;;AAErC,6BAA6B,mDAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnCqC;;AAErC,eAAe,mDAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZqC;;AAErC,uBAAuB,mDAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvBqC;;AAErC,8BAA8B,mDAAG;AACjC;AACA;AACA;AACA;AACA,GAAG;;AAEH,E;;;;;;;;;;;;;;;;;;ACT0D;AACG;;;;;;;;;;;;;;;;;;;;;;;ACMtD,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;KACf;;wEAFY,YAAY;0GAAZ,YAAY;QCNzB,yEAAqB;QACnB,gFAAyC;QACzC,yEAA2B;QACzB,2EAA+B;QACjC,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { gql } from 'apollo-angular';\n\nconst geolocation = gql`\nquery {\n    geolocation{\n      msg {\n        longitude\n        latitude\n      }\n    }\n  }\n`\n\nexport {geolocation as default}","import { gql } from 'apollo-angular';\n\nconst imagePairQuery = gql` \nquery ImagePair($topic:String! $cursor:Int!){\n        imagePair(topic:$topic cursor:$cursor){\n            timestamp\n            topic\n            pagination{\n              position\n              pageSize\n              length\n            }\n            msg{\n              header{\n                  id\n                  timestamp\n                  seq\n                  node\n              }\n              left_image{\n                height\n                width\n                encoding\n                step\n                is_bigendian\n                data\n              }\n              right_image{\n                height\n                width\n                encoding\n                step\n                is_bigendian\n                data\n              }\n            }\n          }\n  }\n  `\n\nexport {imagePairQuery as default}","import Topics from './topics'\nimport Geolocation from './geolocation'\nimport ImagePair from './image-pair'\nimport SegmentationMap from './segmentation-map'\n\nexport {\n    Topics\n    , Geolocation\n    , ImagePair\n    , SegmentationMap\n}","import { gql } from 'apollo-angular';\n\nconst segmentationMapQuery = gql` \nquery SegmentationMap($topic:String! $cursor:Int! $id:Float!){\n    segmentationMap (topic:$topic, cursor:$cursor, id:$id){\n        timestamp\n        topic\n        pagination{\n          position\n          pageSize\n          length\n        }\n        msg {\n          descriptor {\n            id\n            timestamp\n          }\n          image {\n            header{\n              stamp {\n                sec\n                nanosec\n              }\n              frame_id\n            }\n            height\n            width\n            encoding\n            is_bigendian\n            step\n            data\n          }\n        }\n      }\n  }\n  `\n\nexport {segmentationMapQuery as default}","import { gql } from 'apollo-angular';\n\nconst topics = gql`\nquery {\n    topics{\n      name\n      type {\n        module\n        class\n      }\n    }\n  }\n`\n\nexport {topics as default}","import { gql } from 'apollo-angular';\n\nconst deviceMessage  = gql`\nsubscription deviceMessage {\n  deviceMessage{\n    timestamp\n    topic \n    msg{\n      header{\n        id\n        timestamp\n      \tseq\n        node\n      }\n      id\n      data\n    }\n    type{\n      module\n      class\n    }\n  }\n}\n`\n\nexport {deviceMessage as default}","import { gql } from 'apollo-angular';\n\nconst geographicCoordinates = gql`subscription geographicCoordinates {\n    geographicCoordinates{\n      longitude\n      latitude\n    }\n  }`\n\n  export {geographicCoordinates as default}","import DEVICE_MESSAGE_SUBSCRIPTION from './device-message'\nimport GEOGRAPHIC_COORDINATES from './geographic-coordinates'\n\nexport {\n    DEVICE_MESSAGE_SUBSCRIPTION\n    , GEOGRAPHIC_COORDINATES\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","\n<div class=\"content\">\n  <app-top-navigation></app-top-navigation>\n  <div class=\"content__main\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutes } from './routes/app-routes.module'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\nimport { APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\nimport { split, ApolloClientOptions } from '@apollo/client/core';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { InMemoryCache } from '@apollo/client/core';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// Enviornment Variables\nimport { environment } from '../environments/environment';\n\n\n// Google OAuth\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\nimport { GoogleLoginProvider } from 'angularx-social-login';\nimport { AuthGuardService } from './services/auth/auth-guard.service'\n\n// Material\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n// \n\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { DevicesComponent } from './pages/devices/devices.component';\nimport { GraphQLModule } from './modules/graphql.module';\nimport { TopNavigationComponent } from './components/top-navigation/top-navigation.component';\n\n// Service\nimport { MenuService } from './services/navigation/menu.service'\nimport { GeolocationService } from './services/geolocation/geolocation.service';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { DeviceTopicComponent } from './pages/devices/pages/device-topic/device-topic.component';\nimport { DeviceLiveComponent } from './pages/devices/pages/device-live/device-live.component';\nimport { StarfireComponent } from './components/topics/starfire/starfire.component';\nimport { ImagePairComponent } from './components/topics/image-pair/image-pair.component';\nimport { ImageComponent } from './components/image/image.component';\nimport { ImageSegmentationComponent } from './components/topics/image-segmentation/image-segmentation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    LoginComponent,\n    DashboardComponent,\n    ProfileComponent,\n    LayoutComponent,\n    DevicesComponent,\n    TopNavigationComponent,\n    ErrorComponent,\n    DeviceTopicComponent,\n    DeviceLiveComponent,\n    StarfireComponent,\n    ImagePairComponent,\n    ImageComponent,\n    ImageSegmentationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutes,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    // Material\n    MatListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatGridListModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    // \n    GraphQLModule,\n    SocialLoginModule,\n  ],\n  providers: [{\n    provide: 'SocialAuthServiceConfig',\n    useValue: {\n      autoLogin: true,\n      providers: [\n        {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          provider: new GoogleLoginProvider(\n            environment.googleAuthClientId\n          )\n        }\n      ]\n    } as SocialAuthServiceConfig,\n  },\n  {\n    provide: APOLLO_OPTIONS,\n    // @ts-ignore\n    useFactory(httpLink: HttpLink): ApolloClientOptions {\n      // Create an http link:\n      const http = httpLink.create({\n        uri: `${location.protocol}//${location.host}${environment.serviceEndpoint}`,\n      });\n\n      \n      // Create a WebSocket link:\n      const ws = new WebSocketLink({\n        uri: `${location.protocol === \"https:\" ? \"wss:\" : \"ws:\"}//${location.host}${environment.serviceEndpoint}`,\n        options: {\n          reconnect: true,\n        },\n      });\n      const link = split(\n        ({ query }) => {\n          let definition = getMainDefinition(query);\n          return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n        },\n        ws,\n        http,\n      );\n\n      const defaultOptions = {\n        watchQuery: {\n          fetchPolicy: 'network-only',\n          errorPolicy: 'ignore',\n        },\n        query: {\n          fetchPolicy: 'network-only',\n          errorPolicy: 'all',\n        },\n        subscription: {\n          fetchPolicy: 'network-only',\n          errorPolicy: 'all',\n        },\n      }\n\n      return {\n        link,\n        cache: new InMemoryCache(),\n        defaultOptions: defaultOptions,\n        // ... options\n      };\n    },\n    deps: [HttpLink],\n  },\n    MenuService,\n    AuthGuardService,\n    GeolocationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit, AfterViewInit } from '@angular/core';\nimport {v4 as uuid } from 'uuid'\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit, AfterViewInit {\n\n  imageId: string = uuid()\n  resultId: string = uuid()\n  lensId: string = uuid()\n\n  private result: any\n  private lens: any\n  private img:  any\n  private cx: any\n  private cy: any\n\n  @Input() src:string = \"\"\n\n  constructor( ) { }\n\n  private movelens(e:any) {\n    let pos, x, y;\n    /* Prevent any other actions that may occur when moving over the image */\n    e.preventDefault();\n    /* Get the cursor's x and y positions: */\n    pos = this.getCursorPos(e);\n    /* Calculate the position of the this.lens: */\n    x = pos.x - (this.lens.offsetWidth / 2);\n    y = pos.y - (this.lens.offsetHeight / 2);\n    /* Prevent the this.lens from being positioned outside the image: */\n    if (x > this.img.width - this.lens.offsetWidth) {x = this.img.width - this.lens.offsetWidth;}\n    if (x < 0) {x = 0;}\n    if (y > this.img.height - this.lens.offsetHeight) {y = this.img.height - this.lens.offsetHeight;}\n    if (y < 0) {y = 0;}\n    /* Set the position of the this.lens: */\n    this.lens.style.left = x + \"px\";\n    this.lens.style.top = y + \"px\";\n    /* Display what the this.lens \"sees\": */\n    this.result.style.backgroundPosition = \"-\" + (x * this.cx) + \"px -\" + (y * this.cy) + \"px\";\n  }\n  private getCursorPos(e:any) {\n    var a, x = 0, y = 0;\n    e = e || window.event;\n    /* Get the x and y positions of the image: */\n    a = this.img.getBoundingClientRect();\n    /* Calculate the cursor's x and y coordinates, relative to the image: */\n    x = e.pageX - a.left;\n    y = e.pageY - a.top;\n    /* Consider any page scrolling: */\n    x = x - window.pageXOffset;\n    y = y - window.pageYOffset;\n    return {x : x, y : y};\n  }\n\n  private setupZoom(){\n    this.result = document.getElementById(this.resultId);\n    /* Create this.lens: */\n    this.lens = document.getElementById(this.lensId);\n    /* Insert this.lens: */\n    this.img.parentElement.insertBefore(this.lens, this.img);\n    /* Calculate the ratio between this.result DIV and this.lens: */\n    this.cx = +(window.getComputedStyle(this.result).width.replace(\"px\",\"\")) / +(window.getComputedStyle(this.lens).width.replace(\"px\",\"\"));\n    this.cy = +(window.getComputedStyle(this.result).height.replace(\"px\",\"\")) / +(window.getComputedStyle(this.lens).height.replace(\"px\",\"\"));\n    /* Set background properties for the this.result DIV */\n    this.result.style.backgroundImage = \"url('\" + this.img.src + \"')\";\n    this.result.style.backgroundSize = (this.img.width * this.cx) + \"px \" + (this.img.height * this.cy) + \"px\";\n    /* Execute a function when someone moves the cursor over the image, or the this.lens: */\n    this.lens.addEventListener(\"mousemove\", this.movelens.bind(this));\n    this.img.addEventListener(\"mousemove\",  this.movelens.bind(this));\n    /* And also for touch screens: */\n    this.lens.addEventListener(\"touchmove\",  this.movelens.bind(this));\n    this.img.addEventListener(\"touchmove\",  this.movelens.bind(this));\n  }\n\n  private renderImageZoom (){\n    this.img = document.getElementById(this.imageId);\n    this.img.addEventListener(\"load\", this.setupZoom.bind(this))\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  ngAfterViewInit(){\n    this.renderImageZoom()\n\n  }\n\n\n}\n","<div class=\"img-zoom-container\">\n    <img [src]=\"src\" [id]=\"imageId\"/>\n    <div [id]=\"resultId\" class=\"img-zoom-result\"></div>\n    <div [id]=\"lensId\" class=\"img-zoom-lens\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { faBars} from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n  faBars = faBars\n  showRightNav=false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleSideNav(){\n    this.showRightNav = !this.showRightNav;\n  }\n\n}\n","<div class=\"container__content\">\n    <div class=\"container__content-main\">\n        <router-outlet></router-outlet>\n    </div>\n    <app-navigation></app-navigation>\n</div>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SocialAuthService } from 'angularx-social-login';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n  showLeftNav:boolean | null;\n\n  constructor(\n    private socialAuthService: SocialAuthService,\n    private router: Router\n  ) { \n    this.showLeftNav = null\n  }\n\n  ngOnInit(): void {\n  }\n\n  toggleSideNav(){\n    this.showLeftNav = !this.showLeftNav;\n  }\n\n  ngOnDestroy(){\n    this.showLeftNav = null\n  }\n\n  logOut(): void {\n    this.socialAuthService.signOut();\n    this.router.navigate([\"/login\"])\n  }\n\n}\n","<nav class=\"nav__side-nav\" \n[ngClass]=\"{ show:showLeftNav===true, hide:showLeftNav===false }\">\n    <button class=\"nav__side-nav--toggle-btn\" \n        [ngClass]=\"{ show:showLeftNav===true, hide:showLeftNav===false}\"\n       (click)=\"toggleSideNav()\">\n       <mat-icon matSuffix aria-label=\"toggle mobile menu view\" >{{!showLeftNav ? \"menu\" : \"menu_open\"}}</mat-icon>\n    </button>\n    <mat-list (click)=\"toggleSideNav()\">\n        <a [routerLink]='[\"/\"]' routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\"><mat-list-item>Dashboard</mat-list-item></a> \n        <a [routerLink]='[\"/devices\"]' routerLinkActive=\"active\"><mat-list-item>Devices</mat-list-item></a> \n    </mat-list>\n    <mat-list class=\"nav__side-nav--profile\">\n        <a (click)=\"logOut()\">\n            <mat-list-item>LogOut</mat-list-item>\n        </a>\n    </mat-list>\n</nav>","<nav class=\"nav__top\">\n    <a [routerLink]='[\"/\"]' class=\"nav__logo\" >\n        <img src=\"/assets/brt-icon-sm.png\"/>\n    </a>\n\n    <div *ngIf=\"menu\" class=\"nav__top-menu\" \n        [ngClass]=\"{ show:showRightNav===true, hide:showRightNav===false}\" >\n        <h5 *ngIf=\"menu.header\">{{menu.header}}</h5>\n        <ul *ngIf=\"menu.links.length\" >\n            <li *ngFor=\"let menuItem of menu.links\">\n                <span *ngIf=\"menuItem.callback\">\n                    <a mat-flat-button (click)=\"menuItem.callback($event); toggleSideNav()\" tooltip=\"menuItem.tooltip\"> {{menuItem.label}} </a>\n                </span>\n                <span *ngIf=\"menuItem.url\">\n                    <a mat-flat-button [routerLink]=\"[menuItem.url]\" (click)=\"toggleSideNav()\" tooltip=\"menuItem.tooltip\"> {{menuItem.label}} </a>\n                </span>\n            </li>\n        </ul>\n    </div>\n\n    <button class=\"nav__top-nav--toggle-btn\" \n        *ngIf=\"menu && menu.links.length\"\n        (click)=\"toggleSideNav()\" \n        [ngClass]=\"{ show:showRightNav===true, hide:showRightNav===false}\">\n        <mat-icon matSuffix aria-label=\"toggle mobile menu view\" >\n            {{!showRightNav ? \"menu\" : \"menu_open\"}}\n        </mat-icon>\n    </button>\n</nav>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {MenuService} from \"../../services/navigation/menu.service\"\nimport {IMenu} from \"../../interfaces/navigation/menu\"\n\n@Component({\n  selector: 'app-top-navigation',\n  templateUrl: './top-navigation.component.html',\n  styleUrls: ['./top-navigation.component.scss']\n})\nexport class TopNavigationComponent implements OnInit, OnDestroy {\n\n  menu:any\n  showRightNav:boolean | null;\n\n  constructor(private menuService: MenuService) {\n    this.showRightNav = null\n  }\n\n  ngOnInit(): void {\n    this.showRightNav = null\n\n    this.menuService.menu.subscribe((data)=>{\n      this.menu = data;\n    })\n  }\n\n  toggleSideNav(){\n    this.showRightNav = !this.showRightNav;\n  }\n\n  ngOnDestroy(){\n    this.showRightNav = null\n  }\n\n}\n","import { Component, OnInit, Input, OnDestroy, OnChanges } from '@angular/core';\nimport { Subscription, BehaviorSubject} from 'rxjs';\nimport { v4 as uuid } from \"uuid\"\nimport {ThemePalette} from '@angular/material/core';\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\nimport {ImageService} from 'src/app/services/images/image.service'\nimport {PageEvent} from '@angular/material/paginator';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\n\n\n@Component({\n  selector: 'app-image-pair',\n  templateUrl: './image-pair.component.html',\n  styleUrls: ['./image-pair.component.scss']\n})\nexport class ImagePairComponent implements OnInit, OnDestroy, OnChanges {\n\n  loadedSegmentations:string[] = []\n  querySubscription: Subscription | null =null\n  leftImageUrl:string = \"\"\n  leftImageId:string = uuid()\n  imageHeaderId:number | undefined = undefined\n  rightImageUrl:string = \"\"\n  rightImageId:string = uuid()\n  segmentationTopic:string=\"\"\n  noImage: boolean = false\n  pageSize = 1\n  pagesLength= 0\n  // leftImageUrl$ = new BehaviorSubject<string | null>(this.leftImageUrl);\n  // rightImageUrl$ = new BehaviorSubject<string | null>(this.rightImageUrl);\n  segmentationTopic$ = new BehaviorSubject<string | null>(this.segmentationTopic);\n  // imageHeaderId$ = new BehaviorSubject<number | undefined>(this.imageHeaderId);\n  segmentationToggle = {\n    color:\"primary\",\n    checked:false,\n    disabled: this.loadedSegmentations.length < 2 || this.loadedSegmentations.indexOf(\"no segmentation\") !== -1\n  } \n\n  @Input()   topic: string = \"\";\n  @Input()   cursor: number = 0;\n\n  constructor( \n    private gqlQueryService: GqlQueryService\n    , private imageService : ImageService\n    ) { }\n\n  private getImagePair(argTopic?:string, argCursor?:number): void{\n    const topic = argTopic || this.topic\n    const cursor =  argCursor && argCursor >=0 ? argCursor : this.cursor\n    // this.leftImageUrl$.next(\"\")\n    // this.rightImageUrl$.next(\"\")\n\n\n    if(!topic)\n      return\n\n    this.querySubscription = this.gqlQueryService\n    .getImagePair({topic, cursor})\n    .subscribe(response=>{\n      this.noImage = true\n\n      if(!response.data.imagePair || !response.data.imagePair.length){\n        return;\n      }\n\n      this.noImage = false\n\n      const imagePair = response.data.imagePair[0]\n      this.pageSize = imagePair.pagination.pageSize\n      this.pagesLength = imagePair.pagination.length\n      this.cursor = imagePair.pagination.position\n      this.imageHeaderId = imagePair.msg.header.id\n      this.leftImageUrl = this.imageService.getDataURL(imagePair.msg.left_image)\n      this.rightImageUrl = this.imageService.getDataURL(imagePair.msg.right_image)\n      // this.imageHeaderId$.next(this.imageHeaderId)\n      // this.leftImageUrl$.next(this.leftImageUrl)\n      // this.rightImageUrl$.next(this.rightImageUrl)\n      this.segmentationTopic$.next(this.topic.split(\"/\").slice(0,2).concat([\"segmentation_map\"]).join(\"/\"))\n    })\n\n  }\n\n  toggleSegmentation(event:MatSlideToggleChange){\n    console.log(event)\n    this.segmentationToggle.checked = event.checked\n  }\n\n  getCurrentImage(event:PageEvent) {\n    if( this.cursor !== event.pageIndex ){\n      this.cursor = event.pageIndex\n      this.getImagePair()\n      console.log(event)\n    }\n  }\n\n  onSegmentationLoad(event:any) {\n    switch(event){\n      case \"no segmentation\":\n      case \"loaded\":\n          this.loadedSegmentations.push(event)\n          break;\n      case \"unloaded\":\n          this.loadedSegmentations.pop()\n          break;\n    }\n  }\n\n  ngOnInit(): void {\n   this.getImagePair()\n  }\n\n  ngOnChanges(changes:any){\n    // if (changes.topic.previousValue !== changes.topic.currentValue) {\n    //   this.getImagePair(changes.topic.currentValue)\n    // }\n  }\n\n  ngOnDestroy(): void{\n    this.querySubscription?.unsubscribe()\n  }\n  \n\n}\n","<!-- <mat-paginator [length]=\"pagesLength\"\n    [pageSize]=\"pageSize\"\n    (page)=\"getCurrentImage($event)\">\n</mat-paginator> -->\n<div *ngIf=\"leftImageUrl && rightImageUrl; else loading;\" >\n    <div class=\"grid gap images\">\n        <div class=\"grid__cell\" *ngIf=\"loadedSegmentations.length == 2; else segmentationLoader;\">\n            <mat-slide-toggle \n                class=\"segmentation-toggle\"\n                [color]=\"segmentationToggle.color\"\n                [checked]=\"segmentationToggle.checked\"\n                [disabled]=\"loadedSegmentations.length < 2\"\n                (change)=\"toggleSegmentation($event)\">\n                Segmentation\n            </mat-slide-toggle>\n        </div> \n        <ng-template #segmentationLoader>\n            <div class=\"grid__cell\">\n                <mat-progress-bar mode=\"indeterminate\">\n                    Segmentation\n                </mat-progress-bar>\n            </div>\n        </ng-template>\n        <div class=\"grid__cell\">\n            <div class=\"segmentation\" [ngStyle]=\"{visibility: segmentationToggle.checked ? 'visible' : 'hidden'} \">\n                <app-image-segmentation (load)=\"onSegmentationLoad($event)\" [imageId]=\"imageHeaderId\" [topic]=\"segmentationTopic$ | async\" ></app-image-segmentation>\n            </div>\n            <div class=\"grid__cell--label\">Left</div>\n            <img [src]=\"leftImageUrl\" [id]=\"leftImageId\">\n    \n        </div>\n        <div class=\"grid__cell\">\n            <div class=\"segmentation\" [ngStyle]=\"{visibility: segmentationToggle.checked ? 'visible' : 'hidden'} \">\n                <app-image-segmentation (load)=\"onSegmentationLoad($event)\" [imageId]=\"imageHeaderId\" [topic]=\"segmentationTopic$ | async\" ></app-image-segmentation>\n            </div>\n            <div class=\"grid__cell--label\">Right</div>\n            <img [src]=\"rightImageUrl\" [id]=\"rightImageId\">\n        </div>\n    </div>\n</div>\n\n<ng-template #loading>\n    <span *ngIf=\"noImage; else loader\">\n        No image were found.\n    </span>\n    <ng-template #loader>\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </ng-template>\n</ng-template>","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChange } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { v4 as uuid } from \"uuid\"\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service'\nimport { ImageService } from 'src/app/services/images/image.service'\n\n@Component({\n  selector: 'app-image-segmentation',\n  templateUrl: './image-segmentation.component.html',\n  styleUrls: ['./image-segmentation.component.scss']\n})\nexport class ImageSegmentationComponent implements OnInit, OnDestroy, OnChanges {\n\n  querySubscription: Subscription | null = null\n  imageUrl: string | null = \"\"\n  noImage: boolean = false\n  imgId: string | null = uuid()\n\n\n  @Input() topic: string | null | undefined = \"\";\n  @Input() cursor: number = 0;\n  @Input() imageId: number | null | undefined;\n  @Output(\"load\") load =  new EventEmitter<string>()\n\n  constructor(\n    private gqlQueryService: GqlQueryService\n    , private imageService: ImageService\n  ) { }\n\n  private getSegmentationImage(argTopic?: string | null | undefined, argImageId?: number | undefined): void{\n    const topic:string | null | undefined = argTopic || this.topic\n    const imageId:number | null | undefined = argImageId || this.imageId\n\n    if (!imageId || !topic){\n      this.load.emit(\"unloaded\")\n      return;\n    }\n\n    this.querySubscription?.unsubscribe()\n    this.querySubscription = this.gqlQueryService\n    .getSegmentationMap({ topic, cursor: this.cursor, id: imageId })\n    .subscribe(response => {\n      if (!response.data.segmentationMap || !response.data.segmentationMap.length) {\n        this.noImage = true\n        this.load.emit(\"no segmentation\")\n        return;\n      }\n\n      const segmentationMap = response.data.segmentationMap[0]\n\n      this.imageUrl = this.imageService.getDataURL({...segmentationMap.msg.image, isSegmentation:true})\n      this.load.emit(\"loaded\")\n    })\n  }\n\n  ngOnInit(): void {\n    this.getSegmentationImage()\n  }\n\n  ngOnChanges(changes: any) {\n    if ((changes.topic.previousValue !== changes.topic.currentValue) \n    || (changes.imageId.previousValue !== changes.imageId.currentValue)) {\n      this.getSegmentationImage(changes.topic.currentValue, changes.imageId.currentValue)\n    }\n  }\n\n\n  ngOnDestroy() {\n    this.querySubscription?.unsubscribe()\n  }\n\n}\n","<div *ngIf=\"imageUrl; else loading\"class=\"segmentation-image \" [ngStyle]=\"{ 'background-image': 'url(' + imageUrl + ')'}\">\n    <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" [id]=\"imgId\">\n</div>\n<ng-template #loading>\n    <span *ngIf=\"noImage; else loader\">\n    </span>\n    <ng-template #loader>\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </ng-template>\n</ng-template>","import { Component, Input, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators'\nimport {v4 as uuid} from 'uuid'\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport {GeolocationService} from 'src/app/services/geolocation/geolocation.service'\n\n@Component({\n  selector: 'app-starfire',\n  templateUrl: './starfire.component.html',\n  styleUrls: ['./starfire.component.scss']\n})\nexport class StarfireComponent implements OnInit, OnDestroy,AfterViewInit {\n  querySubscription: Subscription |null =null\n  mapNodeId: string = uuid()\n\n  @Input() playback: string = \"static\"\n  @Input() showTractor: boolean = false\n  @Input() zoom: number = 15\n  @Input() coordinates: number[][] | undefined;\n  @Input() lineColor: string | undefined;\n  @Input() lineSize:  number | undefined\n\n  constructor(\n    private gqlQueryService: GqlQueryService\n    , private gisService: GeolocationService\n    , private graphQLSubscription: GqlSubscriptionService) { }\n\n  \n  private async setupDynamicMap(config:any){\n    return this.gisService.getLiveMap(config)\n  }\n\n  private async setupStaticMap(coordinates?:number[][]){\n    this.gisService[this.playback ===\"static\" ? \"getStaticMap\" : \"getReplayMap\"]({\n      container:this.mapNodeId\n      , coordinates: coordinates || this.coordinates || []\n      , showTractor:this.showTractor\n      , zoom:this.zoom\n      , lineColor:this.lineColor\n      , lineSize:this.lineSize \n    })\n  }\n\n  private async generateLiveMap(){\n    const config = {\n      container:this.mapNodeId\n      , showTractor:this.showTractor\n      , coordinates:[]\n      , zoom:this.zoom\n    }\n\n    this.setupDynamicMap(config).then((mapConfig:any)=>{\n      const {map, geoJson, image} = mapConfig\n      this.querySubscription = this.graphQLSubscription\n        .getGeolocationStream()\n        .subscribe(\n        (response:any) => {\n          const {longitude,latitude} = (response.data.geographicCoordinates as {longitude:number, latitude:number})\n          const newCoordinates = [longitude,latitude]\n\n          // @ts-ignore\n          geoJson.data.features[0].geometry.coordinates.push(newCoordinates)\n          map.getSource('trace').setData(geoJson.data);\n\n          if (this.showTractor){\n            const imagePosition = this.gisService.getFeaturesGEOJSON({\n              type: 'geojson'\n              , dataType: 'FeatureCollection'\n              , geometryType: 'Feature'\n              , coordinateType: \"LineString\"\n              , coordinates: [newCoordinates]\n            })\n            map.getSource(image).setData(imagePosition.data);\n          }\n\n          map.panTo(newCoordinates);\n          \n        },\n        error => {\n          console.log(error);\n        }\n      )\n    })\n  }\n\n  private async generateStaticMap(){\n    if(this.coordinates instanceof Array )\n      this.setupStaticMap()\n    else\n      this.querySubscription = this.gqlQueryService\n        .getGeolocaton()\n        .pipe(map((geoData:any)=>\n          !geoData.loading ?\n            geoData\n            .data\n            .geolocation\n            .map((geo:any)=>\n              geo.msg ? \n                [geo.msg.longitude, geo.msg.latitude] \n                : [])\n          : \n          []\n        ))\n        .subscribe((coordinates:any)=>{\n          if(coordinates.length)\n            this.setupStaticMap(coordinates)\n        })\n  }\n\n  ngOnInit(): void {  }\n\n  ngAfterViewInit(){\n    switch(this.playback){\n      case \"static\":\n      case \"replay\":\n        this.generateStaticMap()\n        break;\n      case \"live\":\n        this.generateLiveMap()    \n        break;\n      default:\n        break;\n    }\n  }\n\n  ngOnDestroy(){\n    this.querySubscription?.unsubscribe()\n  }\n\n}\n","<div class=\"map\" [id]=\"mapNodeId\"></div>\n","import {NgModule} from '@angular/core';\nimport {APOLLO_OPTIONS} from 'apollo-angular';\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\n\nconst uri = 'http://localhost:4000/graphql'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  constructor( private gqlSubsctiption: GqlSubscriptionService) { }\n\n  ngOnInit(): void {\n    this.gqlSubsctiption.getDeviceStream().subscribe((response:any)=>{\n      // if(response.data.deviceMessage.topic && response.data.deviceMessage.topic.includes(\"_map\"))\n        console.log(JSON.stringify(response.data, null, \" \"))\n    })\n  }\n\n  ngAfterViewInit(){}\n\n}\n","<p>dashboard works!</p>\n<div id=\"map\"></div>","<div class=\"header\">\n    <div class=\"header__title\">\n        <h1>\n            Devices  \n        </h1>\n        <button \n            class=\"live-pulse\"\n            *ngIf=\"!rootPath; else topic\"\n            mat-mini-fab color=\"warn\" \n            aria-label=\"Section is live\">\n        </button>\n    </div>\n      <ng-template #topic>\n          <div class=\"header__topic\">\n            <b>Topic: </b>{{rootPath}}\n          </div>\n      </ng-template>\n</div>\n<hr/>\n<router-outlet></router-outlet>\n\n","import { Component, OnInit, OnDestroy, DoCheck, OnChanges } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { MenuService } from 'src/app/services/navigation/menu.service';\nimport { IMenu, IMenuLinks } from 'src/app/interfaces/navigation/menu'\nimport { Router, ActivatedRoute } from '@angular/router'\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\n\nconst SubscriptionQL = require('src/app/graphql/query-syntax/subscriptions')\nconst QueryQL = require(\"src/app/graphql/query-syntax/query\")\n\n\n@Component({\n  selector: 'app-devices',\n  templateUrl: './devices.component.html',\n  styleUrls: ['./devices.component.scss']\n})\nexport class DevicesComponent implements OnInit, OnDestroy, DoCheck, OnChanges {\n\n  rootPath: string = \"\";\n\n  constructor(\n     private menuService: MenuService\n    , private router: Router\n    , private route: ActivatedRoute\n    , private graphqlQueryService: GqlQueryService) {\n  }\n\n  private loadMenu(obj:any) {\n    const { data, loading } = obj\n\n    if (!loading)\n      this.menuService.menu.next({\n        header: \"Device Topics\",\n        links: data.topics.map((topic: any) => {\n          return {\n            label: topic.name,\n            callback:()=> {\n              this.loadTopic(topic)\n            }\n          }\n        })\n      }\n      )\n  }\n  ngOnInit(): void {\n    this.rootPath = \"\"\n    this.graphqlQueryService\n      .getTopics()\n      .subscribe(data=>this.loadMenu(data));\n  }\n\n  loadTopic(topic:any){\n    this.router.navigateByUrl(``, {skipLocationChange: false})\n    .then(() => this.router.navigate(\n      [this.route.snapshot.routeConfig?.path,...topic.name.replace(/\\//,\"\").split(\"/\")]\n    ))\n  }\n\n  ngOnDestroy() {\n    this.menuService.menu.next(null)\n  }\n\n  ngDoCheck(){\n    // @ts-ignore\n    this.rootPath = this.route.snapshot._routerState.url.replace(`/${this.route.snapshot.routeConfig?.path}`,\"\")\n  }\n\n  ngOnChanges(){\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {GeolocationService} from 'src/app/services/geolocation/geolocation.service'\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nconst mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\n\n@Component({\n  selector: 'app-device-live',\n  templateUrl: './device-live.component.html',\n  styleUrls: ['./device-live.component.scss']\n})\nexport class DeviceLiveComponent implements OnInit, OnDestroy {\n\n  geoUpdateSubscription:Subscription | null = null\n  constructor(private gisService: GeolocationService, private graphQLSubscription: GqlSubscriptionService) { }\n\n  async ngOnInit() {\n    // const {map,geoJson} = await this.gisService.getLiveMap(\n    //   {\n    //     container:\"map1\"\n    //     , showTractor:true\n    //     , coordinates:[]\n    //     , zoom:15}\n    // )\n\n    // this.geoUpdateSubscription = this.graphQLSubscription.getGeolocationStream().subscribe(\n    //   (response:any) => {\n    //     console.log(response.data.geographicCoordinates)\n    //     const {longitude,latitude} = (response.data.geographicCoordinates as {longitude:number, latitude:number})\n\n    //     // @ts-ignore\n    //     geoJson.data.features[0].geometry.coordinates.push([longitude,latitude])\n    //     map.getSource('trace').setData(geoJson.data);\n    //     map.panTo([longitude,latitude]);\n    //   },\n    //   error => {\n    //     console.log(error);\n    //   }\n    // )\n  }\n\n  ngOnDestroy(): void{\n    // this.geoUpdateSubscription?.unsubscribe()\n  }\n\n}\n","<div class=\"grid gap\">\n    <div class=\"grid__cell\">\n        <div class=\"grid__cell--label\">Geolocation</div>\n        <app-starfire playback=\"live\" [showTractor]=true [zoom]=20></app-starfire>\n    </div>\n    <div class=\"grid__cell\">\n        <div class=\"grid__cell--label\">Images</div>\n    </div>\n</div>","<div [ngSwitch]=\"currentRoute\">\n    <div *ngSwitchCase=\"'starfire'\">\n        <div class=\"grid gap\">\n            <div class=\"grid__cell\">\n                <div class=\"grid__cell--label\">Static</div>\n                <app-starfire [showTractor]=true [zoom]=20></app-starfire>\n            </div>\n            <div class=\"grid__cell\">\n                <div class=\"grid__cell--label\">Replay</div>\n                <app-starfire playback=\"replay\" [showTractor]=true [zoom]=30></app-starfire>\n            </div>\n        </div>\n    </div>\n    <div *ngSwitchCase=\"'front_center/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'front_right/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'front_left/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'front_left/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'side_right/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'side_right/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'rear/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'rear/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'side_left/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>  \n    <div *ngSwitchCase=\"'side_left/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div> \n    <div *ngSwitchCase=\"'front_right/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div> \n    <div *ngSwitchCase=\"'front_center/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div> \n    <div *ngSwitchCase=\"'front_right/segmentation_map'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div> \n    <div *ngSwitchDefault>Coming Soon! {{currentRoute}}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router'\n\n@Component({\n  selector: 'app-device-topic',\n  templateUrl: './device-topic.component.html',\n  styleUrls: ['./device-topic.component.scss']\n})\nexport class DeviceTopicComponent implements OnInit {\n  currentRoute: string =  \"\"\n\n  constructor( private route: ActivatedRoute) { \n  }\n\n  ngOnInit(): void {\n    this.currentRoute =  (this.route.url as any).value.join(\"/\")\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SocialAuthService, GoogleLoginProvider, SocialUser } from 'angularx-social-login';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  googleUser: SocialUser | undefined;\n  isLoggedin: boolean = false;\n\n  constructor(\n    private socialAuthService: SocialAuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.socialAuthService.authState.subscribe((user) => {\n      this.googleUser = user;\n      this.isLoggedin = (user != null);\n      if (this.isLoggedin){\n        this.router.navigate([\"/\"])\n      }\n      // else\n      //   this.snackBar.open(\"LogIn Failed\");\n\n    });\n  }\n\n  loginWithGoogle(): void {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  logOut(): void {\n    this.socialAuthService.signOut();\n  }\n\n}\n","<div class=\"login\">\n    <mat-card class=\"login__card\">\n                <div class=\"login__card--logo\">\n                    <img src=\"/assets/brt-icon-sm.png\"/>\n                </div>\n                <div>\n                    <mat-divider></mat-divider>\n\n                </div>\n                <mat-card-actions>\n                    <button mat-flat-button color=\"primary\" *ngIf=\"isLoggedin === false\" type=\"button\" (click)=\"loginWithGoogle()\">\n                        Login with Google\n                        <mat-icon matSuffix aria-label=\"Log into Google\" >login</mat-icon>\n                    </button>                    \n                </mat-card-actions>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","import { RouterModule, Routes } from \"@angular/router\"\nimport { NgModule } from \"@angular/core\"\nimport { AppComponent } from '../app.component'\nimport { LoginComponent } from \"../pages/login/login.component\"\nimport { DashboardComponent } from \"../pages/dashboard/dashboard.component\"\nimport { ProfileComponent } from \"../pages/profile/profile.component\"\nimport { LayoutComponent } from \"../components/layout/layout.component\"\nimport { DevicesComponent } from \"../pages/devices/devices.component\"\nimport { AuthGuardService } from \"../services/auth/auth-guard.service\"\nimport { ErrorComponent } from \"src/app/pages/error/error.component\"\nimport { DeviceTopicComponent } from \"src/app/pages/devices/pages/device-topic/device-topic.component\"\nimport { DeviceLiveComponent } from \"../pages/devices/pages/device-live/device-live.component\"\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: LayoutComponent,\n        canActivate: [AuthGuardService],\n        children: [\n            {\n                path: \"\",\n                component: DashboardComponent\n            },\n            {\n                path: \"profile\",\n                component: ProfileComponent\n            },\n            {\n                path: \"devices\",\n                component: DevicesComponent,\n                children: [\n                    {\n                        path: \"\",\n                        component: DeviceLiveComponent\n                    },\n                    {\n                        path: \"**\"\n                        , component: DeviceTopicComponent\n                    }\n                ]\n            },\n        ]\n    },\n    {\n        path: \"login\",\n        component: LoginComponent\n    }\n\n]\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutes { }","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router'\nimport { SocialAuthService, GoogleLoginProvider, SocialUser } from 'angularx-social-login';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    private socialAuthService: SocialAuthService,\n    private router: Router\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):Observable<boolean> | Promise<boolean> | boolean{\n    return new Promise((resolve)=>{\n      this.socialAuthService.authState.subscribe((user) => {\n        if(user != null)\n          resolve(user != null)\n        else\n          this.router.navigate([\"/login\"])  \n      });\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Apollo, gql } from 'apollo-angular';\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { environment } from '../../../environments/environment'\nimport { IGeolocationConfig, IGeoJSONArgs, IAddImageArgs, IPaintLine } from '../../interfaces/geolocation/geolocation'\n// import {geographicCoordinates} from '../../graphql/query-syntax/subscriptions/geographic-coordinates'\n\nconst mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\nmapboxgl.accessToken = environment.mapboxAPIKey\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n  private readonly mapboxgl = mapboxgl\n  private tractorName:string = 'tractor'\n\n  constructor(private apollo: Apollo) {\n    mapboxgl.accessToken = environment.mapboxAPIKey\n  }\n\n\n  private setupMap(container: string, center: number[] | undefined | null, zoom: number) {\n    return new mapboxgl.Map({\n      container, // container ID\n      style: 'mapbox://styles/mapbox/satellite-v9', // style URL\n      center, // starting position [lng, lat]\n      zoom // starting zoom\n    });\n  }\n\n  private addImage({ coordinates = [], map }: IAddImageArgs) {\n    map.loadImage(\n      '/assets/tractor.png',\n      (error: any, image: any) => {\n        if (error) throw error;\n\n        // Add the image to the map style.\n        map.addImage(this.tractorName, image);\n\n        // Add a data source containing one point feature.\n        map.addSource(this.tractorName\n          , this.getFeaturesGEOJSON({ type: 'geojson', dataType: 'FeatureCollection', geometryType: 'Feature', coordinates }));\n\n        // Add a layer to use the image to represent the data.\n        map.addLayer({\n          'id': 'points',\n          'type': 'symbol',\n          'source': this.tractorName, // reference the data source\n          'layout': {\n            'icon-image': this.tractorName, // reference the image\n            'icon-size': 0.05\n          }\n        });\n      });\n  }\n\n  private paintLine(config: IPaintLine, map: any) {\n    const { \n        lineSize = 5\n        , lineColor = \"red\"\n        , source = \"route\" \n      } = config\n\n    map.addLayer({\n      'id': 'route',\n      'type': 'line',\n      'source': source,\n      'layout': {\n        'line-join': 'round',\n        'line-cap': 'round'\n      },\n      'paint': {\n        'line-color': lineColor,\n        'line-width': lineSize,\n        'line-opacity': 0.8\n      }\n    });\n  }\n\n  private onLoadStaticMapHandler(config: IGeolocationConfig, map: any) {\n    const { coordinates\n      , showTractor\n      , lineColor\n      , lineSize \n    } = config\n\n    map.addSource('route'\n      , this.getGEOJSON({ type: \"geojson\", dataType: 'Feature', geometryType: 'LineString', coordinates }));\n\n    if (showTractor)\n      this.addImage({ coordinates: coordinates[coordinates.length - 1], map })\n\n    this.paintLine({ source: \"route\", lineColor, lineSize }, map)\n  }\n\n\n  getGEOJSON(config: IGeoJSONArgs) {\n    const { type, dataType, geometryType, coordinates } = config\n\n    return {\n      'type': type,\n      'data': {\n        'type': dataType,\n        'properties': {},\n        'geometry': {\n          'type': geometryType,\n          'coordinates': coordinates\n        }\n      }\n    }\n  }\n\n   getFeaturesGEOJSON(config: IGeoJSONArgs) {\n    const { type\n      , dataType\n      , geometryType\n      , coordinateType = \"Point\"\n      , coordinates \n    } = config\n\n    return {\n      'type': type,\n      'data': {\n        'type': dataType,\n        'features': [\n          {\n            'type': geometryType,\n            'geometry': {\n              'type': coordinateType,\n              'coordinates': coordinates\n            }\n          }\n        ]\n      }\n    }\n  }\n\n  getStaticMap(config: IGeolocationConfig) {\n    const { container = \"map\"\n            , coordinates = [[]]\n            , center = coordinates[0]\n            , showTractor = false\n            , zoom = 15\n            , lineColor\n            , lineSize \n          } = config\n    const map = this.setupMap(container, center, zoom)\n\n    map.on(\"load\", () => {\n      this.onLoadStaticMapHandler({ container, coordinates, center, showTractor, lineColor, lineSize }, map)\n    })\n\n  }\n\n  getReplayMap(config: IGeolocationConfig): void {\n    const { \n      container = \"map\"\n      , coordinates = [[]]\n      , center = coordinates[0]\n      , showTractor = false\n      , zoom = 20\n      , lineColor\n      , lineSize \n    } = config\n\n    const map = this.setupMap(container, center, zoom)\n    \n    map.on(\"load\", () => {\n      const geoJson = this.getFeaturesGEOJSON({\n        type: 'geojson'\n        , dataType: 'FeatureCollection'\n        , geometryType: 'Feature'\n        , coordinateType: \"LineString\"\n        , coordinates: [coordinates[0]]\n      })\n\n      map.addSource('trace', geoJson);\n      this.paintLine({ source: \"trace\", lineColor, lineSize }, map)\n      if (showTractor)\n        this.addImage({ coordinates, map })\n\n      map.jumpTo({ 'center': coordinates[0], 'zoom': 14 });\n      map.setPitch(30);\n\n      let i = 0;\n      let timer = window.setInterval(() => {\n        if (i < coordinates.length) {\n          geoJson.data.features[0].geometry.coordinates.push(\n            // @ts-ignore\n            coordinates[i]\n          )\n          map.getSource('trace').setData(geoJson.data);\n          map.panTo(coordinates[i]);\n          if (showTractor){\n            const imagePosition = this.getFeaturesGEOJSON({\n              type: 'geojson'\n              , dataType: 'FeatureCollection'\n              , geometryType: 'Feature'\n              , coordinateType: \"LineString\"\n              , coordinates: [coordinates[i]]\n            })\n            map.getSource(this.tractorName).setData(imagePosition.data);\n          }\n          i++;\n        } else {\n          window.clearInterval(timer);\n        }\n      }\n        , 1000);\n    });\n  }\n  \n  getLiveMap(config: IGeolocationConfig): Promise<any>{\n    const { \n      container = \"map\"\n      , coordinates = [[]]\n      , showTractor = false\n      , center\n      , zoom = 20\n      , lineColor\n      , lineSize \n    } = config\n\n    const map = this.setupMap(container, center, zoom)\n\n    return new Promise((resolve,reject)=>{\n      map.on(\"load\", () => {\n        const geoJson = this.getFeaturesGEOJSON({\n          type: 'geojson'\n          , dataType: 'FeatureCollection'\n          , geometryType: 'Feature'\n          , coordinateType: \"LineString\"\n          , coordinates: []\n        })\n        map.addSource('trace', geoJson);\n        this.paintLine({ source: \"trace\", lineColor, lineSize }, map)\n        \n        if (showTractor)\n          this.addImage({ coordinates, map })\n        \n          map.setPitch(30);\n\n        resolve({map, geoJson, image:this.tractorName})\n  \n      });\n    })\n\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Apollo, gql } from 'apollo-angular';\nconst QueryQL = require(\"src/app/graphql/query-syntax/query\")\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GqlQueryService {\n\n  constructor( private graphService: Apollo ) { }\n\n  private basicFilteredQuery (Query:any, variables:any) {\n    return this.graphService\n    .watchQuery<any>({ \n      query: Query, \n      variables\n    })\n    .valueChanges\n  }\n\n  getTopics(){\n    return this.graphService\n      .watchQuery<any>({ query: QueryQL.Topics })\n      .valueChanges\n  }\n\n  getGeolocaton(){\n    return this.graphService\n      .watchQuery<any>({ query: QueryQL.Geolocation })\n      .valueChanges\n  }\n\n  getImagePair(variables:any){\n    return this.basicFilteredQuery(QueryQL.ImagePair, variables)\n  }\n\n  getSegmentationMap(variables:any){\n    return this.basicFilteredQuery(QueryQL.SegmentationMap, variables)\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Apollo, gql } from 'apollo-angular';\nconst SubscriptionQL = require('src/app/graphql/query-syntax/subscriptions')\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GqlSubscriptionService {\n\n  constructor( private graphService: Apollo ) { }\n\n  getDeviceStream(){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.DEVICE_MESSAGE_SUBSCRIPTION\n    })\n  }\n\n  getGeolocationStream(){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.GEOGRAPHIC_COORDINATES\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Image } from 'image-js';\nimport {GetDataUrl} from 'src/app/interfaces/images/args'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n   \n  constructor() { }\n\n\n  private mapRGBChannels(data: number[], index:number, red:number, green:number, blue:number, reverse?:boolean | number){\n    if(!reverse){\n      data[index] =  red;     // red\n      data[index + 1] = green; // green\n      data[index + 2] =  blue; // blue\n    } else {\n      data[index + 2] =  blue; // blue\n      data[index + 1] = green; // green\n      data[index] =  red;     // red\n    }\n  }\n\n  private generateSegmentationColor( data:number[], index:number, step:number, value:number[], reverse?:boolean | number ){\n    const code = value[step]\n\n    switch(code){\n      // ‘Drivable’: (0, 0, 0), # Black\n      case 0: \n        this.mapRGBChannels(data,index, 0, 0, 0, reverse)\n        break;\n      // ‘Obstacle’: (1.0, 0, 0), # Red\n      case 1:\n        this.mapRGBChannels(data,index, 255, 0, 0, reverse)\n        break;\n      // ‘Sky’: (0, 0, 1.0), # Blue\n      case 2:\n        this.mapRGBChannels(data,index, 0, 0, 255, reverse)\n        break; \n      // ‘Trees’: (0, 1.0, 0), # Green\n      case 3:\n        this.mapRGBChannels(data,index, 0, 255, 0, reverse)\n        break;\n      // ‘Implement’: (1.0, 1.0, 0.0), # Yellow \n      case 4:\n        this.mapRGBChannels(data,index, 255, 255, 0, reverse)\n        break;\n      // ‘Human’: (0.0, 1.0, 1.0), # Teal\n      case 5:\n        this.mapRGBChannels(data,index, 0, 255, 255, reverse)\n        break;      \n      }\n\n    data[index + 3] =  !code ? 0 : 125;  // alpha\n  }\n\n  private generateRgbColor(data:number[], index:number, step:number, value:number[], reverse:boolean | number){\n    this.mapRGBChannels(data,index, value[step], value[step + 1], value[step + 2], reverse)\n    data[index + 3] = 255;  // alpha\n  }\n\n  private reMapData(config:GetDataUrl){\n    const {width=0, height=0, step=1, is_bigendian=0, data=[], bitDepth=8, isSegmentation=false} = config\n    const parsedData:number[] =[]\n    let i = 0, j, y = 0, x;\n\n    while (y < height) {\n        j = y * step;\n        for (x = 0; x < width; x++) {   \n            \n          if(isSegmentation)\n            this.generateSegmentationColor(parsedData, i, j, data, is_bigendian)\n          else\n            this.generateRgbColor(parsedData, i, j, data, is_bigendian)\n            i += 4;\n            j += 3;\n        }\n        \n        y++;\n    }\n\n    return new Image(\n      width,\n      height,\n      parsedData,\n      {\n        bitDepth: 8,\n      }\n    )\n  }\n\n  getDataURL(config:GetDataUrl): string{\n    return this.reMapData(config).toDataURL()\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {IMenu} from \"../../interfaces/navigation/menu\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  menu:Subject<IMenu | null> = new Subject<IMenu |  null>();\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nimport sharedConfig from './shared.confg'\n\nexport const environment = {\n  production: false,\n  ...sharedConfig\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","const sharedConfig =  {\n    googleAuthClientId:'1068443878218-kk375e4311cc3r2rk3b0hn9ukm900tjo.apps.googleusercontent.com',\n    mapboxAPIKey:\"pk.eyJ1IjoiYW50Ymx1ZXJpdmVydGVjaCIsImEiOiJja295a3IwemowbjMwMndwZ2RkdHY2bmJjIn0.xpY0kRQNFTeFgc5l6hqRtQ\",\n    serviceEndpoint:\"/graphql\",\n}\n\nexport {sharedConfig as default}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}