{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/graphql/query-syntax/query/detection/index.js","./src/app/graphql/query-syntax/query/detection/objectByVehicleId.js","./src/app/graphql/query-syntax/query/geolocation/byId.js","./src/app/graphql/query-syntax/query/geolocation/byVehicleIdDateTimestamp.js","./src/app/graphql/query-syntax/query/geolocation/index.js","./src/app/graphql/query-syntax/query/geolocation/previousLocation.js","./src/app/graphql/query-syntax/query/images/imagePair.js","./src/app/graphql/query-syntax/query/images/index.js","./src/app/graphql/query-syntax/query/images/previewByHeaderId.js","./src/app/graphql/query-syntax/query/images/previewByTopicName.js","./src/app/graphql/query-syntax/query/images/previewByVehicleId.js","./src/app/graphql/query-syntax/query/images/previewByVehicleIdTopicId.js","./src/app/graphql/query-syntax/query/images/previewDetailsByVehicleId.js","./src/app/graphql/query-syntax/query/images/segmentationMap.js","./src/app/graphql/query-syntax/query/images/segmentationMapByHeaderId.js","./src/app/graphql/query-syntax/query/index.js","./src/app/graphql/query-syntax/query/logging/index.js","./src/app/graphql/query-syntax/query/logging/loggingNodeTypes.js","./src/app/graphql/query-syntax/query/logging/loggingStatusDetection.js","./src/app/graphql/query-syntax/query/logging/queryBuilders/loggingQueryBuilder.js","./src/app/graphql/query-syntax/query/logging/queryBuilders/partials/logging.js","./src/app/graphql/query-syntax/query/logging/queryBuilders/partials/objectDetection.js","./src/app/graphql/query-syntax/query/logging/queryBuilders/partials/vehicleStatus.js","./src/app/graphql/query-syntax/query/notifications/alerts.js","./src/app/graphql/query-syntax/query/notifications/index.js","./src/app/graphql/query-syntax/query/status/index.js","./src/app/graphql/query-syntax/query/status/vehicleStatus.js","./src/app/graphql/query-syntax/query/topics/byCategoryVehicleId.js","./src/app/graphql/query-syntax/query/topics/index.js","./src/app/graphql/query-syntax/query/topics/topics-by-vehicle-id.js","./src/app/graphql/query-syntax/query/topics/topics.js","./src/app/graphql/query-syntax/query/vehicles/all.js","./src/app/graphql/query-syntax/query/vehicles/by-id.js","./src/app/graphql/query-syntax/query/vehicles/index.js","./src/app/graphql/query-syntax/query/vehicles/offline.js","./src/app/graphql/query-syntax/query/vehicles/online.js","./src/app/graphql/query-syntax/query/vehicles/onlineOrOfflineById.js","./src/app/graphql/query-syntax/subscriptions/Notifications/alerts.js","./src/app/graphql/query-syntax/subscriptions/Notifications/index.js","./src/app/graphql/query-syntax/subscriptions/detection/index.js","./src/app/graphql/query-syntax/subscriptions/detection/objectByVehicleId.js","./src/app/graphql/query-syntax/subscriptions/device-message.js","./src/app/graphql/query-syntax/subscriptions/geolocation/index.js","./src/app/graphql/query-syntax/subscriptions/geolocation/vehicles.js","./src/app/graphql/query-syntax/subscriptions/images/index.js","./src/app/graphql/query-syntax/subscriptions/images/previewImageByVehicleIdTopicId.js","./src/app/graphql/query-syntax/subscriptions/images/previewImagesByVehicleId.js","./src/app/graphql/query-syntax/subscriptions/index.js","./src/app/graphql/query-syntax/subscriptions/logging/byVehicleId.js","./src/app/graphql/query-syntax/subscriptions/logging/index.js","./src/app/graphql/query-syntax/subscriptions/vehicles-online.js","./src/app/graphql/query-syntax/subscriptions/vehicles/index.js","./src/app/graphql/query-syntax/subscriptions/vehicles/online.js","./src/app/graphql/query-syntax/subscriptions/vehicles/onlineOrOfflineById.js","./src/app/graphql/query-syntax/subscriptions/vehicles/status.js","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/core/medallion/medallion.component.html","./src/app/components/core/medallion/medallion.component.ts","./src/app/components/images/image/image.component.ts","./src/app/components/images/image/image.component.html","./src/app/components/images/rgb-image/rgb-image.component.ts","./src/app/components/images/rgb-image/rgb-image.component.html","./src/app/components/images/segmentation-image/segmentation-image.component.ts","./src/app/components/images/segmentation-image/segmentation-image.component.html","./src/app/components/layout/layout.component.ts","./src/app/components/layout/layout.component.html","./src/app/components/modals/image-expansion/image-expansion.component.ts","./src/app/components/modals/image-expansion/image-expansion.component.html","./src/app/components/modals/object-detection-detail/object-detection-detail.component.ts","./src/app/components/modals/object-detection-detail/object-detection-detail.component.html","./src/app/components/modals/vehicle-status-detail/vehicle-status-detail.component.ts","./src/app/components/modals/vehicle-status-detail/vehicle-status-detail.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/components/table/table-utils.ts","./src/app/components/top-navigation/top-navigation.component.html","./src/app/components/top-navigation/top-navigation.component.ts","./src/app/components/topics/geolocation/starfire/starfire.component.ts","./src/app/components/topics/geolocation/starfire/starfire.component.html","./src/app/components/topics/images/image-pair/image-pair.component.ts","./src/app/components/topics/images/image-pair/image-pair.component.html","./src/app/components/topics/images/image-segmentation/image-segmentation.component.ts","./src/app/components/topics/images/image-segmentation/image-segmentation.component.html","./src/app/components/topics/images/preview/preview.component.ts","./src/app/components/topics/images/preview/preview.component.html","./src/app/components/topics/images/stop-images/stop-images.component.ts","./src/app/components/topics/images/stop-images/stop-images.component.html","./src/app/components/topics/vehicles/vehicle-mission-stats/vehicle-mission-stats.component.html","./src/app/components/topics/vehicles/vehicle-mission-stats/vehicle-mission-stats.component.ts","./src/app/components/topics/vehicles/vehicle-status/vehicle-status.component.ts","./src/app/components/topics/vehicles/vehicle-status/vehicle-status.component.html","./src/app/components/topics/vehicles/vehicles-offline/vehicles-offline.component.ts","./src/app/components/topics/vehicles/vehicles-offline/vehicles-offline.component.html","./src/app/components/topics/vehicles/vehicles-online/vehicles-online.component.ts","./src/app/components/topics/vehicles/vehicles-online/vehicles-online.component.html","./src/app/modules/graphql.module.ts","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/vehicle/pages/vehicle-geolocation/vehicle-geolocation.component.ts","./src/app/pages/vehicle/pages/vehicle-geolocation/vehicle-geolocation.component.html","./src/app/pages/vehicle/pages/vehicle-images/vehicle-images.component.ts","./src/app/pages/vehicle/pages/vehicle-images/vehicle-images.component.html","./src/app/pages/vehicle/pages/vehicle-logging/filter.service.ts","./src/app/pages/vehicle/pages/vehicle-logging/vehicle-logging.component.ts","./src/app/pages/vehicle/pages/vehicle-logging/vehicle-logging.component.html","./src/app/pages/vehicle/pages/vehicle-overview/vehicle-overview.component.html","./src/app/pages/vehicle/pages/vehicle-overview/vehicle-overview.component.ts","./src/app/pages/vehicle/pages/vehicle-system/vehicle-system.component.ts","./src/app/pages/vehicle/pages/vehicle-system/vehicle-system.component.html","./src/app/pages/vehicle/services/current-topic.service.ts","./src/app/pages/vehicle/vehicle.component.ts","./src/app/pages/vehicle/vehicle.component.html","./src/app/pages/vehicles/pages/vehicle-list/vehicle-list.component.ts","./src/app/pages/vehicles/pages/vehicle-list/vehicle-list.component.html","./src/app/pages/vehicles/pages/vehicle-live/vehicle-live.component.ts","./src/app/pages/vehicles/pages/vehicle-live/vehicle-live.component.html","./src/app/pages/vehicles/pages/vehicle-topic/vehicle-topic.component.html","./src/app/pages/vehicles/pages/vehicle-topic/vehicle-topic.component.ts","./src/app/pages/vehicles/vehicles.component.html","./src/app/pages/vehicles/vehicles.component.ts","./src/app/routes/app-routes.module.ts","./src/app/services/auth/auth-guard.service.ts","./src/app/services/geolocation/geolocation.service.ts","./src/app/services/graphql/gql-query.service.ts","./src/app/services/graphql/gql-subscription.service.ts","./src/app/services/images/image.service.ts","./src/app/services/layout/scroll.service.ts","./src/app/services/navigation/menu.service.ts","./src/app/services/notifications/alert.service.ts","./src/environments/environment.ts","./src/environments/shared.confg.ts","./src/main.ts","/Users/anthonycrawford/Documents/Jupiter/JupiterWebService/app/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;ACZ6C;;;;;;;;;;;;;;;;;;ACAR;;AAErC,2BAA2B,mDAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACra;AACA;AACA;AACA;AACA;;AAEA,E;;;;;;;;;;;;;;;;ACrHqC;;AAErC,oBAAoB,mDAAG;AACvB;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrBqC;;AAErC,iCAAiC,mDAAG;AACpC;AACA,mBAAmB,WAAW;AAC9B,iBAAiB;AACjB,uC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC1ByB;AACwB;AACgB;;;;;;;;;;;;;;;;;;ACF5B;;AAErC,yBAAyB,mDAAG;AAC5B;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrBqC;;AAErC,uBAAuB,mDAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtC0D;AACS;AACL;AACK;AACA;AACpB;AACZ;AACwB;;;;;;;;;;;;;;;;;;ACPtB;;AAErC,iCAAiC,mDAAG;AACpC;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9BqC;;AAErC,oCAAoC,mDAAG;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC9DqC;;AAErC,2BAA2B,mDAAG;AAC9B;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClCqC;;AAErC,kCAAkC,mDAAG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvDqC;;AAErC,mCAAmC,mDAAG;AACtC;AACA,+BAA+B,cAAc;AAC7C;AACA,uBAAuB,MAAM,wBAAwB,EAAE;AACvD;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9CqC;;AAErC,6BAA6B,mDAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnCqC;;AAErC,kCAAkC,mDAAG;AACrC;AACA,+BAA+B,UAAU,wBAAwB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBkC;AACU;AACN;AACJ;AACc;AACd;AACE;AACI;;;;;;;;;;;;;;;;;;;;;;ACPE;AACoB;AACxB;;;;;;;;;;;;;;;;;;ACFD;;AAErC,4BAA4B,mDAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACVqC;;AAErC,wCAAwC,mDAAG;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,qB;AACA;AACA;AACA,S;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,miBAAiB;AACjB,mB;AACA;AACA;AACA,O;AACA,KAAK,E;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACtNqC;AACK;AACgB;AACJ;;;AAGtD;AACA;AACA;;AAEA,uE;AACA;AACA;;AAEA,WAAW,mDAAG;AACd,wG;AACA,cAAc,iCAAiC,0DAAO;AACtD,cAAc,gCAAgC,0EAAe;AAC7D,cAAc,gCAAgC,sEAAa;AAC3D,aAAa;AACb;;;;;;;;;;;;;;;;;;ACpBA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB,oB;AACA;AACA;AACA,Q;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEG;AACP;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB,MAAM,KAAK;AAC3B;;AAEA;AACA;AACA;AACA,qBAAqB,mB;AACrB,uB;AACA;AACA;AACA,W;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;AC/EO;AACP,WAAW;AACX;AACA;AACA;AACA,iBAAiB;AACjB,mB;AACA;AACA;AACA,O;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,O;AACA;AACA,GAAG,C;;;;;;;;;;;;;;;AC5GI;AACP,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,mB;AACA;AACA;AACA,O;AACA,KAAK,E;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,C;;;;;;;;;;;;;;;;AC7DkC;;AAErC,oBAAoB,mDAAG;AACvB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA;;;;;;;;;;;;;;;;;;AC1C6B;;;;;;;;;;;;;;;;;ACAQ;;;;;;;;;;;;;;;;;;ACAA;;AAErC,sBAAsB,mDAAG;AACzB;AACA,2EAA2E,sBAAsB;AACjG;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpFqC;;AAErC,cAAc,mDAAG;AACjB;AACA,+BAA+B,eAAe;AAC9C;AACA,uBAAuB,MAAM,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,W;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5BgD;AACtB;AAC6B;;;;;;;;;;;;;;;;;;ACFlB;;AAErC,yBAAyB,mDAAG;AAC5B;AACA,oBAAoB,MAAM,0BAA0B;AACpD;AACA,gCAAgC,WAAW,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,E;;;;;;;;;;;;;;;;ACnBqC;;AAErC,eAAe,mDAAG;AAClB;AACA,kBAAkB,MAAM,0BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACfqC;;AAErC,iBAAiB,mDAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACdqC;;AAErC;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACduB;AACG;AACG;AACE;AACwB;;;;;;;;;;;;;;;;;;ACJlB;;AAErC,yBAAyB,mDAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACdqC;;AAErC,wBAAwB,mDAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrCqC;;AAErC,sBAAsB,mDAAG;AACzB;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,E;;;;;;;;;;;;;;;;ACtBqC;;AAErC,4BAA4B,mDAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA;;;;;;;;;;;;;;;;;;ACvC6B;;;;;;;;;;;;;;;;;;ACAgB;;;;;;;;;;;;;;;;;;ACAR;;AAErC,2BAA2B,mDAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvEqC;;AAErC,uBAAuB,mDAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvBiC;;;;;;;;;;;;;;;;;;ACAI;;AAErC,qCAAqC,mDAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,E;;;;;;;;;;;;;;;;;;ACnBiE;AACa;;;;;;;;;;;;;;;;;;ACDzC;;AAErC,wCAAwC,mDAAG;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5CqC;;AAErC;AACA;AACA,kCAAkC,cAAc;AAChD;AACA,0BAA0B,MAAM,wBAAwB,EAAE;AAC1D;AACA,yCAAyC,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,mDAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFuD;AACZ;AACI;AACF;AACP;AACJ;AACC;AACI;;;;;;;;;;;;;;;;;;ACPH;;AAErC,4BAA4B,mDAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtBuC;;;;;;;;;;;;;;;;;;ACAF;;AAErC,uBAAuB,mDAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACtB6B;AAC0B;AAC3B;;;;;;;;;;;;;;;;;ACFS;;AAErC,uBAAuB,mDAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4BAA4B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnDqC;;AAErC,sBAAsB,mDAAG;AACzB,qD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,E;;;;;;;;;;;;;;;;ACtBqC;;AAErC,sBAAsB,mDAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,E;;;;;;;;;;;;;;;;;;;;;ACpEO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;KACf;;wEAFY,YAAY;0GAAZ,YAAY;QCNzB,yEAAqB;QACnB,gFAAyC;QACzC,yEAA2B;QACzB,2EAA+B;QACjC,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLoD;AACJ;AACF;AACG;AACP;AACD;AACkB;AACV;AACM;AACT;AACL;AACoC;AACpB;AACY;AACI;AACb;AACH;AACsC;AACH;AACF;AACA;AACwB;AACtB;AAC7B;AACmB;AACF;AAC2B;AACA;AACG;AACP;AACS;AACf;AACG;AACH;AAC5C;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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import ByVehicleId from './objectByVehicleId'\n\nexport {\n    ByVehicleId\n}","import { gql } from 'apollo-angular';\n\nconst objectByVehicleId  = gql`\nquery ObjectDetectionQuery ($vehicleId: BigInt $cursor:Int $size:Int){\n    objects(\n          first: $size\n          offset: $cursor\n          orderBy:ID_DESC \n          condition:{vehicleId:$vehicleId}\n          ){\n            totalCount\n            pageInfo{\n              startCursor\n              hasNextPage\n              hasPreviousPage\n            }\n            nodes{\n            readingat\n            id\n            topicId\n            topic{\n              name\n            }\n            vehicleId\n            message{\n              header{\n                headerid\n                readingat\n                seq\n                node\n              }\n              detection{\n                header{\n                  headerid\n                  readingat\n                  seq\n                  node\n                }\n                  cuboid {\n                  centroid{\n                    xM\n                    yM\n                    zM\n                  }\n                  dimension{\n                    widthM\n                    depthM\n                    heightM\n                  }\n                  orientation{\n                    rollDeg\n                    pitchDeg\n                    yawDeg\n                  }\n                }\n                roi{\n                  x\n                  y\n                  width\n                  height\n                  thetaDeg\n                }\n                label\n                confidence\n              }\n              centroidRpy{\n                rollDeg\n                pitchDeg\n                yawDeg\n              }\n              centroidLocation{\n                xyzCamera{\n                  xM\n                  yM\n                  zM\n                }\n                xyzStarfire{\n                  xM\n                  yM\n                  zM\n                }\n                lla{\n                  latitudeDeg\n                  longitudeDeg\n                  altitudeM\n                }\n                enu{\n                  eastM\n                  northM\n                  upM\n                }\n                fieldOrigin{\n                  latitudeDeg\n                  longitudeDeg\n                  altitudeM\n                }\n                ecef{\n                  xM\n                  yM\n                  zM\n                }\n              }\n              objectMessageVertices{\n                nodes{\n                  xyzCamera{\n                    xM\n                    yM\n                    zM\n                  }\n                }\n              }\n            }      \n          }\n        }\n  }\n  `\n\n  export { objectByVehicleId as default }","import { gql } from 'apollo-angular';\n\nconst geolocation = gql`\nquery Geolocation ($vehicleId:BigInt){\n  starfires(condition:{vehicleId:$vehicleId}){\n    nodes{\n      vehicle{\n        name\n        id\n        type{\n          type\n        }\n      }\n       \n      msg{\n        latitude\n        longitude\n      }\n    }\n  }\n}\n`\n\nexport {geolocation as default}","import { gql } from 'apollo-angular';\n\nconst byVehicleIdDateTimestamp = gql`\nquery GeolocationByVehicleIdDateTimestamp ($vehicleId:BigInt, $startDateTime:Datetime, $endDateTime:Datetime){\n\tstarfires(filter:{vehicleId:{equalTo:$vehicleId}\n    , readingat:{ greaterThanOrEqualTo:$startDateTime\n      , lessThanOrEqualTo:$endDateTime} \n  }){\n    nodes{\n      readingat\n      id\n      msg {\n        latitude\n        longitude\n    \t\taltitude\n        yawRate\n        speed\n        isGpsLocked\n      \theader{\n          headerId\n          readingat\n        }\n      }\n    }\n  }\n}\n`\n\nexport {byVehicleIdDateTimestamp as default}","import ById from './byId'\nimport PreviousLocation from './previousLocation'\nimport ByVehicleIdDateTimestamp from './byVehicleIdDateTimestamp'\n\nexport {\n    ById\n    , PreviousLocation\n    , ByVehicleIdDateTimestamp\n}","import { gql } from 'apollo-angular';\n\nconst previousLocation = gql`\nquery Geolocation ($vehicle_id: BigInt) {\n    starfires(first:1 orderBy:ID_DESC condition:{vehicleId:$vehicle_id}){\n      nodes{\n        vehicle{\n          name\n          id\n          type{\n            type\n          }\n        }\n         \n        msg{\n          latitude\n          longitude\n        }\n      }\n    }\n  }\n`\nexport {previousLocation as default}","import { gql } from 'apollo-angular';\n\nconst imagePairQuery = gql` \nquery ImagePair($topic:String! $cursor:Int!){\n        imagePair(topic:$topic cursor:$cursor){\n            timestamp\n            topic\n            pagination{\n              position\n              pageSize\n              length\n            }\n            msg{\n              header{\n                  id\n                  timestamp\n                  seq\n                  node\n              }\n              left_image{\n                height\n                width\n                encoding\n                step\n                is_bigendian\n                data\n              }\n              right_image{\n                height\n                width\n                encoding\n                step\n                is_bigendian\n                data\n              }\n            }\n          }\n  }\n  `\n\nexport {imagePairQuery as default}","import PreviewImageByVehicleId from './previewByVehicleId'\nimport PreviewByVehicleIdTopicId from './previewByVehicleIdTopicId'\nimport PreviewByVehicleIdTopicName from './previewByTopicName'\nimport SegmentationMapByHeaderId from './segmentationMapByHeaderId'\nimport PreviewDetailsByVehicleId from './previewDetailsByVehicleId'\nimport SegmentationMap from './segmentationMap'\nimport ImagePair from './imagePair'\nimport  PreviewByMessageHeaderId from './previewByHeaderId'\n\nexport {\n    PreviewImageByVehicleId\n    , PreviewByVehicleIdTopicId\n    , PreviewByVehicleIdTopicName\n    , SegmentationMapByHeaderId\n    , PreviewDetailsByVehicleId\n    , SegmentationMap\n    , ImagePair\n    , PreviewByMessageHeaderId\n}","import { gql } from 'apollo-angular';\n\nconst previewByMessageHeaderId = gql`\nquery PreviewImage ($headerId: BigInt){\n\tcameraMessageHeaders(condition:{headerId:$headerId}) {\n\t\tnodes{\n      node\n      readingat\n      seq\n      cameraMessagesByHeaderId{\n        nodes{\n          image{\n            id\n            nodeId\n            width\n            height\n            step\n            isBigendian\n            encoding\n            data {\n              id\n              nodeId\n              data\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport {previewByMessageHeaderId as default}","import { gql } from 'apollo-angular';\n\nconst previewByVehicleIdTopicName = gql`\nquery PreviewByVehicleIdTopicName($vehicleId: BigInt, $topicName:String, $cursor:Int, $size:Int){\n    topics(filter: {\n      name: {\n          equalTo: $topicName \n      }\n    }){\n      nodes{\n        cameras(\n            first:$size\n            offset: $cursor \n            orderBy: ID_DESC \n            condition: {\n                vehicleId: $vehicleId\n            }\n        ){\n          totalCount       \n              nodes{\n              id\n              readingat\n              vehicle{\n                name\n              }\n              \n              msg{\n                header{\n                  headerId\n                }\n                cameraMeta{\n                  cameraName\n                  leftExposure\n                  rightExposure\n                  leftGain\n                  rightGain\n                  leftRoi{\n                    xOffset\n                    yOffset\n                  }\n                  rightRoi{\n                    xOffset\n                    yOffset\n                  }\n                }\n                image{\n                  isBigendian\n                  encoding\n                  height\n                  width\n                  step\n                  data{\n                    data\n                  }\n                }\n              }\n            }\n        }\n      }\n      \n    }\n  }\n  `\nexport {previewByVehicleIdTopicName as default}","import { gql } from 'apollo-angular';\n\nconst previewByVehicleId = gql`\nquery PreviewByVehicleId ($vehicleId:BigInt) {\n\tcameras(last:1 condition:{vehicleId:$vehicleId}){\n    nodes{\n      vehicle{\n        id\n        name\n      }\n      msg {\n        header{\n          headerId\n        }\n        image {\n          isBigendian\n          segmentationMaps {\n            edges {\n              node {\n                id\n              }\n            }\n          }\n          encoding\n          height\n          width\n          data{\n            data\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport {previewByVehicleId as default}","import { gql } from 'apollo-angular';\n\nconst previewByVehicleIdTopicId = gql`\nquery PreviewByVehicleId ($vehicleId:BigInt, $topicId: BigInt, $cursor:Int) {\n    cameras(\n        first:1\n        offset:$cursor\n        orderBy:ID_DESC \n        condition:{\n            vehicleId:$vehicleId\n            topicId:$topicId\n        }\n        ){\n\n        pageInfo{\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        totalCount\n        edges{\n        cursor\n        }\n        nodes{\n        vehicle{\n            id\n            name\n        }\n        readingat\n        topic{\n            name\n            type {\n            module\n            class\n            }\n        }\n        msg {\n            header {\n                headerId\n            }\n            image {\n            isBigendian\n            encoding\n            height\n            width\n            step\n            data{\n                data\n            }\n            }\n        }\n    }\n    }\n}\n`\n\nexport {previewByVehicleIdTopicId as default}","import { gql } from 'apollo-angular';\n\nconst PreviewDetailsByVehicleId  = gql`\nquery PreviewImagesByVehicleId($id: BigInt) {\n    topicCategories(condition:{name:\"images\"}){\n      nodes{\n        topics(filter:{name:{includes:\"left/preview\"} }){\n          nodes{\n            cameras(last:1 condition:{vehicleId:$id}){\n              totalCount\n              nodes {\n                id\n                topic{\n                  name\n                  id\n                }\n                msg{\n                  image {\n                    cameraMessages{\n                      nodes{\n                        header{\n                          readingat\n                          headerId\n                        }\n  \n                        image{\n                          width\n                          height\n                          step\n                          isBigendian\n                          encoding\n                          data {\n                            data\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\nexport {PreviewDetailsByVehicleId as default}","import { gql } from 'apollo-angular';\n\nconst segmentationMapQuery = gql` \nquery SegmentationMap($topic:String! $cursor:Int! $id:Float!){\n    segmentationMap (topic:$topic, cursor:$cursor, id:$id){\n        timestamp\n        topic\n        pagination{\n          position\n          pageSize\n          length\n        }\n        msg {\n          descriptor {\n            id\n            timestamp\n          }\n          image {\n            header{\n              stamp {\n                sec\n                nanosec\n              }\n              frame_id\n            }\n            height\n            width\n            encoding\n            is_bigendian\n            step\n            data\n          }\n        }\n      }\n  }\n  `\n\nexport {segmentationMapQuery as default}","import { gql } from 'apollo-angular';\n\nconst segmentationMapByHeaderId = gql`\nquery Segmentation($imageHeaderId: BigInt) {\n  cameraMessageHeaders(filter:{headerId:{equalTo:$imageHeaderId}}){\n    nodes{\n      cameraMessagesByHeaderId{\n        nodes{\n          id\n          image{\n\t\t\t\t\t\tencoding\n            width\n            height\n            step\n            isBigendian\n             data{\n               data\n             }\n          }\n        }\n      }\n    }\n  }\n}`\n\n  export {segmentationMapByHeaderId as default}","import * as Topics from './topics'\nimport * as Geolocation from './geolocation'\nimport * as Vehicles from './vehicles'\nimport * as Images from './images'\nimport * as Notifications from './notifications'\nimport * as Status from './status'\nimport * as Logging from './logging'\nimport * as Detection from './detection'\n\nexport {\n    Topics\n    , Geolocation\n    , Vehicles\n    , Images\n    , Notifications\n    , Status\n    , Logging\n    , Detection\n}","import All from './loggingStatusDetection'\nimport QueryBuilder from './queryBuilders/loggingQueryBuilder'\nimport Nodes from './loggingNodeTypes'\n\nexport {\n    All\n    , QueryBuilder\n    , Nodes\n}","import { gql } from 'apollo-angular';\n\nconst vehicleLogNodeTypes = gql`\nquery LoggingNodes{\n\tvehicleLogNodeTypes{\n    nodes{\n      name\n    }\n  }\n}\n`\n\nexport {vehicleLogNodeTypes as default}","import { gql } from 'apollo-angular';\n\nconst allLoggingStatusObjectDetection = gql`\nquery Logging ($cursor:Int $vehicleId:BigInt $startDateTime:Datetime $endDateTime:Datetime){\n  logging: vehicleLogs(\n    \tfirst: 10\n    \torderBy:ID_DESC \n    \toffset: $cursor\n      filter:{\n        vehicleId:{equalTo:$vehicleId}\n        , readingat:{ \n            greaterThanOrEqualTo: $startDateTime\n          , lessThanOrEqualTo: $endDateTime\n        } \n      }){\n    nodes{\n      readingat\n      id\n      topicId\n      topic{\n        name\n      }\n      vehicleId\n      topic{\n        id\n        name\n      }\n      message {\n        id\n        name\n        function\n        file\n        msg\n        line\n        level\n        stamp {\n          sec\n          nanosec\n        }\n      }\n    }\n  }\n  objectDetection: objects(\n    first: 10\n    orderBy:ID_DESC \n    offset: $cursor\n    filter:{\n      vehicleId:{equalTo:$vehicleId}\n      , readingat:{ \n          greaterThanOrEqualTo: $startDateTime\n        , lessThanOrEqualTo: $endDateTime\n      } \n    }){\n    \tnodes{\n      readingat\n      id\n      topicId\n      topic{\n        name\n      }\n      vehicleId\n      message{\n        header{\n          headerid\n          readingat\n          seq\n          node\n        }\n        detection{\n          header{\n            headerid\n            readingat\n            seq\n            node\n          }\n        \tcuboid {\n            centroid{\n              xM\n              yM\n              zM\n            }\n            dimension{\n              widthM\n              depthM\n              heightM\n            }\n            orientation{\n              rollDeg\n              pitchDeg\n              yawDeg\n            }\n          }\n          roi{\n            x\n            y\n            width\n            height\n            thetaDeg\n          }\n          label\n          confidence\n        }\n        centroidRpy{\n          rollDeg\n          pitchDeg\n          yawDeg\n        }\n        centroidLocation{\n          xyzCamera{\n            xM\n            yM\n            zM\n          }\n          xyzStarfire{\n            xM\n            yM\n            zM\n          }\n          lla{\n            latitudeDeg\n            longitudeDeg\n            altitudeM\n          }\n          enu{\n            eastM\n            northM\n            upM\n          }\n          fieldOrigin{\n            latitudeDeg\n            longitudeDeg\n            altitudeM\n          }\n          ecef{\n            xM\n            yM\n            zM\n          }\n        }\n        objectMessageVertices{\n          nodes{\n            xyzCamera{\n              xM\n              yM\n              zM\n            }\n          }\n        }\n      }      \n    }\n  }\n  vehicleStatus: vehicleStatuses(\n    first: 10\n    orderBy:ID_DESC \n    offset: $cursor\n    filter:{\n      vehicleId:{equalTo:$vehicleId}\n      , readingat:{ \n          greaterThanOrEqualTo: $startDateTime\n        , lessThanOrEqualTo: $endDateTime\n      } \n    }){    \n    nodes{\n      readingat\n      id\n      topicId\n      topic{\n        name\n      }\n      vehicleId\n      alerts{\n        nodes{\n          id\n          message\n          dismissed\n          read\n          alertType{\n            id\n            name\n            severity\n            \n          }\n        }\n      }\n      state{\n        name\n        description\n        id\n      }\n      vehicleStatusDetails{\n        nodes{\n          isActive\n          isRecoverable\n          description\n          reason: vehicleStatusReason{\n            code\n            id\n            name\n          }\n        }\n      }\n      message: statusMessage{\n        id\n        header{\n          id\n          seq\n          headerid\n          readingat\n          node\n        }\n      }\n    }\n  }\n}\n`\n\nexport {allLoggingStatusObjectDetection as default}","import { gql } from 'apollo-angular';\nimport {logging} from './partials/logging'\nimport {objectDetection} from './partials/objectDetection'\nimport {vehicleStatus} from './partials/vehicleStatus'\n\n\nconst checkForType = (type, typeList)=>{\n    return typeList.indexOf(type) > -1 || !typeList.length\n}\n\nconst loggingQueryBuilder = (types=[], paginationRange=25, nodes=[])=>{    \n    if(!types)\n        types = []\n        \n    return gql`\n            query Logging ($cursor:Int $vehicleId:BigInt $startDateTime:Datetime $endDateTime:Datetime){ \n            ${ checkForType(\"logging\",types) ? logging(paginationRange,nodes) : `` }\n            ${ checkForType(\"object\",types) ? objectDetection(paginationRange) : `` }\n            ${ checkForType(\"status\",types) ? vehicleStatus(paginationRange) : `` }\n            }`\n}\n\n\nexport {loggingQueryBuilder as default}","// export const logging = (paginationRange=25)=> `logging: vehicleLogs(\n//     first: ${paginationRange}\n//     orderBy:ID_DESC \n//     offset: $cursor\n//   filter:{\n//     vehicleId:{equalTo:$vehicleId}\n//     , readingat:{ \n//         greaterThanOrEqualTo: $startDateTime\n//       , lessThanOrEqualTo: $endDateTime\n//     } \n//   }){\n// nodes{\n//   readingat\n//   id\n//   topicId\n//   topic{\n//     name\n//   }\n//   vehicleId\n//   topic{\n//     id\n//     name\n//   }\n//   message {\n//     id\n//     name\n//     function\n//     file\n//     msg\n//     line\n//     level\n//     stamp {\n//       sec\n//       nanosec\n//     }\n//   }\n// }\n// }`\n\nexport const logging = (paginationRange=25, nodes=[])=>`\nlogging: vehicleLogMessages(\n        first: ${paginationRange}\n        orderBy:ID_DESC \n        offset: $cursor\n        filter:{name:{in:${JSON.stringify(nodes)}}}\n  ){\n\n    nodes{\n      vehicleLogsByMessageId(\n        filter:{\n          vehicleId:{equalTo:$vehicleId} \n          , readingat:{ \n              greaterThanOrEqualTo: $startDateTime\n            , lessThanOrEqualTo: $endDateTime\n          } \n        }\n      ){\n        nodes{\n          readingat\n          id\n          topicId\n          vehicleId\n          message{\n            id\n            name\n            function\n            file\n            level\n            msg\n            stamp{\n              sec\n              nanosec\n            }\n            \n          }\n        }\n      }\n    }\n  }\n`","export const objectDetection = (paginationRange=25)=>`objectDetection: objects(\n  first: ${paginationRange}\n  orderBy:ID_DESC \n    offset: $cursor\n    filter:{\n      vehicleId:{equalTo:$vehicleId}\n      , readingat:{ \n          greaterThanOrEqualTo: $startDateTime\n        , lessThanOrEqualTo: $endDateTime\n      } \n    }){\n    \tnodes{\n      readingat\n      id\n      topicId\n      topic{\n        name\n      }\n      vehicleId\n      message{\n        header{\n          headerid\n          readingat\n          seq\n          node\n        }\n        detection{\n          header{\n            headerid\n            readingat\n            seq\n            node\n          }\n        \tcuboid {\n            centroid{\n              xM\n              yM\n              zM\n            }\n            dimension{\n              widthM\n              depthM\n              heightM\n            }\n            orientation{\n              rollDeg\n              pitchDeg\n              yawDeg\n            }\n          }\n          roi{\n            x\n            y\n            width\n            height\n            thetaDeg\n          }\n          label\n          confidence\n        }\n        centroidRpy{\n          rollDeg\n          pitchDeg\n          yawDeg\n        }\n        centroidLocation{\n          xyzCamera{\n            xM\n            yM\n            zM\n          }\n          xyzStarfire{\n            xM\n            yM\n            zM\n          }\n          lla{\n            latitudeDeg\n            longitudeDeg\n            altitudeM\n          }\n          enu{\n            eastM\n            northM\n            upM\n          }\n          fieldOrigin{\n            latitudeDeg\n            longitudeDeg\n            altitudeM\n          }\n          ecef{\n            xM\n            yM\n            zM\n          }\n        }\n        objectMessageVertices{\n          nodes{\n            xyzCamera{\n              xM\n              yM\n              zM\n            }\n          }\n        }\n      }      \n    }\n  }`","export const vehicleStatus = (paginationRange=25)=> `vehicleStatus: vehicleStatuses(\n    first: ${paginationRange}\n    orderBy:ID_DESC \n    offset: $cursor\n    filter:{\n      vehicleId:{equalTo:$vehicleId}\n      , readingat:{ \n          greaterThanOrEqualTo: $startDateTime\n        , lessThanOrEqualTo: $endDateTime\n      } \n    }){    \n    nodes{\n      readingat\n      id\n      topicId\n      topic{\n        name\n      }\n      vehicleId\n      alerts{\n        nodes{\n          id\n          message\n          dismissed\n          read\n          alertType{\n            id\n            name\n            severity\n            \n          }\n        }\n      }\n      state{\n        name\n        description\n        id\n      }\n      vehicleStatusDetails{\n        nodes{\n          isActive\n          isRecoverable\n          description\n          reason: vehicleStatusReason{\n            code\n            id\n            name\n          }\n        }\n      }\n      message: statusMessage{\n        id\n        header{\n          id\n          seq\n          headerid\n          readingat\n          node\n        }\n      }\n    }\n  }`","import { gql } from 'apollo-angular';\n\nconst alertsQuery = gql`\nquery Alerts{\n    alerts (condition:{dismissed:false}){\n      nodes{\n        id\n        alertType{\n          name\n          severity\n        }\n        read\n        dismissed\n        vehicleStatus{\n          id\n          vehicle{\n            name\n            id\n          }\n          state {\n            description\n            code\n            name\n          }\n          topic{\n            name\n          }\n          vehicleStatusDetails{\n            nodes{\n              isActive\n              vehicleStatusId\n              isRecoverable\n              vehicleStatusReason{\n                name\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }   \n`\n\nexport {alertsQuery as default}","import Alerts from './alerts'\nexport {\n    Alerts\n}","import Vehicle from './vehicleStatus' \n\nexport {Vehicle}","import { gql } from 'apollo-angular';\n\nconst vehicleStatus = gql`\nquery VehicleStatus($vehicle_id:BigInt, $cursor:Int, $size:Int) {\n    vehicleStatuses( first:$size offset:$cursor orderBy:ID_DESC condition:{vehicleId:$vehicle_id}){\n       pageInfo{\n         startCursor\n         endCursor\n         hasNextPage\n         hasPreviousPage\n         \n       }\n     totalCount\n     edges {\n       cursor\n       node{\n        id\n        createdAt\n        statusMessage{\n          header{\n            headerid\n            readingat\n            node\n          }\n          missionStats{\n            missionStartTime\n            durationAutonomyStopped \n            durationAutonomyDriving\n            durationNoAutonomy\n            durationTeleop\n            autonomyDistanceTravelledM \n            autonomyAreaTravelledSqm\n            numStops\n            numStateDemotion\n            numTruePositives\n            numFalsePositives\n            numTeleopQueries\n           }\n        }\n        topic{\n          name\n        }\n       vehicleStatusDetails{\n         nodes{\n           id\n           isActive\n           isRecoverable\n           description\n           vehicleStatusReasonId\n           reason: vehicleStatusReason{\n            name\n            code\n           }\n         }\n       }\n         createdAt\n         state{\n           name\n           description\n           id\n         }\n         alerts{\n           totalCount\n           pageInfo{\n             startCursor\n             endCursor\n             hasNextPage\n             hasPreviousPage\n           }\n           nodes{\n             read\n             message\n             dismissed\n             alertType{\n               id\n               severity\n               name\n             }\n           }\n         }\n       }\n     }\n     }\n   }\n`\n\nexport {vehicleStatus as default}","import { gql } from 'apollo-angular';\n\nconst topics =gql`\nquery TopicsCategoryPreviewImages ($vehicleId: BigInt $category: String $topicName:String){\n    topicCategories(condition:{name:$category}){\n      nodes{\n        topics(filter:{name:{like:$topicName}}){\n          totalCount\n          pageInfo{\n            hasNextPage\n            hasPreviousPage\n            endCursor\n            startCursor\n          }\n          nodes{\n            vehicleTopics(condition:{vehicleId:$vehicleId}){\n              nodes{\n                topic{\n                  name\n                  id\n                }\n              }\n            }\n          }  \n        }\n      }\n    }\n  }\n`\nexport {topics as default}","import ByVehicleId from './topics-by-vehicle-id'\nimport All from './topics'\nimport ByCategoryVehicleId from './byCategoryVehicleId'\n\nexport {\n    ByVehicleId\n    , All\n    , ByCategoryVehicleId\n}","import { gql } from 'apollo-angular';\n\nconst topicByVehicleId = gql`\nquery VehicleTopics($id:BigInt!){\n    topics (filter:{name:{notLike:\"%segmentation%\"}}) {\n          nodes{\n          vehicleTopics(filter:{vehicleId:{equalTo:$id}}){\n            nodes{\n              topic{\n                name\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  `\n\n  export {topicByVehicleId as default}","import { gql } from 'apollo-angular';\n\nconst topics = gql`\nquery Topics{\n  topics (filter:{name:{notLike:\"%segmentation%\"}}) {\n    nodes{\n      id\n      name\n      type{\n        class\n        module\n      }\n    }\n  }\n}\n`\n\nexport {topics as default}","import { gql } from 'apollo-angular';\n\nconst vehicles = gql`\nquery {\n    vehicles{\n      nodes{\n        id\n        name\n        type {\n          type\n        }\n      }\n    }\n  }\n`\n\nexport {vehicles as default}","import { gql } from 'apollo-angular';\n\nconst vehicle = `\n    query Vehicles($id:BigInt){\n        vehicles(condition:{id:$id}){\n            nodes{\n                id\n                name\n                type {\n                    type\n                }\n            }\n        }\n    }\n`\nexport {vehicle as default}","import All from './all'\nimport ById from './by-id'\nimport Online from './online'\nimport Offline from './offline'\nimport OnlineOrOfflineById from './onlineOrOfflineById'\n\nexport {\n    All\n    , ById\n    , Online\n    , Offline\n    , OnlineOrOfflineById\n}","import { gql } from 'apollo-angular';\n\nconst offlineVehicles  = gql`\nquery OfflineVehicles {\n    vehiclesOfflines{\n      nodes{\n        deviceId\n        id\n        vehicle_id: id\n        name\n        ip\n      }\n    }\n  }\n`\n\nexport {offlineVehicles as default}","import { gql } from 'apollo-angular';\n\nconst onlineVehicles  = gql`\nquery OnlineVehicles {\n    vehiclesOnlines{\n      nodes{\n        id\n        vehicleId\n        vehicle{\n          vehicleStatuses(first:1,orderBy:ID_DESC) {\n            nodes{\n              alerts(first:1,orderBy:ID_DESC) {\n                nodes{\n                  alertType {\n                    name\n                    severity\n                  }\n                  message\n                  read\n                  dismissed\n                }\n              }\n              state {\n                description\n                name\n              }\n            }\n          }\n          id\n          vehicle_id: id\n          name\n          deviceId\n          ip\n        }\n      }\n    }\n  }\n`\n\nexport {onlineVehicles as default}","import { gql } from 'apollo-angular';\n\nconst vehicleStatus = gql`\nquery VehicleOnlineOrOffline ($id:BigInt) {\n    online: vehiclesOnlines(condition:{vehicleId:$id}){\n      nodes{\n        id\n        vehicle{\n          name\n        }\n      }\n    }\n    offline: vehiclesOfflines(condition:{id:$id}){\n      nodes{\n        id\n        deviceId\n        name\n      }\n    }\n  }\n  `\n  \n  export {vehicleStatus as default}","import { gql } from 'apollo-angular';\n\nconst alertsSubscriptions = gql`\nsubscription sqlAlerts {\n    sqlAlerts {\n      event\n      alerts {\n        id\n        read\n        dismissed\n        vehicleStatus {\n          id\n          vehicle {\n            name\n            id\n          }\n          state {\n            description\n            name\n            code\n          }\n          topic {\n            name\n          }\n          vehicleStatusDetails{\n            nodes{\n              vehicleStatusId\n              isActive\n              isRecoverable\n              vehicleStatusReason{\n                name\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }  \n`;\n\nexport {alertsSubscriptions as default}","import Alerts from './alerts'\n\nexport {\n    Alerts\n}","import ByVehicleId from './objectByVehicleId'\n\nexport {\n    ByVehicleId\n}","import { gql } from 'apollo-angular';\n\nconst objectByVehicleId  = gql`\nsubscription ObjectDetectionSubscription ($vehicleId: BigInt) {\n  sqlObjectDetection {\n    object(vehicleId:$vehicleId) {\n      readingat\n      topic{\n        name\n      }\n      message{\n        cameraName\n        isActivePathSet\n        onPath\n        circleRadiusM\n        detection{\n          header{\n            readingat\n            node\n            seq\n          }\n          cuboid{\n            dimension{\n              widthM\n              depthM\n              heightM\n            }\n          }\n        }\n        centroidLocation{\n          xyzCamera{\n            xM\n            yM\n            zM\n          }\n          xyzStarfire{\n            xM\n            yM\n            zM\n          }\n          lla{\n            latitudeDeg\n            longitudeDeg\n            altitudeM\n          }\n          enu{\n            eastM\n            northM\n            upM\n          }\n          fieldOrigin{\n            latitudeDeg\n            longitudeDeg\n            altitudeM\n          }\n          ecef{\n            xM\n            yM\n            zM\n          }\n        }\n        header{\n          headerid\n          seq\n          node\n          readingat\n        }\n      }\n    }\n  }\n}\n`\n\nexport {objectByVehicleId as default}","import { gql } from 'apollo-angular';\n\nconst deviceMessage  = gql`\nsubscription deviceMessage {\n  deviceMessage{\n    timestamp\n    topic \n    msg{\n      header{\n        id\n        timestamp\n      \tseq\n        node\n      }\n      id\n      data\n    }\n    type{\n      module\n      class\n    }\n  }\n}\n`\n\nexport {deviceMessage as default}","import Vehicles from './vehicles'\n\nexport {\n    Vehicles\n}","import { gql } from 'apollo-angular';\n\nconst vehicleGeographicCoordinates = gql`\nsubscription VehicleGeographicCoordinates($vehicleId:Float) {\n  sqlStarfire{\n    starfire(vehicleId:$vehicleId){\n      msg{\n        longitude\n        latitude\n      }\n      vehicle{\n        name\n        ip\n      }\n    }\n  }\n}\n`\n\n  export {vehicleGeographicCoordinates as default}","import PreviewImagesByVehicleId from './previewImagesByVehicleId'\nimport PreviewImagesByVehicleIdTopicId from './previewImageByVehicleIdTopicId'\n\nexport {\n    PreviewImagesByVehicleId\n    , PreviewImagesByVehicleIdTopicId\n}","import { gql } from 'apollo-angular';\n\nconst previewImagesByVehicleIdTopicId  =gql`\nsubscription SQLCameraSubscriptionByVehilceIdTopicId($vehicleId:BigInt $topicId:BigInt) {\n    sqlCamera {\n      event\n      camera(vehicleId: $vehicleId) {\n        id: nodeId\n        vehicle {\n          id: nodeId\n          vehicleTopics(condition:{topicId:$topicId}) {\n            nodes {\n              topic{\n                name\n                id\n                cameras(first:1 orderBy:ID_DESC){\n                  nodes{\n                    id: nodeId\n                    readingat\n                    msg {\n                      header{\n                        headerId\n                        readingat\n                      }\n                      image{\n                        width\n                        height\n                        encoding\n                        isBigendian\n                        step\n                        data{\n                          data\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport {previewImagesByVehicleIdTopicId as default}","import { gql } from 'apollo-angular';\n\n// const previewImagesByVehicleId  = gql`\n// subscription PreviewImagesByVehicleId($id: BigInt) {\n//     topicCategories(condition:{name:\"images\"}){\n//       nodes{\n//         topics(filter:{name:{includes:\"left/preview\"} }){\n//           nodes{\n//             cameras(last:1 condition:{vehicleId:$id}){\n//               totalCount\n//               nodes {\n//                 id\n//                 topic{\n//                   name\n//                 }\n//                 msg{\n//                   image {\n//                     cameraMessages{\n//                       nodes{\n//                         header{\n//                           readingat\n//                           headerId\n//                         }\n  \n//                         image{\n//                           width\n//                           height\n//                           step\n//                           isBigendian\n//                           encoding\n//                           data {\n//                             data\n//                           }\n//                         }\n//                       }\n//                     }\n//                   }\n//                 }\n//               }\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }\n// `\n\nconst previewImagesByVehicleId = gql`subscription PreviewImagesByVehicleId($id: BigInt)  {\n  sqlCamera {\n    event\n    id\n    camera(vehicleId:$id){\n        id\n        nodeId\n        topic{\n          name\n          id\n        }\n        msg {\n          id\n          nodeId\n          header{\n            id\n            seq\n            readingat\n            node\n          }\n          image{\n            id\n            nodeId\n            width\n            height\n            step\n            isBigendian\n            encoding\n            data {\n              id\n              nodeId\n              data\n            }\n        }\n      }\n    }\n  }\n}`\nexport {previewImagesByVehicleId as default}","import DeviceMessageSubscription from './device-message'\nimport * as Geolocation from './geolocation'\nimport * as Notifications from './Notifications'\nimport OnlineVehicles from './vehicles-online'\nimport * as Vehicles from './vehicles';\nimport * as Images from './images';\nimport * as Logging from './logging'\nimport * as Detection from './detection'\n\nexport {\n    DeviceMessageSubscription\n    , Geolocation\n    , OnlineVehicles\n    , Notifications\n    , Vehicles\n    , Images\n    , Logging\n    , Detection\n}","import { gql } from 'apollo-angular';\n\nconst loggingByVehicleId  = gql`\nsubscription LoggingSubscription ($vehicleId: BigInt) {\n    sqlVehicleLogging {\n        vehicle_logs(vehicleId:$vehicleId) {\n            readingat\n            message{\n            stamp{\n                sec\n                nanosec\n            }\n            msg\n            line\n            file\n            level\n            name\n            function\n            }\n        }\n    }\n}\n`\n\nexport {loggingByVehicleId as default}","import ByVehicleId from './byVehicleId'\n\nexport {\n    ByVehicleId\n}","import { gql } from 'apollo-angular';\n\nconst onlineDevices  = gql`\nsubscription {\n  listen(topic: \"online_vehicles\") {\n    query{\n      vehicles{\n        nodes{\n          vehiclesOnline {\n            vehicleId \n            vehicle{\n              name\n              type{\n                type\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport {onlineDevices as default}","import Online from './online'\nimport OnlineOrOfflineById from './onlineOrOfflineById'\nimport State from './status'\nexport {\n    Online\n    , OnlineOrOfflineById\n    , State\n}","import { gql } from 'apollo-angular';\n\nconst onlineDevices  = gql`\nsubscription sqlVehiclesOnline {\n    sqlVehiclesOnline {\n      event\n      row {\n        id\n      }\n      vehicle_online {\n        vehicle {\n          name\n          id\n          vehicle_id: id\n          ip\n          type{\n            type\n          }\n          vehicleStatuses(first:1,orderBy:ID_DESC) {\n            nodes{\n              alerts(first:1,orderBy:ID_DESC, condition:{dismissed:false, read:false}){\n                nodes{\n                    read\n                    dismissed\n                    message\n                    vehicleStatus{\n                        vehicleStatusDetails{\n                            nodes{\n                                description\n                                isActive\n                                isRecoverable\n                                id\n                            }\n                        }\n                    }\n                    alertType {\n                        name\n                    }\n                }\n              }\n              state {\n                description\n                code\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport {onlineDevices as default}","import { gql } from 'apollo-angular';\n\nconst vehicleStatus = gql`\nsubscription sqlVehiclesOnlineByVehicle ($id:BigInt){  \n    sqlVehiclesOnline {\n      event\n      row{\n        id\n      }\n      vehicle_online(vehicleId:$id ){\n        nodeId\n        vehicleId\n        vehicle{\n          name\n          type {\n            id\n          }\n        }\n      }\n    }\n  }`\n  \n  export {vehicleStatus as default}","import { gql } from 'apollo-angular';\n\nconst vehicleStatus = gql`\nsubscription sqlVehicleStatus($vehicleId:BigInt) {\n    sqlVehicleStatus{\n      event\n      vehicle_status(vehicleId:$vehicleId){\n        id\n        createdAt\n        readingat\n        statusMessage{\n          header{\n            headerid\n            readingat\n            node\n          }\n          missionStats{\n            missionStartTime\n            durationAutonomyStopped \n            durationAutonomyDriving\n            durationNoAutonomy\n            durationTeleop\n            autonomyDistanceTravelledM \n            autonomyAreaTravelledSqm\n            numStops\n            numStateDemotion\n            numTruePositives\n            numFalsePositives\n            numTeleopQueries\n          }\n        }\n        state{\n          name\n        }\n        id\n        topic{\n          name\n        }\n         vehicleStatusDetails{\n           nodes{\n             id\n             isActive\n             isRecoverable\n             description\n             vehicleStatusReasonId\n             reason: vehicleStatusReason{\n                name\n                code\n            }\n           }\n         }\n        alerts{\n           totalCount\n           pageInfo{\n             startCursor\n             endCursor\n             hasNextPage\n             hasPreviousPage\n           }\n          nodes{\n          id\n          message\n          read\n          dismissed\n          alertType{\n              name\n              severity\n            }\n            }\n        }\n      }\n    }\n  }\n`\n  \n  export {vehicleStatus as default}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","\n<div class=\"content\">\n  <app-top-navigation></app-top-navigation>\n  <div class=\"content__main\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutes } from './routes/app-routes.module'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\nimport { APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\nimport { split, ApolloClientOptions } from '@apollo/client/core';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { InMemoryCache } from '@apollo/client/core';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgDynamicBreadcrumbModule } from \"ng-dynamic-breadcrumb\";\nimport { ErrorComponent } from './pages/error/error.component';\nimport { VehicleTopicComponent } from './pages/vehicles/pages/vehicle-topic/vehicle-topic.component';\nimport { VehicleLiveComponent } from './pages/vehicles/pages/vehicle-live/vehicle-live.component';\nimport { StarfireComponent } from './components/topics/geolocation/starfire/starfire.component';\nimport { ImagePairComponent } from './components/topics/images/image-pair/image-pair.component';\nimport { ImageSegmentationComponent } from './components/topics/images/image-segmentation/image-segmentation.component';\nimport { VehicleListComponent } from './pages/vehicles/pages/vehicle-list/vehicle-list.component';\nimport { VehicleComponent } from './pages/vehicle/vehicle.component';\nimport { PreviewComponent } from './components/topics/images/preview/preview.component';\nimport { RgbImageComponent } from './components/images/rgb-image/rgb-image.component';\nimport { SegmentationImageComponent } from './components/images/segmentation-image/segmentation-image.component';\nimport { VehiclesOnlineComponent } from './components/topics/vehicles/vehicles-online/vehicles-online.component';\nimport { VehiclesOfflineComponent } from './components/topics/vehicles/vehicles-offline/vehicles-offline.component';\nimport { VehicleOverviewComponent } from './pages/vehicle/pages/vehicle-overview/vehicle-overview.component';\nimport { VehicleGeolocationComponent } from './pages/vehicle/pages/vehicle-geolocation/vehicle-geolocation.component';\nimport { VehicleImagesComponent } from './pages/vehicle/pages/vehicle-images/vehicle-images.component';\nimport { VehicleLoggingComponent } from './pages/vehicle/pages/vehicle-logging/vehicle-logging.component';\nimport { VehicleSystemComponent } from './pages/vehicle/pages/vehicle-system/vehicle-system.component';\nimport { TableUtil } from './components/table/table-utils';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\n// Enviornment Variables\nimport { environment } from '../environments/environment';\n\n\n// Google OAuth\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\nimport { GoogleLoginProvider } from 'angularx-social-login';\nimport { AuthGuardService } from './services/auth/auth-guard.service'\n\n// Material\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\n// \n\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { VehiclesComponent } from './pages/vehicles/vehicles.component';\nimport { GraphQLModule } from './modules/graphql.module';\nimport { TopNavigationComponent } from './components/top-navigation/top-navigation.component';\n\n// Service\nimport { MenuService } from './services/navigation/menu.service'\nimport { GeolocationService } from './services/geolocation/geolocation.service';\nimport { VehicleStatusComponent } from './components/topics/vehicles/vehicle-status/vehicle-status.component';\nimport { VehicleStatusDetailComponent } from './components/modals/vehicle-status-detail/vehicle-status-detail.component';\nimport { ImageComponent } from './components/images/image/image.component';\nimport { ImageExpansionComponent } from './components/modals/image-expansion/image-expansion.component';\nimport { MedallionComponent } from './components/core/medallion/medallion.component';\nimport { ObjectDetectionDetailComponent } from './components/modals/object-detection-detail/object-detection-detail.component';\nimport { StopImagesComponent } from './components/topics/images/stop-images/stop-images.component';\nimport { VehicleMissionStatsComponent } from './components/topics/vehicles/vehicle-mission-stats/vehicle-mission-stats.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    LoginComponent,\n    DashboardComponent,\n    ProfileComponent,\n    LayoutComponent,\n    VehiclesComponent,\n    TopNavigationComponent,\n    ErrorComponent,\n    VehicleTopicComponent,\n    VehicleLiveComponent,\n    StarfireComponent,\n    ImagePairComponent,\n    ImageSegmentationComponent,\n    VehicleListComponent,\n    VehicleComponent,\n    PreviewComponent,\n    RgbImageComponent,\n    SegmentationImageComponent,\n    VehiclesOnlineComponent,\n    VehiclesOfflineComponent,\n    VehicleOverviewComponent,\n    VehicleGeolocationComponent,\n    VehicleImagesComponent,\n    VehicleLoggingComponent,\n    VehicleSystemComponent,\n    VehicleStatusComponent,\n    TableUtil,\n    VehicleStatusDetailComponent,\n    ImageComponent,\n    ImageExpansionComponent,\n    MedallionComponent,\n    ObjectDetectionDetailComponent,\n    StopImagesComponent,\n    VehicleMissionStatsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutes,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxJsonViewerModule,\n    // Material\n    MatListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatGridListModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    MatTableModule,\n    MatButtonToggleModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatRadioModule,\n    MatSelectModule,\n    // \n    GraphQLModule,\n    SocialLoginModule,\n    NgDynamicBreadcrumbModule,\n    InfiniteScrollModule\n  ],\n  providers: [{\n    provide: 'SocialAuthServiceConfig',\n    useValue: {\n      autoLogin: true,\n      providers: [\n        {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          provider: new GoogleLoginProvider(\n            environment.googleAuthClientId\n          )\n        }\n      ]\n    } as SocialAuthServiceConfig,\n  },\n  {\n    provide: APOLLO_OPTIONS,\n    // @ts-ignore\n    useFactory(httpLink: HttpLink): ApolloClientOptions {\n      // Create an http link:\n      const http = httpLink.create({\n        uri: `${location.protocol}//${location.host}${environment.serviceEndpoint}`,\n      });\n\n\n      // Create a WebSocket link:\n      const ws = new WebSocketLink({\n        uri: `${location.protocol === \"https:\" ? \"wss:\" : \"ws:\"}//${location.host}${environment.serviceEndpoint}`,\n        options: {\n          reconnect: true,\n        },\n      });\n      const link = split(\n        ({ query }) => {\n          let definition = getMainDefinition(query);\n          return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n        },\n        ws,\n        http,\n      );\n\n      const defaultOptions = {\n        watchQuery: {\n          fetchPolicy: 'no-cache',\n          // fetchPolicy: 'network-only',\n          errorPolicy: 'ignore',\n        },\n        query: {\n          fetchPolicy: 'no-cache',\n          errorPolicy: 'ignore',\n          // fetchPolicy: 'network-only',\n          // errorPolicy: 'all',\n        },\n        subscription: {\n          fetchPolicy: 'no-cache',\n          errorPolicy: 'ignore',\n          // fetchPolicy: 'network-only',\n          // errorPolicy: 'all',\n        },\n      }\n\n      return {\n        link,\n        cache: new InMemoryCache(),\n        defaultOptions: defaultOptions,\n        // ... options\n      };\n    },\n    deps: [HttpLink],\n  },\n    MenuService,\n    AuthGuardService,\n    GeolocationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"medallion\">\n    <div *ngIf=\"title\" class=\"medallion__title\">\n        {{title}}\n    </div>\n    <div *ngIf=\"content\" class=\"medallion__content\">\n        {{content}}\n    </div>\n    <ng-content></ng-content>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-medallion',\n  templateUrl: './medallion.component.html',\n  styleUrls: ['./medallion.component.scss']\n})\nexport class MedallionComponent implements OnInit {\n\n  @Input() title: string =\"\"\n  @Input() content: any =\"\"\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input, AfterViewInit, AfterViewChecked } from '@angular/core';\nimport { v4 as uuid } from \"uuid\"\nimport {ImageService} from 'src/app/services/images/image.service'\nimport {MatDialog} from '@angular/material/dialog';\nimport { ImageExpansionComponent } from '../../modals/image-expansion/image-expansion.component';\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit, AfterViewInit, AfterViewChecked {\n  imageUrl: string = \"\"\n  width: string=\"\"\n  height: string=\"\"\n  resultId: string = uuid()\n  lensId: string = uuid()\n  zoomAdded: boolean = false;\n\n  @Input() id: string = uuid()\n  @Input() class: string = \"\"\n  @Input() label: string=\"\"\n  @Input() headerId:string=\"\"\n  @Input() data: string | [] | {} | undefined;\n\n  constructor( \n    private imageService: ImageService\n    , public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    let parsedData;\n\n    try{\n      switch(typeof this.data){\n        case \"string\":\n           parsedData =  {...JSON.parse(this.data)}\n          break;\n        case \"object\":\n          parsedData = {...this.data};\n          break;\n        default:\n            parsedData = {}\n            break;\n      }\n      this.width = (parsedData as any).width +\"px\"\n      this.height = (parsedData as any).height+\"px\"\n      this.imageUrl = this.imageService.getDataURL(parsedData)\n    }catch(e){\n      console.log(e.message)\n    }\n\n  }\n\n  ngAfterViewInit(){\n  }\n\n  ngAfterViewChecked(){\n  }\n\n  openDialog(): void{\n    const dialogRef = this.dialog.open(ImageExpansionComponent, {\n      data:{\n          headerId:this.headerId,\n          label:this.label,\n          width:this.width,\n          height: this.height,\n          imageUrl: this.imageUrl\n        }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog closed: ${result}`);\n    });\n  }\n\n}\n","<!-- <img \n    [src]=\"imageUrl\" \n    [id]=id [class]=\"class\" \n    [ngStyle]=\"{maxWidth:width, maxHeight:height}\"\n    (click)=\"openDialog()\"\n    > -->\n    <img \n    [src]=\"imageUrl\" \n    [id]=id [class]=\"class\" \n    (click)=\"openDialog()\"\n    >\n","import { Component, OnInit, Input, AfterViewInit, AfterViewChecked } from '@angular/core';\nimport { v4 as uuid } from \"uuid\"\nimport {ImageService} from 'src/app/services/images/image.service'\n\n@Component({\n  selector: 'app-rgb-image',\n  templateUrl: './rgb-image.component.html',\n  styleUrls: ['./rgb-image.component.scss']\n})\nexport class RgbImageComponent implements OnInit, AfterViewInit, AfterViewChecked {\n  private regexArray =  /^(\\[)(.*)(\\])$/\n  private result: any\n  private lens: any\n  private img:  any\n  private cx: any\n  private cy: any\n  \n  imageUrl: string = \"\"\n  width: string=\"\"\n  height: string=\"\"\n  resultId: string = uuid()\n  lensId: string = uuid()\n  zoomAdded: boolean = false;\n\n  @Input() id: string = uuid()\n  @Input() class: string = \"\"\n  @Input() data: string | [] | {} | undefined;\n\n  constructor( private imageService: ImageService) { }\n\n  private movelens(e:any) {\n    this.result.style.display=\"block\"\n    this.lens.style.display=\"block\"\n    let pos, x, y;\n    /* Prevent any other actions that may occur when moving over the image */\n    e.preventDefault();\n    /* Get the cursor's x and y positions: */\n    pos = this.getCursorPos(e);\n    /* Calculate the position of the this.lens: */\n    x = pos.x - (this.lens.offsetWidth / 2);\n    y = pos.y - (this.lens.offsetHeight / 2);\n    /* Prevent the this.lens from being positioned outside the image: */\n    if (x > this.img.width - this.lens.offsetWidth) {x = this.img.width - this.lens.offsetWidth;}\n    if (x < 0) {x = 0;}\n    if (y > this.img.height - this.lens.offsetHeight) {y = this.img.height - this.lens.offsetHeight;}\n    if (y < 0) {y = 0;}\n    /* Set the position of the this.lens: */\n    this.lens.style.left = x + \"px\";\n    this.lens.style.top = y + \"px\";\n    /* Display what the this.lens \"sees\": */\n    if(window.visualViewport.width <= (this.result.offsetWidth +x + 150))\n      this.result.style.left = (x - 300) + \"px\"\n    else\n      this.result.style.left = (x + 40) + \"px\"\n    this.result.style.top = (y + 40) + \"px\"\n\n    this.result.style.backgroundPosition = \"-\" + (x * this.cx) + \"px -\" + (y * this.cy) + \"px\";\n  }\n  private getCursorPos(e:any) {\n    var a, x = 0, y = 0;\n    e = e || window.event;\n    /* Get the x and y positions of the image: */\n    a = this.img.getBoundingClientRect();\n    /* Calculate the cursor's x and y coordinates, relative to the image: */\n    x = e.pageX - a.left;\n    y = e.pageY - a.top;\n    /* Consider any page scrolling: */\n    x = x - window.pageXOffset;\n    y = y - window.pageYOffset;\n    return {x : x, y : y};\n  }\n\n  private hideZoom(){\n    this.result.style.display=\"none\"\n    this.lens.style.display=\"none\"\n  }\n  private setupZoom(){\n    this.result = document.getElementById(this.resultId);\n    /* Create this.lens: */\n    this.lens = document.getElementById(this.lensId);\n    /* Insert this.lens: */\n    this.img.parentElement.insertBefore(this.lens, this.img);\n    /* Calculate the ratio between this.result DIV and this.lens: */\n    this.cx = +(window.getComputedStyle(this.result).width.replace(\"px\",\"\")) / +(window.getComputedStyle(this.lens).width.replace(\"px\",\"\"));\n    this.cy = +(window.getComputedStyle(this.result).height.replace(\"px\",\"\")) / +(window.getComputedStyle(this.lens).height.replace(\"px\",\"\"));\n    /* Set background properties for the this.result DIV */\n    this.result.style.backgroundImage = \"url('\" + this.img.src + \"')\";\n    this.result.style.backgroundSize = (this.img.width * this.cx) + \"px \" + (this.img.height * this.cy) + \"px\";\n    /* Execute a function when someone moves the cursor over the image, or the this.lens: */\n    this.lens.addEventListener(\"mousemove\", this.movelens.bind(this));\n    this.img.addEventListener(\"mousemove\",  this.movelens.bind(this));\n    this.lens.addEventListener(\"mouseleave\", this.hideZoom.bind(this))\n    this.img.addEventListener(\"mouseleave\", this.hideZoom.bind(this))\n\n    /* And also for touch screens: */\n    this.lens.addEventListener(\"touchmove\",  this.movelens.bind(this));\n    this.img.addEventListener(\"touchmove\",  this.movelens.bind(this));\n  }\n\n  private renderImageZoom (){\n    if(!this.zoomAdded){\n      this.img = document.getElementById(this.id);\n      this.img.removeEventListener(\"load\", this.setupZoom.bind(this))\n      this.img.addEventListener(\"load\", this.setupZoom.bind(this))\n      this.zoomAdded= true\n  }\n  }\n  ngOnInit(): void {\n    let parsedData;\n\n    try{\n      switch(typeof this.data){\n        case \"string\":\n           parsedData =  {...JSON.parse(this.data)}\n          break;\n        case \"object\":\n          parsedData = {...this.data};\n          break;\n        default:\n            parsedData = {}\n            break;\n      }\n\n      this.width = (parsedData as any).width +\"px\"\n      this.height = (parsedData as any).height+\"px\"\n      this.imageUrl = this.imageService.getDataURL(parsedData)\n\n    }catch(e){\n      console.log(e.message)\n    }\n  }\n\n  ngAfterViewInit(){\n  }\n\n  ngAfterViewChecked(){\n    if(document.getElementById(this.id))\n      this.renderImageZoom()\n  }\n\n}\n","<div class=\"img-zoom-container\">\n    <img [src]=\"imageUrl\" [id]=id [class]=\"class\" [ngStyle]=\"{maxWidth:width, maxHeight:height}\">\n    <div [id]=\"resultId\" class=\"img-zoom-result\"></div>\n    <div [id]=\"lensId\" class=\"img-zoom-lens\"></div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChange } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { v4 as uuid } from \"uuid\"\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service'\nimport { ImageService } from 'src/app/services/images/image.service'\n\n@Component({\n  selector: 'app-segmentation-image',\n  templateUrl: './segmentation-image.component.html',\n  styleUrls: ['./segmentation-image.component.scss']\n})\nexport class SegmentationImageComponent implements OnInit {\n\n  querySubscription: Subscription | null = null\n  imageData: string | {} | null = \"\"\n  imageUrl: string | {} | null = \"\"\n  noImage: boolean = false\n  imgId: string | null = uuid()\n\n  @Input() imageHeaderId: number | null | undefined | string;\n  @Output(\"load\") load =  new EventEmitter<string>()\n\n  constructor(    \n    private gqlQueryService: GqlQueryService\n    , private imageService: ImageService) { }\n\n  \n  private getSegmentationImage(argsImageHeaderId?:any): void{\n\n    const imageHeaderId = argsImageHeaderId || this.imageHeaderId\n\n    if (!imageHeaderId){\n      this.load.emit(\"unloaded\")\n      return;\n    }\n\n    this.querySubscription?.unsubscribe()\n    this.querySubscription = this.gqlQueryService\n    .getSegmentationMapByHeaderId({ imageHeaderId })\n    .subscribe(response => {\n      const image = response.find((msg:any)=>msg.encoding === \"rgb8\")\n      const segmentation = response.find((msg:any)=>msg.encoding === \"mono8\")\n\n      if(!response.length || !segmentation){\n        this.load.emit(\"no segmentation\")\n        return\n      }\n\n      this.imageData = this.imageService.getDataURL({...segmentation, isSegmentation:true});\n      this.imageUrl = this.imageService.getDataURL({...image});\n\n      this.load.emit(\"loaded\")\n    })\n  }\n\n  ngOnInit(): void {\n    this.getSegmentationImage()\n  }\n\n  ngOnChanges(changes: any) {\n    if ((changes.imageHeaderId.previousValue !== changes.imageHeaderId.currentValue) ) {\n      this.getSegmentationImage(changes.imageHeaderId.currentValue)\n    }\n  }\n\n\n}\n","<div *ngIf=\"imageData; else loading\"class=\"segmentation-image \" [ngStyle]=\"{ 'background-image': 'url(' + imageData + ')'}\">\n    <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" [id]=\"imgId\">\n</div>\n<ng-template #loading>\n    <span *ngIf=\"noImage; else loader\">\n    </span>\n    <ng-template #loader>\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </ng-template>\n</ng-template>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { faBars} from '@fortawesome/free-solid-svg-icons';\nimport { AlertService } from 'src/app/services/notifications/alert.service'\nimport {MenuService} from \"../../services/navigation/menu.service\"\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { Subscription } from 'rxjs';\nimport {ScrollService} from 'src/app/services/layout/scroll.service'\n\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit, OnDestroy {\n  faBars = faBars\n  showRightNav=false;\n  alertSubscription: Subscription | null = null\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(\n    private alertService: AlertService\n    , private menuService: MenuService\n    , private _snackBar: MatSnackBar\n    , private scollService: ScrollService\n  ) { \n  }\n\n  ngOnInit(): void {\n    this.menuService.menu.subscribe((data)=>{\n      this.showRightNav = data ? true : false;\n    })\n    // this.alertSubscription = this.alertService.alerts.subscribe(data=>{\n    //   this._snackBar.open(data.alertMessage , 'Dismiss', {\n    //      duration: 1000,\n    //     horizontalPosition: this.horizontalPosition,\n    //     verticalPosition: this.verticalPosition,\n    //   });\n    // })\n  }\n\n  ngOnDestroy():void {\n    this.alertSubscription?.unsubscribe()\n  }\n\n  toggleSideNav(){\n    this.showRightNav = !this.showRightNav;\n  }\n\n  onScroll(){\n    this.scollService.contentScroll.next(true)\n    console.log(\"content scrolled\")\n  }\n\n}\n","<div class=\"container__content\" [ngClass]=\"{'right_nav':showRightNav}\">\n    <div class=\"container__content-main\" \n        infiniteScroll\n        [infiniteScrollDistance]=\"2\"\n        [infiniteScrollThrottle]=\"50\"\n        (scrolled)=\"onScroll()\">\n        <router-outlet></router-outlet>\n    </div>\n    <app-navigation></app-navigation>\n</div>\n\n","import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Subscription, BehaviorSubject} from 'rxjs';\nimport { v4 as uuid } from \"uuid\"\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\n\n\n@Component({\n  selector: 'app-image-expansion',\n  templateUrl: './image-expansion.component.html',\n  styleUrls: ['./image-expansion.component.scss']\n})\nexport class ImageExpansionComponent implements OnInit, OnDestroy {\n  \n  id: string = uuid()\n  class:string = \"\"\n  loadedSegmentations:boolean | null =null\n  segmentationTopic:string =\"\"\n  segmentationQuery:Subscription | null = null\n  segmentationTopic$ = new BehaviorSubject<string | null>(this.segmentationTopic);\n  segmentationToggle = {\n    color:\"primary\",\n    checked:false,\n    disabled: this.loadedSegmentations !== null && !this.loadedSegmentations\n  } \n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any\n    , private graphQLQuery: GqlQueryService) { \n    }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() :void{\n  }\n\n  toggleSegmentation(event:MatSlideToggleChange){\n    this.segmentationToggle.checked = event.checked\n  }\n\n  loadSegmentation(){\n    return typeof this.loadedSegmentations === 'boolean'\n  }\n  onSegmentationLoad(event:any) {\n    switch(event){\n      case \"loaded\":\n          this.loadedSegmentations = true\n          this.segmentationToggle.checked = true\n          break;\n      case \"no segmentation\":\n      case \"unloaded\":\n          this.loadedSegmentations = false\n          break;\n    }\n  }\n}\n","<h2 mat-dialog-title>{{data.label}}</h2>\n<mat-dialog-content>\n    <div class=\"grid gap images\">\n        <div class=\"grid__cell center-cell-content\" *ngIf=\"loadSegmentation(); else loader\">\n            <mat-slide-toggle \n                class=\"segmentation-toggle\"\n                [color]=\"segmentationToggle.color\"\n                [checked]=\"segmentationToggle.checked\"\n                [disabled]=\"!loadedSegmentations\"\n                (change)=\"toggleSegmentation($event)\">\n                Segmentation\n            </mat-slide-toggle>\n        </div>\n        <ng-template #loader>\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n        </ng-template>\n        <div class=\"grid__cell center-cell-content\" >\n            <div class=\"segmentation\" [ngStyle]=\"{display: segmentationToggle.checked ? 'inline-block' : 'none'} \">\n                <app-segmentation-image   (load)=\"onSegmentationLoad($event)\"  [imageHeaderId]=\"data.headerId\"></app-segmentation-image>\n            </div>\n            <img [src]=\"data.imageUrl\" [id]=id [class]=\"class\" [ngClass]=\"{segmented: segmentationToggle.checked}\">\n            \n            <!-- <img [src]=\"data.imageUrl\" [id]=id [class]=\"class\" > -->\n\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Close</button>\n  </mat-dialog-actions>","import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service';\n\n@Component({\n  selector: 'app-object-detection-detail',\n  templateUrl: './object-detection-detail.component.html',\n  styleUrls: ['./object-detection-detail.component.scss']\n})\nexport class ObjectDetectionDetailComponent implements OnInit, OnDestroy {\n\n  imageSubscription: Subscription | null = null\n  image: any = null\n  isImageLoaded:boolean = false\n  coordinates: number[][]= []\n  vehicleId: number | null = null\n  json:any = {}\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public id: number,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    , private graphQLQuery: GqlQueryService) { \n      const fieldOrigin = data.message.centroidLocation.fieldOrigin\n      const xyzCamera = data.message.centroidLocation.xyzCamera\n      this.json  = {fieldOrigin, xyzCamera}\n      this.vehicleId = data.vehicleId\n      this.coordinates = [\n          [\n            parseFloat(fieldOrigin.longitudeDeg)\n            , parseFloat(fieldOrigin.latitudeDeg)\n\n          ]\n        ]\n\n    }\n    \n  ngOnInit(): void {\n    this.imageSubscription = this.graphQLQuery.getPreviewImageByCameraMessageHeaderId({headerId: parseInt(this.data.message.header.headerid)})\n      .subscribe((response:any)=>{\n        this.isImageLoaded = true\n        this.image = response\n      })\n  }\n\n  ngOnDestroy(): void {\n    this.imageSubscription?.unsubscribe()\n  }\n\n}\n","<h2 mat-dialog-title>{{data.topic.name}}</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"grid gap col-2\">\n    <div class=\"grid__cell sticky\">\n        <div class=\"grid__cell--label\">Image & Geolocation</div>\n        <div class=\"grid__cell--content\">\n            <div *ngIf=\"image; else loader\">\n                <app-image \n                    [data]=\"image\" \n                    [label]=\"data.topic.name\" \n                    [headerId]=\"data.message.header.headerid\">\n                </app-image>\n                <hr/>\n                <div class=\"map\" *ngIf=\"vehicleId && coordinates.length\">\n                    <app-starfire \n                        [showTractor]=true \n                        [zoom]=20 \n                        [coordinates]=\"coordinates\"\n                        [vehicleId]=\"vehicleId\" >\n                    </app-starfire>\n                </div>\n            </div>\n\n            <ng-template #loader>\n                <mat-icon aria-hidden=\"false\" class=\"no-image\" aria-label=\"No Image\">image_not_supported</mat-icon>\n                <mat-progress-bar *ngIf=\"!isImageLoaded\" mode=\"indeterminate\"></mat-progress-bar>\n            </ng-template>\n        </div>\n    </div>\n    <div class=\"grid__cell\">\n        <div class=\"grid__cell--label sticky\">Raw Data</div>\n        <div class=\"grid__cell--content json\">\n            <ngx-json-viewer \n                [json]=\"data\" \n                [expanded]=\"true\">\n            </ngx-json-viewer>\n        </div>\n    </div>\n</div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-vehicle-status-detail',\n  templateUrl: './vehicle-status-detail.component.html',\n  styleUrls: ['./vehicle-status-detail.component.scss']\n})\nexport class VehicleStatusDetailComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public id: number,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{data.status}}</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"grid gap col-2\" [ngClass]=\"{'col-3': data.alerts}\">\n    <div class=\"grid__cell\">\n        <div class=\"grid__cell--label\">State</div>\n        <div class=\"grid__cell--content\">\n            <mat-list>\n                <mat-list-item> \n                    <div mat-line>\n                        <b>Node </b> \n                    </div>\n                    <div mat-line>\n                        {{data.node}}\n                    </div> \n                </mat-list-item>\n                <mat-list-item>\n                    <div mat-line>\n                        <b>Topic </b> \n                    </div>\n                    <div mat-line>\n                        {{data.topic}}\n                    </div>\n                </mat-list-item> \n                <mat-list-item> \n                    <div mat-line>\n                        <b>Timestamp </b> \n                    </div>\n                    <div mat-line>\n                        {{data.timestamp | date:'medium'}}\n                    </div> \n                </mat-list-item>\n            </mat-list>\n        </div>\n    </div>\n    <div class=\"grid__cell\" *ngIf=\"data.alerts\">\n        <div class=\"grid__cell--label\">Alerts</div>\n        <div class=\"grid__cell--content\">\n            <mat-list>\n                <mat-list-item> \n                    <div mat-line>\n                        <b>Type </b> \n                    </div>\n                    <div mat-line>\n                        {{data.alerts.alertType.name}} \n                    </div> \n                </mat-list-item>\n                <mat-list-item> \n                    <div mat-line>\n                        <b>Severity </b> \n                    </div>\n                    <div mat-line>\n                        {{data.alerts.alertType.severity}} \n                    </div> \n                </mat-list-item>\n                <mat-list-item>\n                    <div mat-line>\n                        <b>Dismissed </b> \n                    </div>\n                    <div mat-line>\n                        {{data.alerts.dismissed}}\n                    </div>\n                </mat-list-item>\n                <mat-list-item>\n                    <div mat-line>\n                        <b>Acknowledged </b> \n                    </div>\n                    <div mat-line>\n                        {{data.alerts.read}}\n                    </div>\n                </mat-list-item>\n                <mat-list-item> \n                    <div mat-line>\n                        <b>Description </b> \n                    </div>\n                    <div mat-line>\n                        {{data.alerts.message}}\n                    </div>\n                </mat-list-item>\n            </mat-list>\n        </div>\n    </div>\n    <div class=\"grid__cell\">\n        <div class=\"grid__cell--label\">Reasons</div>\n        <div class=\"grid__cell--content\">\n            <mat-accordion class=\"reasons\">\n                <mat-expansion-panel *ngFor=\"let reason of data.vehicleStatusDetails\" [ngClass]=\"{active:reason.isActive}\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title>\n                            <mat-icon *ngIf=\"reason.isActive\" >priority_high</mat-icon>{{reason.reason.name}}\n                          </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <mat-list>\n                        <mat-list-item> \n                            <div mat-line>\n                                <b>isActive</b> \n                            </div>\n                            <div mat-line>\n                                {{reason.isActive}} \n                            </div> \n                        </mat-list-item>\n                        <mat-list-item> \n                            <div mat-line>\n                                <b>isRecoverable</b> \n                            </div>\n                            <div mat-line>\n                                {{reason.isRecoverable}} \n                            </div> \n                        </mat-list-item>\n                        <mat-list-item> \n                            <div mat-line>\n                                <b>Description</b> \n                            </div>\n                            <div mat-line>\n                                {{reason.description}} \n                            </div> \n                        </mat-list-item>\n                    </mat-list>\n                </mat-expansion-panel>\n            </mat-accordion>\n        </div>\n    </div>\n</div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SocialAuthService } from 'angularx-social-login';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n  showLeftNav:boolean | null;\n\n  constructor(\n    private socialAuthService: SocialAuthService,\n    private router: Router\n  ) { \n    this.showLeftNav = null\n  }\n\n  ngOnInit(): void {\n  }\n\n  toggleSideNav(){\n    this.showLeftNav = !this.showLeftNav;\n  }\n\n  ngOnDestroy(){\n    this.showLeftNav = null\n  }\n\n  logOut(): void {\n    this.socialAuthService.signOut();\n    this.router.navigate([\"/login\"])\n  }\n\n}\n","<nav class=\"nav__side-nav\" \n[ngClass]=\"{ show:showLeftNav===true, hide:showLeftNav===false }\">\n    <button class=\"nav__side-nav--toggle-btn\" \n        [ngClass]=\"{ show:showLeftNav===true, hide:showLeftNav===false}\"\n       (click)=\"toggleSideNav()\">\n       <mat-icon matSuffix aria-label=\"toggle mobile menu view\" >{{!showLeftNav ? \"menu\" : \"menu_open\"}}</mat-icon>\n    </button>\n    <mat-list (click)=\"toggleSideNav()\"> \n        <a [routerLink]='[\"/\"]' routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:false}\"  class=\"nav__side-nav--link\">\n            <mat-list-item>\n                <mat-icon class=\"example-tab-icon nav__side-nav--link-icon\">agriculture</mat-icon>\n                <div class=\"nav__side-nav--link-label\">Vehicles</div>\n            </mat-list-item>\n        </a> \n    </mat-list>\n    <mat-list class=\"nav__side-nav--profile\">\n        <a (click)=\"logOut()\">\n            <mat-list-item>LogOut</mat-list-item>\n        </a>\n    </mat-list>\n</nav>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n    selector: 'app-table-util',\n    template: '',\n    styleUrls: ['']\n  })\n  export class TableUtil implements OnInit {\n    public tableList:any = new MatTableDataSource([])\n\n    @Output() onClick:  EventEmitter<any> = new EventEmitter<any>()\n    \n    constructor(){\n    }\n\n    ngOnInit() :void{\n\n    }\n\n    updateList(data:any){\n      this.tableList = new MatTableDataSource(data)\n    }\n    \n    rowClick(row:any){\n        this.onClick.emit(row.vehicle_id || row.id)\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.tableList.filter = filterValue.trim().toLowerCase();\n    \n        if (this.tableList.paginator) {\n          this.tableList.paginator.firstPage();\n        }\n      }\n\n  }","<nav class=\"nav__top\">\n    <a [routerLink]='[\"/\"]' routerLinkActive=\"active\"  class=\"nav__logo\" >\n        <img src=\"/assets/brt-icon-sm.png\"/>\n    </a>\n\n    <div *ngIf=\"menu\" class=\"nav__top-menu\" \n        [ngClass]=\"{ show:showRightNav===true, hide:showRightNav===false}\" >\n        <h5 *ngIf=\"menu.header\">{{menu.header}}</h5>\n        <ul *ngIf=\"menu.links.length\" >\n            <li *ngFor=\"let menuItem of menu.links\">\n                <a *ngIf=\"menuItem.callback\" mat-flat-button (click)=\"menuItem.callback($event); toggleSideNav()\" tooltip=\"menuItem.tooltip\"> {{menuItem.label}} </a>\n                <a *ngIf=\"menuItem.url\" \n                    mat-flat-button \n                    [routerLink]=\"[menuItem.url]\" \n                    routerLinkActive=\"active\"  \n                    class=\"nav__side-nav--link\" \n                    [routerLinkActiveOptions]=\"{exact:true}\"  \n                    tooltip=\"menuItem.tooltip\"> {{menuItem.label}} </a>\n            </li>\n        </ul>\n    </div>\n\n    <button class=\"nav__top-nav--toggle-btn\" \n        *ngIf=\"menu && menu.links.length\"\n        (click)=\"toggleSideNav()\" \n        [ngClass]=\"{ show:showRightNav===true, hide:showRightNav===false}\">\n        <mat-icon matSuffix aria-label=\"toggle mobile menu view\" >\n            {{!showRightNav ? \"menu\" : \"menu_open\"}}\n        </mat-icon>\n    </button>\n</nav>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {MenuService} from \"../../services/navigation/menu.service\"\nimport {IMenu} from \"../../interfaces/navigation/menu\"\n\n@Component({\n  selector: 'app-top-navigation',\n  templateUrl: './top-navigation.component.html',\n  styleUrls: ['./top-navigation.component.scss']\n})\nexport class TopNavigationComponent implements OnInit, OnDestroy {\n\n  menu:any\n  showRightNav:boolean | null;\n\n  constructor(private menuService: MenuService) {\n    this.showRightNav = null\n  }\n\n  ngOnInit(): void {\n    this.showRightNav = null\n\n    this.menuService.menu.subscribe((data)=>{\n      this.menu = data;\n    })\n  }\n\n  toggleSideNav(){\n    this.showRightNav = !this.showRightNav;\n  }\n\n  ngOnDestroy(){\n    this.showRightNav = null\n  }\n\n}\n","import { Component, Input, OnDestroy, OnInit, AfterViewInit, OnChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators'\nimport {v4 as uuid} from 'uuid'\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport {GeolocationService} from 'src/app/services/geolocation/geolocation.service'\n\n@Component({\n  selector: 'app-starfire',\n  templateUrl: './starfire.component.html',\n  styleUrls: ['./starfire.component.scss']\n})\nexport class StarfireComponent implements OnInit, OnDestroy,AfterViewInit, OnChanges {\n  querySubscription: Subscription |null =null\n  mapNodeId: string = uuid()\n  hasCoordinates:boolean = false\n  isLoading:boolean = true\n\n  @Input() startDateTime:string = \"\" \n  @Input() endDateTime:string  = \"\" \n  @Input() playback: string = \"static\"\n  @Input() showTractor: boolean = false\n  @Input() zoom: number = 15\n  @Input() coordinates: number[][] | undefined;\n  @Input() lineColor: string | undefined;\n  @Input() lineSize:  number | undefined;\n  @Input() vehicleId: string | number | undefined;\n  @Input() lastPosition: boolean = false;\n\n  constructor(\n    private gqlQueryService: GqlQueryService\n    , private gisService: GeolocationService\n    , private graphQLSubscription: GqlSubscriptionService) { }\n\n  private formatTimestamps(datetime?:any) : any{\n    if(datetime)\n      return new Date(datetime).toISOString()\n\n    this.startDateTime = this.startDateTime ? new Date(this.startDateTime).toISOString(): new Date(new Date().valueOf() - (1000*60*60)).toISOString();\n    this.endDateTime = this.endDateTime ? new Date(this.endDateTime).toISOString(): new Date().toISOString()\n  }\n\n  private async setupDynamicMap(config:any){\n    return this.gisService.getLiveMap(config)\n  }\n\n  private async setupStaticMap(coordinates?:number[][]){\n    this.hasCoordinates = true\n    this.isLoading = false\n    this.gisService[this.playback ===\"static\" ? \"getStaticMap\" : \"getReplayMap\"]({\n      container:this.mapNodeId\n      , coordinates: coordinates || this.coordinates || []\n      , showTractor:this.showTractor\n      , zoom:this.zoom\n      , lineColor:this.lineColor\n      , lineSize:this.lineSize \n    })\n  }\n\n  private async generateLiveMap(){\n    const config = {\n      container:this.mapNodeId\n      , showTractor:this.showTractor\n      , coordinates: this.coordinates || []\n      , zoom:this.zoom\n    }\n\n    this.setupDynamicMap(config).then((mapConfig:any)=>{\n      const {map, geoJson, image} = mapConfig\n      const variables = this.vehicleId ? {vehicleId:parseInt((this.vehicleId as string))} :{}\n      this.querySubscription = this.graphQLSubscription\n        .getGeolocationStream(variables)\n        .subscribe(\n        (response:any) => {\n          this.hasCoordinates = true\n          this.isLoading = false\n          const {longitude,latitude} = response.data.sqlStarfire ? response.data.sqlStarfire.starfire.msg : (response.data.geographicCoordinates as {longitude:number, latitude:number})\n          const newCoordinates = [longitude,latitude]\n\n          // @ts-ignore\n          geoJson.data.features[0].geometry.coordinates.push(newCoordinates)\n          map.getSource('trace').setData(geoJson.data);\n\n          if (this.showTractor){\n            const imagePosition = this.gisService.getFeaturesGEOJSON({\n              type: 'geojson'\n              , dataType: 'FeatureCollection'\n              , geometryType: 'Feature'\n              , coordinateType: \"LineString\"\n              , coordinates: [newCoordinates]\n            })\n            map.getSource(image).setData(imagePosition.data);\n          }\n\n          map.panTo(newCoordinates);\n          \n        },\n        error => {\n          console.log(error);\n        }\n      )\n      \n    })\n  }\n\n  private async generateStaticMap(){\n    if(this.coordinates instanceof Array )\n      this.setupStaticMap()\n    else\n     if(this.vehicleId)\n      this.querySubscription = this.gqlQueryService[\n        this.lastPosition || (this.coordinates \n          && (this.coordinates as any).length) ?\n           \"getGeolocaton\" \n           : \"getVehicleLocationByDateTimestamp\"\n      ]({\n          vehicleId: parseInt(this.vehicleId.toString()) \n          , startDateTime: this.startDateTime\n          , endDateTime: this.endDateTime\n        })\n        .pipe(map((geoData:any)=>\n            geoData.map((geo:any)=>\n              geo.msg ?\n              [geo.msg.longitude, geo.msg.latitude] \n              :[]\n            )\n        ))\n        .subscribe((coordinates:any)=>{\n          if(coordinates.length)\n            this.setupStaticMap(coordinates)\n          else \n            this.isLoading = false\n        })\n  }\n\n  private queryGeoLocation(){\n    switch(this.playback){\n      case \"static\":\n      case \"replay\":\n        this.generateStaticMap()\n        break;\n      case \"live\":\n        this.generateLiveMap()    \n        break;\n      default:\n        break;\n    }\n  }\n  \n  private updateGeolocationOnDateTimeChange(event:any ){\n    if(\"startDateTime\" in event || \"endDateTime\" in event){\n      if(event.startDateTime)\n        this.startDateTime = this.formatTimestamps(event.startDateTime.currentValue)\n      if(event.endDateTime)\n        this.endDateTime = this.formatTimestamps(event.endDateTime.currentValue)\n\n      this.queryGeoLocation()\n    }\n  }\n\n  ngOnInit(): void { \n    this.formatTimestamps()\n   }\n\n  ngAfterViewInit(){\n    this.queryGeoLocation()\n  }\n\n  ngOnDestroy(){\n    this.querySubscription?.unsubscribe()\n  }\n\n  ngOnChanges(event:any): void{\n    this.updateGeolocationOnDateTimeChange(event)\n  }\n\n}\n","<div class=\"map\" [id]=\"mapNodeId\">\n    <div *ngIf=\"!hasCoordinates && !isLoading; else loader\">\n        <div class=\"nomap\"></div>\n    </div>\n    <ng-template #loader>\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </ng-template>\n</div>\n","import { Component, OnInit, Input, OnDestroy, OnChanges } from '@angular/core';\nimport { Subscription, BehaviorSubject} from 'rxjs';\nimport { v4 as uuid } from \"uuid\"\nimport {ThemePalette} from '@angular/material/core';\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\nimport {ImageService} from 'src/app/services/images/image.service'\nimport {PageEvent} from '@angular/material/paginator';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\n\n\n@Component({\n  selector: 'app-image-pair',\n  templateUrl: './image-pair.component.html',\n  styleUrls: ['./image-pair.component.scss']\n})\nexport class ImagePairComponent implements OnInit, OnDestroy, OnChanges {\n\n  loadedSegmentations:string[] = []\n  querySubscription: Subscription | null =null\n  leftImageUrl:string = \"\"\n  leftImageId:string = uuid()\n  imageHeaderId:number | undefined = undefined\n  rightImageUrl:string = \"\"\n  rightImageId:string = uuid()\n  segmentationTopic:string=\"\"\n  noImage: boolean = false\n  pageSize = 1\n  pagesLength= 0\n  // leftImageUrl$ = new BehaviorSubject<string | null>(this.leftImageUrl);\n  // rightImageUrl$ = new BehaviorSubject<string | null>(this.rightImageUrl);\n  segmentationTopic$ = new BehaviorSubject<string | null>(this.segmentationTopic);\n  // imageHeaderId$ = new BehaviorSubject<number | undefined>(this.imageHeaderId);\n  segmentationToggle = {\n    color:\"primary\",\n    checked:false,\n    disabled: this.loadedSegmentations.length < 2 || this.loadedSegmentations.indexOf(\"no segmentation\") !== -1\n  } \n\n  @Input()   topic: string = \"\";\n  @Input()   cursor: number = 0;\n\n  constructor( \n    private gqlQueryService: GqlQueryService\n    , private imageService : ImageService\n    ) { }\n\n  private getImagePair(argTopic?:string, argCursor?:number): void{\n    const topic = argTopic || this.topic\n    const cursor =  argCursor && argCursor >=0 ? argCursor : this.cursor\n    // this.leftImageUrl$.next(\"\")\n    // this.rightImageUrl$.next(\"\")\n\n\n    if(!topic)\n      return\n\n    this.querySubscription = this.gqlQueryService\n    .getImagePair({topic, cursor})\n    .subscribe(response=>{\n      this.noImage = true\n\n      if(!response.data.imagePair || !response.data.imagePair.length){\n        return;\n      }\n\n      this.noImage = false\n\n      const imagePair = response.data.imagePair[0]\n      this.pageSize = imagePair.pagination.pageSize\n      this.pagesLength = imagePair.pagination.length\n      this.cursor = imagePair.pagination.position\n      this.imageHeaderId = imagePair.msg.header.id\n      this.leftImageUrl = this.imageService.getDataURL(imagePair.msg.left_image)\n      this.rightImageUrl = this.imageService.getDataURL(imagePair.msg.right_image)\n      // this.imageHeaderId$.next(this.imageHeaderId)\n      // this.leftImageUrl$.next(this.leftImageUrl)\n      // this.rightImageUrl$.next(this.rightImageUrl)\n      this.segmentationTopic$.next(this.topic.split(\"/\").slice(0,2).concat([\"segmentation_map\"]).join(\"/\"))\n    })\n\n  }\n\n  toggleSegmentation(event:MatSlideToggleChange){\n    console.log(event)\n    this.segmentationToggle.checked = event.checked\n  }\n\n  getCurrentImage(event:PageEvent) {\n    if( this.cursor !== event.pageIndex ){\n      this.cursor = event.pageIndex\n      this.getImagePair()\n      console.log(event)\n    }\n  }\n\n  onSegmentationLoad(event:any) {\n    switch(event){\n      case \"no segmentation\":\n      case \"loaded\":\n          this.loadedSegmentations.push(event)\n          break;\n      case \"unloaded\":\n          this.loadedSegmentations.pop()\n          break;\n    }\n  }\n\n  ngOnInit(): void {\n   this.getImagePair()\n  }\n\n  ngOnChanges(changes:any){\n    // if (changes.topic.previousValue !== changes.topic.currentValue) {\n    //   this.getImagePair(changes.topic.currentValue)\n    // }\n  }\n\n  ngOnDestroy(): void{\n    this.querySubscription?.unsubscribe()\n  }\n  \n\n}\n","<!-- <mat-paginator [length]=\"pagesLength\"\n    [pageSize]=\"pageSize\"\n    (page)=\"getCurrentImage($event)\">\n</mat-paginator> -->\n<div *ngIf=\"leftImageUrl && rightImageUrl; else loading;\" >\n    <div class=\"grid gap images\">\n        <div class=\"grid__cell\" *ngIf=\"loadedSegmentations.length == 2; else segmentationLoader;\">\n            <mat-slide-toggle \n                class=\"segmentation-toggle\"\n                [color]=\"segmentationToggle.color\"\n                [checked]=\"segmentationToggle.checked\"\n                [disabled]=\"loadedSegmentations.length < 2\"\n                (change)=\"toggleSegmentation($event)\">\n                Segmentation\n            </mat-slide-toggle>\n        </div> \n        <ng-template #segmentationLoader>\n            <div class=\"grid__cell\">\n                <mat-progress-bar mode=\"indeterminate\">\n                    Segmentation\n                </mat-progress-bar>\n            </div>\n        </ng-template>\n        <div class=\"grid__cell\">\n            <div class=\"segmentation\" [ngStyle]=\"{visibility: segmentationToggle.checked ? 'visible' : 'hidden'} \">\n                <app-image-segmentation (load)=\"onSegmentationLoad($event)\" [imageId]=\"imageHeaderId\" [topic]=\"segmentationTopic$ | async\" ></app-image-segmentation>\n            </div>\n            <div class=\"grid__cell--label\">Left</div>\n            <img [src]=\"leftImageUrl\" [id]=\"leftImageId\">\n    \n        </div>\n        <div class=\"grid__cell\">\n            <div class=\"segmentation\" [ngStyle]=\"{visibility: segmentationToggle.checked ? 'visible' : 'hidden'} \">\n                <app-image-segmentation (load)=\"onSegmentationLoad($event)\" [imageId]=\"imageHeaderId\" [topic]=\"segmentationTopic$ | async\" ></app-image-segmentation>\n            </div>\n            <div class=\"grid__cell--label\">Right</div>\n            <img [src]=\"rightImageUrl\" [id]=\"rightImageId\">\n        </div>\n    </div>\n</div>\n\n<ng-template #loading>\n    <span *ngIf=\"noImage; else loader\">\n        No image were found.\n    </span>\n    <ng-template #loader>\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </ng-template>\n</ng-template>","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChange } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { v4 as uuid } from \"uuid\"\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service'\nimport { ImageService } from 'src/app/services/images/image.service'\n\n@Component({\n  selector: 'app-image-segmentation',\n  templateUrl: './image-segmentation.component.html',\n  styleUrls: ['./image-segmentation.component.scss']\n})\nexport class ImageSegmentationComponent implements OnInit, OnDestroy, OnChanges {\n\n  querySubscription: Subscription | null = null\n  imageUrl: string | null = \"\"\n  noImage: boolean = false\n  imgId: string | null = uuid()\n\n\n  @Input() topic: string | null | undefined = \"\";\n  @Input() cursor: number = 0;\n  @Input() imageId: number | null | undefined;\n  @Output(\"load\") load =  new EventEmitter<string>()\n\n  constructor(\n    private gqlQueryService: GqlQueryService\n    , private imageService: ImageService\n  ) { }\n\n  private getSegmentationImage(argTopic?: string | null | undefined, argImageId?: number | undefined): void{\n    const topic:string | null | undefined = argTopic || this.topic\n    const imageId:number | null | undefined = argImageId || this.imageId\n\n    if (!imageId || !topic){\n      this.load.emit(\"unloaded\")\n      return;\n    }\n\n    this.querySubscription?.unsubscribe()\n    this.querySubscription = this.gqlQueryService\n    .getSegmentationMap({ topic, cursor: this.cursor, id: imageId })\n    .subscribe(response => {\n      if (!response.data.segmentationMap || !response.data.segmentationMap.length) {\n        this.noImage = true\n        this.load.emit(\"no segmentation\")\n        return;\n      }\n\n      const segmentationMap = response.data.segmentationMap[0]\n\n      this.imageUrl = this.imageService.getDataURL({...segmentationMap.msg.image, isSegmentation:true})\n      this.load.emit(\"loaded\")\n    })\n  }\n\n  ngOnInit(): void {\n    this.getSegmentationImage()\n  }\n\n  ngOnChanges(changes: any) {\n    if ((changes.topic.previousValue !== changes.topic.currentValue) \n    || (changes.imageId.previousValue !== changes.imageId.currentValue)) {\n      this.getSegmentationImage(changes.topic.currentValue, changes.imageId.currentValue)\n    }\n  }\n\n\n  ngOnDestroy() {\n    this.querySubscription?.unsubscribe()\n  }\n\n}\n","<div *ngIf=\"imageUrl; else loading\"class=\"segmentation-image \" [ngStyle]=\"{ 'background-image': 'url(' + imageUrl + ')'}\">\n    <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" [id]=\"imgId\">\n</div>\n<ng-template #loading>\n    <span *ngIf=\"noImage; else loader\">\n    </span>\n    <ng-template #loader>\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </ng-template>\n</ng-template>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { v4 as uuid } from \"uuid\"\nimport { Subscription, BehaviorSubject} from 'rxjs';\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\nimport {ImageService} from 'src/app/services/images/image.service'\nimport {PageEvent} from '@angular/material/paginator';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.scss']\n})\nexport class PreviewComponent implements OnInit, OnDestroy {\n\n  loadedSegmentations:boolean | null =null\n  querySubscription: Subscription | null =null\n  imageUrl: string = \"\"\n  imageData: any[] = []\n  imageId: string = uuid()\n  imageHeaderId: string | undefined\n  segmentationTopic:string =\"\"\n  noImage:boolean = false\n  pageSize:number = 1\n  pageSizeOptions: number[] = [1, 5, 10]\n  pagesLength: number = 0\n  segmentationTopic$ = new BehaviorSubject<string | null>(this.segmentationTopic);\n  segmentationToggle = {\n    color:\"primary\",\n    checked:false,\n    disabled: this.loadedSegmentations !== null && !this.loadedSegmentations\n  } \n  @Input() topic: string | null = \"\";\n  @Input() cursor: number = 0;\n  @Input() vehicleId: string |undefined;\n  @Input() topicId: number | null = null\n\n  \n  constructor(\n    private imageService:ImageService\n    , private gqlQueryService: GqlQueryService\n  ) { }\n\n  ngOnInit(): void {\n    this.getImage()\n  }\n\n  ngOnDestroy(): void{\n    this.querySubscription?.unsubscribe()\n  }\n\n  private getImage(argCursor?:number): void{\n    const cursor =  argCursor && argCursor >=0 ? argCursor : this.cursor\n    \n    if(!this.topic || !this.vehicleId)\n      return\n\n      this.querySubscription = this\n        .gqlQueryService\n        .getImagePreview({\n          vehicleId: this.vehicleId\n          , topicName: this.topic\n          , cursor: this.cursor\n          , size: this.pageSize\n        })\n        .subscribe(response=>{\n          this.noImage = true\n          this.pagesLength = response.totalCount\n          this.imageData = response.images\n        })\n  }\n\n  toggleSegmentation(event:MatSlideToggleChange){\n    console.log(event)\n    this.segmentationToggle.checked = event.checked\n  }\n\n  getCurrentImage(event:PageEvent) {\n    if( this.cursor !== event.pageIndex || event.pageSize !== this.pageSize ){\n      this.cursor = event.pageIndex\n      this.imageData =[];\n      this.noImage =false;\n      this.pageSize = event.pageSize\n      this.loadedSegmentations = null;\n      this.getImage()\n      console.log(event)\n    }\n  }\n\n  loadSegmentation(){\n    return typeof this.loadedSegmentations === 'boolean'\n  }\n  onSegmentationLoad(event:any) {\n    switch(event){\n      case \"loaded\":\n          this.loadedSegmentations = true\n          break;\n      case \"no segmentation\":\n      case \"unloaded\":\n          this.loadedSegmentations = false\n          break;\n    }\n  }\n}\n","<div *ngIf=\"imageData; else loading;\" >\n    <div class=\"grid gap images\">\n        <!-- <div class=\"grid__cell center-cell-content\" *ngIf=\"loadSegmentation(); else segmentationLoader;\">\n            <mat-slide-toggle \n                class=\"segmentation-toggle\"\n                [color]=\"segmentationToggle.color\"\n                [checked]=\"segmentationToggle.checked\"\n                [disabled]=\"!loadedSegmentations\"\n                (change)=\"toggleSegmentation($event)\">\n                Segmentation\n            </mat-slide-toggle>\n        </div> \n        <ng-template #segmentationLoader>\n            <div class=\"grid__cell center-cell-content\">\n                <mat-progress-bar mode=\"indeterminate\">\n                    Segmentation\n                </mat-progress-bar>\n            </div>\n        </ng-template> -->\n        <div class=\"grid__cell center-cell-content\">\n            <div *ngFor=\"let image of imageData; let i = index;\" class=\"image-wrapper\">\n                <div class=\"images__meta-data\">\n                    <div class=\"images__meta-title\"> #{{ (pageSize === 1 ? cursor : i)+1 }} : Meta Data </div>\n                    <ul>\n                        <li><b>Date:</b> {{image.timestamp}}</li>\n                        <li><b>Camera:</b> {{image.meta.cameraName}}</li>\n                        <li><b>Vehicle:</b> {{image.vehicle}}</li>\n                        <li><b>Encoding:</b> {{image.encoding}}</li>\n                        <li><b>Height:</b> {{image.height}}</li>\n                        <li><b>Width:</b> {{image.width}}</li>\n                        <li><b>Left Exposure:</b> {{image.meta.leftExposure}}</li>\n                        <li><b>Right Exposure:</b> {{image.meta.rightExposure}}</li>\n                        <li><b>Left Gain:</b> {{image.meta.leftGain}}</li>\n                        <li><b>Right Gain:</b> {{image.meta.rightGain}}</li>\n                        <li><b>Left ROI:</b>( x: {{image.meta.leftRoi.xOffset}}, y: {{image.meta.leftRoi.xOffset}})</li>\n                        <li><b>Right ROI:</b>( x: {{image.meta.rightRoi.xOffset}}, y: {{image.meta.rightRoi.xOffset}})</li>\n                    </ul>\n                </div>\n                <div class=\"images__render\">\n                    <!-- <div class=\"segmentation\" [ngStyle]=\"{visibility: segmentationToggle.checked ? 'visible' : 'hidden'} \">\n                        <app-segmentation-image   (load)=\"onSegmentationLoad($event)\"  [imageHeaderId]=\"image.headerId\"></app-segmentation-image>\n                    </div>\n                    <app-rgb-image [data]=\"image\" [id]=\"image.imageId\" class=\"images\"></app-rgb-image> -->\n                    <app-image [data]=\"image\" [id]=\"image.imageId\" class=\"images\"></app-image>\n\n                </div>\n                \n            </div>\n                <!-- <app-rgb-image [data]=\"imageData\" [id]=\"imageId\" class=\"images\"></app-rgb-image>\n                <div class=\"segmentation\" [ngStyle]=\"{visibility: segmentationToggle.checked ? 'visible' : 'hidden'} \">\n                    <app-segmentation-image   (load)=\"onSegmentationLoad($event)\"  [imageHeaderId]=\"imageHeaderId\"></app-segmentation-image>\n                </div> -->\n        </div>\n    </div>\n</div>\n\n<ng-template #loading>\n    <span *ngIf=\"noImage; else loader\">\n        No image were found.\n    </span>\n    <ng-template #loader>\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </ng-template>\n</ng-template>\n<hr/>\n<mat-paginator [length]=\"pagesLength\"\n    [pageSize]=\"pageSize\"\n    [pageSizeOptions] = \"pageSizeOptions\"\n    (page)=\"getCurrentImage($event)\">\n</mat-paginator>","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service';\nimport { Subscription } from 'rxjs';\nimport { TableUtil } from 'src/app/components/table/table-utils';\nimport { subscribe } from 'graphql';\nimport {PageEvent} from '@angular/material/paginator';\n\n\n@Component({\n  selector: 'app-stop-images',\n  templateUrl: './stop-images.component.html',\n  styleUrls: ['./stop-images.component.scss']\n})\nexport class StopImagesComponent extends TableUtil implements OnInit, OnDestroy {\n  objectQuery: Subscription | null = null\n  stopImageQuery: Subscription[]  = []\n  objectSubscription: Subscription | null = null\n  pageSize: number = 1\n  page: number = 0\n  image: any = null\n  isImageLoaded = false\n  headerid: string  =\"\"\n  label: string = \"\"\n  pagesLength: number =0\n  objectDetection:any ={}\n  latitude = 0\n  longitude = 0\n  coordinates: number[][] = [[]]\n\n  @Input() vehicleId: number | string = \"\"\n  @Input() live: boolean = false\n  @Input() data: any = null\n\n\n  constructor(\n    private gqlSubscription: GqlSubscriptionService\n    , private gqlQuery: GqlQueryService\n  ) { \n    super()\n  }\n\n  private unsubscribeQueryies(){\n    this.objectQuery?.unsubscribe()\n    this.stopImageQuery\n      .forEach(\n        (subscription:any)=>subscription?.unsubscribe()\n      )\n  }\n\n  private imageHandler(stopInfo:any){\n    this.gqlQuery\n      .getPreviewImageByCameraMessageHeaderId({headerId:stopInfo.message.header.headerid})\n      .subscribe((response:any)=>{\n        if(!response){\n          setTimeout(()=>this.imageHandler(stopInfo), 2000);\n          return\n        }\n\n        this.isImageLoaded = true\n        this.image = response\n        this.label = `${stopInfo.topic.name} | ${new Date(stopInfo.readingat) }`\n        this.headerid = stopInfo.message.header.headerid\n      })\n  }\n\n  private updateObjectDetection(data:any){\n    if(!data)\n      return;\n      \n    this.coordinates= [[]]\n    this.objectDetection = data\n    const centroid_location = data.message.centroidLocation\n    this.latitude = parseFloat(centroid_location.fieldOrigin.latitudeDeg)\n    this.longitude = parseFloat(centroid_location.fieldOrigin.longitudeDeg)\n    this.coordinates = [[this.longitude, this.latitude]]\n  }\n\n  private getImage(){\n    this.isImageLoaded = false\n    this.coordinates= [[]]\n    this.unsubscribeQueryies()\n    this.objectQuery = this.gqlQuery.getObjectDetectionByVehicleId({\n      vehicleId: this.vehicleId\n      , cursor: this.page\n      , size: this.pageSize\n    })\n      .subscribe((response:any)=>{\n        if(!response.nodes.length)\n          this.isImageLoaded = true\n\n        this.updateObjectDetection(response.nodes[0])\n\n        this.pagesLength = response.totalCount\n        this.stopImageQuery = response.nodes.map((stopInfo:any)=>this.imageHandler(stopInfo))\n      })\n  }\n\n  private initiateLiveObjectDetection(){\n    if(this.live){\n      this.objectSubscription = this.gqlSubscription\n        .getObjectDetectionByVehicleId({vehicleId: this.vehicleId})\n        .subscribe((response:any)=>{\n          this.pagesLength++\n\n          if(this.page)\n            this.page++\n          else {\n            this.updateObjectDetection(response)\n          }\n\n          this.imageHandler(response)\n        })\n      }\n  }\n\n  ngOnInit(): void {\n    // @ts-ignore\n    if(isNaN(this.vehicleId) && !this.data)\n      return;\n    else if(this.data){\n      this.updateObjectDetection(this.data)\n      this.imageHandler(this.data)\n    }else if(this.vehicleId){\n      this.getImage()\n      this.initiateLiveObjectDetection()\n    }\n  }\n\n\n\n  getCurrentImage(event:PageEvent){\n    if( this.page !== event.pageIndex || event.pageSize !== this.pageSize ){\n      this.page = event.pageIndex\n      this.image=\"\"\n      this.pageSize = event.pageSize\n      this.getImage()\n      console.log(event)\n    }\n  }\n\n  ngOnDestroy(): void{\n    this.unsubscribeQueryies()\n    this.objectSubscription?.unsubscribe()\n  }\n\n}\n","<app-image \n    *ngIf=\"image; else loader\"\n    [data]=\"image\" \n    [label]=\"label\" \n    [headerId]=\"headerid\">\n</app-image>\n<hr/>\n<div class=\"map\" *ngIf=\"coordinates[0].length\">\n    <app-starfire \n    [showTractor]=true \n    [zoom]=20 \n    [coordinates]=\"coordinates\"\n    [vehicleId]=\"vehicleId\" ></app-starfire>\n</div>\n<div>\n</div>\n<mat-paginator [length]=\"pagesLength\"\n    [pageSize]=\"pageSize\"\n    [pageIndex]=\"page\"\n    (page)=\"getCurrentImage($event)\">\n</mat-paginator>\n<ng-template #loader>\n    <mat-icon *ngIf=\"isImageLoaded\" aria-hidden=\"false\" class=\"no-image\" aria-label=\"No Image\">image_not_supported</mat-icon>\n    <mat-progress-bar *ngIf=\"!isImageLoaded\" mode=\"indeterminate\"></mat-progress-bar>\n</ng-template>","<div class=\"mission-stats\" *ngIf=\"missionStats; else nostats\">\n    <app-medallion \n        *ngIf=\"missionStats.missionStartTime\"\n        class=\"stats large\"\n        title=\"Mission Start\"\n        [content]=\"getMissionStartTime()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats\"\n        title=\"Uptime\"\n        [content]=\"getUpTime()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats\"\n        title=\"Done\"\n        [content]=\"getAreaDone()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats\"\n        title=\"Moving\"\n        [content]=\"getMovingPercentage()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats\"\n        title=\"Auto Stop\"\n        [content]=\"getAutonomyStopped()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats\"\n        title=\"Auto Driving\"\n        [content]=\"getAutonomyDriving()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats\"\n        title=\"Stops\"\n        [content]=\"getStops()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats medium\"\n        title=\"Telesupport Duration\"\n        [content]=\"getTeleopDuration()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats medium\"\n        title=\"Telesupport\"\n        [content]=\"getTelesupport()\"\n        >\n        <!-- All 3 time plus & percent of durationTeleop-->\n    </app-medallion>\n    <app-medallion \n        class=\"stats\"\n        title=\"# False positive\"\n        [content]=\"getFalsePositives()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats\"\n        title=\"# True positive\"\n        [content]=\"getTruePositives()\"\n        >\n    </app-medallion>\n    <app-medallion \n        class=\"stats\"\n        title=\"Support\"\n        [content]=\"getSupport()\"\n        >\n        <!-- # teleop support per meter / Area travelled  -->\n    </app-medallion>\n</div>\n<ng-template #nostats>\n    <div class=\"mission-stats\" >\n        <app-medallion \n            class=\"stats large\"\n            title=\"No stats for vehicle.\"\n            content=\"\"\n            >\n        </app-medallion>\n    </div>\n</ng-template>","import { Component, Input, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service';\n\n@Component({\n  selector: 'app-vehicle-mission-stats',\n  templateUrl: './vehicle-mission-stats.component.html',\n  styleUrls: ['./vehicle-mission-stats.component.scss']\n})\nexport class VehicleMissionStatsComponent implements OnInit {\n  private gqlOnlineQuery:Subscription | null = null\n  private gqlOnlineSubscription:Subscription | null = null\n\n  @Input() vehicleId: number | string |undefined;\n  @Input() cursor: number = 0\n  missionStats: any;\n  isDataLoaded: boolean = false\n\n\n  constructor(\n    private graphQLSubscription: GqlSubscriptionService\n    , private graphQLQuery: GqlQueryService\n  ) { }\n\n  private convertToMilliSeconds(time:any): any{\n    return parseFloat(((time  * 1.0E-9)/1000 ).toFixed(2))\n  }\n\n  private convertToSeconds(time:any): any{\n    return +((this.convertToMilliSeconds(parseFloat(time))/1000).toFixed(2))\n  }\n\n  private convertToMinutes(time:any): any{\n    return +((this.convertToSeconds(parseFloat(time))/60).toFixed(2))\n  }\n\n  private convertToHours(time:any){\n    return +((this.convertToMinutes(parseFloat(time))/60).toFixed(2))\n  }\n  \n  private formatData(data:any={}){\n    const missionStats =  data.missionStats\n    return {\n      ...missionStats\n    }\n  }\n\n  private getStatus(){\n    if(this.gqlOnlineQuery)\n      this.gqlOnlineQuery.unsubscribe()\n\n    this.gqlOnlineQuery = this.graphQLQuery\n        .getVehicleStatus({vehicle_id:this.vehicleId, cursor:this.cursor, size:1 })\n        .subscribe((response:any)=>{\n  \n          this.missionStats = response.nodes\n            .map((result:any)=>{\n              return this.formatData(result)\n            })[0]\n\n          this.isDataLoaded = true\n      })\n    \n    this.gqlOnlineSubscription = this.graphQLSubscription\n        .getVehicleStatus({vehicleId:this.vehicleId})\n        .subscribe((response:any):void | null=>{\n          if(!response)\n            return\n\n          this.missionStats = this.formatData(response)\n        })\n    \n  }\n\n  getUpTime(){\n    const {durationAutonomyDriving,durationAutonomyStopped, durationNoAutonomy} = this.missionStats\n    const totalTimeSeconds =  +(durationAutonomyDriving) + +(durationAutonomyStopped)\n    return `${this.convertToSeconds(totalTimeSeconds)} sec`\n    // return !totalTime ? totalTime.toString() : `${(totalTime / +(durationNoAutonomy)).toFixed(2)} hrs`\n  }\n\n  getMissionStartTime(){\n    return new Date(this.missionStats.missionStartTime).toLocaleString()\n  }\n\n  getAcresDone(){\n    const metersPerAcre = 4047\n    const {numFalsePositives} = this.missionStats\n    if(numFalsePositives < metersPerAcre)\n      return \"0\"\n\n    return `${this.missionStats.numFalsePositives/metersPerAcre} ac`\n  }\n\n  getFalsePositives(){\n    return this.missionStats.numFalsePositives\n  }\n\n  getTruePositives(){\n    return this.missionStats.numTruePositives\n  }\n\n  getStops(){\n    return this.missionStats.numStops\n  }\n\n  getAreaDone(){\n    const metersPerAcre = 4047\n    const {autonomyAreaTravelledSqm} = this.missionStats\n\n    if(autonomyAreaTravelledSqm < metersPerAcre)\n      return \"0\"\n\n    return `${(autonomyAreaTravelledSqm / metersPerAcre).toFixed(2)} ac`  \n  }\n\n  getTeleopDuration(){\n    return  `${this.convertToSeconds(this.missionStats.durationTeleop)} sec`\n  }\n\n  getMovingPercentage(){\n    // Add All 3\n    const {durationAutonomyDriving, durationAutonomyStopped, durationNoAutonomy} = this.missionStats\n    const totalTime = +(durationAutonomyDriving) + +(durationAutonomyStopped) + +(durationNoAutonomy)\n    const driveTimePerc =  this.convertToSeconds((durationAutonomyDriving*100) / +(totalTime))\n    return `${driveTimePerc} % `\n  }\n\n  getAutonomyStopped(){\n    return `${this.convertToSeconds(this.missionStats.durationAutonomyStopped) } sec`\n  }\n\n  getAutonomyDriving(){\n    return `${this.convertToSeconds(this.missionStats.durationAutonomyDriving) } sec`\n  }\n\n  getTelesupport(){\n    const {durationAutonomyDriving, durationAutonomyStopped, durationNoAutonomy} = this.missionStats\n    const totalTime = +(durationAutonomyDriving) + +(durationAutonomyStopped) + +(durationNoAutonomy)\n    return `${ (+(this.missionStats.durationTeleop)*100 / +(totalTime) ).toFixed(2)} %`\n  }\n\n  getSupport(){\n    const support =  (parseFloat(this.getAreaDone()) /  +(this.missionStats.numTeleopQueries))\n    return support\n  }\n\n  ngOnInit(): void {\n    if(!isNaN((this.vehicleId as number))){\n      this.getStatus()\n    }\n  }\n\n  ngOnDestroy(): void{\n    this.gqlOnlineQuery?.unsubscribe()\n    this.gqlOnlineSubscription?.unsubscribe()\n  }\n\n}\n","import { Component, OnDestroy, OnInit, AfterViewInit, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service';\nimport {ActivatedRoute} from '@angular/router'\nimport { TableUtil } from 'src/app/components/table/table-utils';\nimport { PageEvent } from '@angular/material/paginator';\nimport { throwServerError } from '@apollo/client/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {VehicleStatusDetailComponent} from 'src/app/components/modals/vehicle-status-detail/vehicle-status-detail.component'\n\n@Component({\n  selector: 'app-vehicle-status',\n  templateUrl: './vehicle-status.component.html',\n  styleUrls: ['./vehicle-status.component.scss']\n})\nexport class VehicleStatusComponent extends TableUtil implements OnInit, OnDestroy, AfterViewInit  {\n  private gqlOnlineQuery:Subscription | null = null\n  private gqlOnlineSubscription:Subscription | null = null\n\n  statusList:any[] = []\n  columns: string[] = ['alerts','status','timestamp'];\n  pageSize:number = 5\n  pageSizeOptions: number[] = [5]\n  pagesLength: number = 0\n  isDataLoaded: boolean = false\n\n\n  @Input() vehicleId: number | string |undefined;\n  @Input() cursor: number = 0\n  \n  constructor(   \n    private graphQLSubscription: GqlSubscriptionService\n    , private graphQLQuery: GqlQueryService\n    , private route: ActivatedRoute\n    , public dialog: MatDialog) { \n      super()\n    }\n\n  private getStatus(){\n    if(this.gqlOnlineQuery)\n      this.gqlOnlineQuery.unsubscribe()\n\n    this.gqlOnlineQuery = this.graphQLQuery\n        .getVehicleStatus({vehicle_id:this.vehicleId, cursor:this.cursor, size:this.pageSize })\n        .subscribe((response:any)=>{\n          this.pagesLength = response.totalCount\n          this.statusList =response.nodes.map((result:any)=>{\n            return {\n              ...result\n              , status: result.state.name\n              , alerts: result.alerts.length ? result.alerts[0] : null\n            }\n          })\n          this.isDataLoaded = true\n          this.updateList(this.statusList)\n      })\n    \n    this.gqlOnlineSubscription = this.graphQLSubscription\n        .getVehicleStatus({vehicleId:this.vehicleId})\n        .subscribe((response:any):void | null=>{\n          if(!response)\n            return;\n\n          this.statusList.unshift(response)\n          this.statusList.pop()\n          this.updateList(this.statusList)\n        })\n    \n  }\n\n  ngOnInit(): void {\n    if(!isNaN((this.vehicleId as number))){\n      this.getStatus()\n    }\n  }\n\n  ngOnDestroy() :void{\n    this.gqlOnlineQuery?.unsubscribe()\n    this.gqlOnlineSubscription?.unsubscribe()\n  }\n\n  ngAfterViewInit(): void{}\n\n\n  onPagination(event:PageEvent){\n    if( this.cursor !== event.pageIndex || event.pageSize !== this.pageSize ){\n      this.isDataLoaded = false\n      this.cursor = event.pageIndex\n      this.statusList =[];\n      this.pageSize = event.pageSize;\n      this.updateList(this.statusList)\n      this.getStatus()\n    }\n  }\n\n  openDialog(row:any): void{\n    console.log(row)\n    const dialogRef = this.dialog.open(VehicleStatusDetailComponent, {data:row});\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog closed: ${result}`);\n    });\n  }\n\n  renderAlertsColumn(row:any){\n    return row.alerts ? row.alerts.alertType.name : 'information'\n  }\n\n}\n","<div *ngIf=\"isDataLoaded; else loader;\">\n    <!-- <mat-form-field appearance=\"standard\">\n        <mat-label>Search</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Tractor\" #input>\n    </mat-form-field> -->\n    <table  mat-table  class=\"vehicles__status\"  [dataSource]=\"tableList\" >\n        <!-- Position Column -->\n\n        <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status </th>\n            <td mat-cell *matCellDef=\"let col\"> {{col.status}} </td>\n        </ng-container>        \n        <ng-container matColumnDef=\"alerts\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Alert </th>\n          <td mat-cell *matCellDef=\"let col\"> \n            <mat-icon class=\"icon\" inline>\n              {{renderAlertsColumn(col)}} \n            </mat-icon>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"timestamp\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Timestamp </th>\n            <td mat-cell *matCellDef=\"let col\"> {{col.timestamp | date:'medium' }} </td>\n          </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n        <tr mat-row \n          [class]= \"renderAlertsColumn(row)\" \n          *matRowDef=\"let row; columns: columns;\"\n          (click)=\"openDialog(row)\"\n        ></tr>\n    </table>\n\n</div>\n<ng-template #loader>\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</ng-template>\n<mat-paginator \n[length]=\"pagesLength\"\n[pageSize]=\"pageSize\"\n[hidePageSize]=\"true\"\n[pageSizeOptions]=\"pageSizeOptions\"\n(page)=\"onPagination($event)\">\n</mat-paginator>","import { Component, OnInit,ViewChild, AfterViewInit, OnDestroy, EventEmitter, Output, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport {Subscription} from 'rxjs'\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\nimport {TableUtil} from 'src/app/components/table/table-utils'\n\n\n@Component({\n  selector: 'app-vehicles-offline',\n  templateUrl: './vehicles-offline.component.html',\n  styleUrls: ['./vehicles-offline.component.scss']\n})\nexport class VehiclesOfflineComponent extends TableUtil implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\n  // Private\n  private trackedVehicles: any = []\n\n  // Public\n  offlineVehiclesQuery: Subscription | undefined\n  offlineVehicleSubscription: Subscription | undefined\n  columns: string[] = ['id', 'name', 'ip'];\n\n  @Output() onClick:  EventEmitter<any> = new EventEmitter<any>()\n  @Input() update: any = \"\"\n\n  constructor(\n    private gqlQuery: GqlQueryService\n  ) {\n    super()\n   }\n\n  ngOnInit(): void {\n    this.offlineVehiclesQuery = this.gqlQuery\n    .getOfflineVehicles()\n    .subscribe((response:any)=>{\n      this.trackedVehicles = response\n      this.updateList(this.trackedVehicles)\n    })\n  }\n\n  ngOnChanges(changes: SimpleChanges): void{\n    console.log(changes.update.currentValue)\n    if(changes.update.currentValue.event)\n      switch(changes.update.currentValue.event){\n        case \"INSERT\":\n          const offlineIndex = this.trackedVehicles.findIndex((vehicle:any)=>{\n            return vehicle.vehicle_id === changes.update.currentValue.vehicle_id\n          })\n          \n          if(offlineIndex !== -1)\n            this.trackedVehicles.splice(offlineIndex,1)\n          \n            this.updateList(this.trackedVehicles)\n          break;\n\n        case \"DELETE\":\n          this.trackedVehicles.push(changes.update.currentValue)\n          this.updateList(this.trackedVehicles)\n          break;\n      }\n  }\n\n  ngAfterViewInit() {}\n\n  ngOnDestroy(){\n    this.offlineVehiclesQuery?.unsubscribe()\n  }\n\n}\n","<mat-form-field appearance=\"standard\">\n    <mat-label>Search</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Tractor\" #input>\n</mat-form-field>\n\n<table mat-table  class=\"vehicles__offline\"  [dataSource]=\"tableList\" >\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>ID </th>\n      <td mat-cell *matCellDef=\"let col\"> {{col.vehicle_id}} </td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name </th>\n      <td mat-cell *matCellDef=\"let col\"> {{col.name | titlecase }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"ip\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>IP </th>\n      <td mat-cell *matCellDef=\"let col\"> {{col.ip | titlecase }} </td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n    <tr mat-row \n      *matRowDef=\"let row; columns: columns;\"\n      (click)=\"rowClick(row)\"\n    ></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No data found; {{input.value}}</td>\n    </tr>\n</table>","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy, EventEmitter, Output, Input } from '@angular/core';\nimport { Subscription } from 'rxjs'\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GqlSubscriptionService } from 'src/app/services/graphql/gql-subscription.service'\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service'\nimport {TableUtil} from 'src/app/components/table/table-utils'\n\n\n@Component({\n  selector: 'app-vehicles-online',\n  templateUrl: './vehicles-online.component.html',\n  styleUrls: ['./vehicles-online.component.scss']\n})\nexport class VehiclesOnlineComponent extends TableUtil implements OnInit, AfterViewInit, OnDestroy {\n\n  // Private\n  private trackedVehicles: any = []\n\n  // Public\n  onlineVehiclesQuery: Subscription | undefined\n  onlineVehicleSubscription: Subscription | undefined\n  columns: string[] = ['alert', 'id', 'name', 'ip'];\n\n  // Events\n  @Output() onUpdate: EventEmitter<any> = new EventEmitter<any>()\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>()\n\n  constructor(\n    private gqlSubscription: GqlSubscriptionService,\n    private gqlQuery: GqlQueryService,\n  ) { \n    super()\n  }\n\n  ngOnInit(): void {\n    // Query Vehicles Currently Online\n    this.onlineVehiclesQuery = this.gqlQuery\n      .getOnlineVehicles()\n      .subscribe((response: any) => {\n        this.trackedVehicles = response\n        this.updateList(this.trackedVehicles)\n      })\n    // Subscribe to Live onUpdates to Online Vehicles\n    this.onlineVehicleSubscription = this.gqlSubscription\n      .getOnlineVehicles()\n      .subscribe(this.onlineVehicleSubscriptionHandler.bind(this))\n  }\n\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnDestroy() {\n    this.onlineVehiclesQuery?.unsubscribe()\n    this.onlineVehicleSubscription?.unsubscribe()\n  }\n\n  onlineVehicleSubscriptionHandler(response: any) {\n    switch (response.event) {\n      case \"INSERT\":\n        this.trackedVehicles.push(response)\n        this.trackedVehicles.sort((a:any, b:any)=>\n          a.alerts.alertType.severity - b.alerts.alertType.severity\n        )\n        this.updateList(this.trackedVehicles)\n        this.onUpdate.emit(response)\n        break;\n      \n      case \"UPDATE\":\n        const foundIndex = this.trackedVehicles.findIndex((vehicle:any)=>vehicle.vehicle_id === response.vehicle_id)\n        if(foundIndex !== -1 \n          && JSON.stringify(this.trackedVehicles[foundIndex]) !== JSON.stringify(response)){\n          this.trackedVehicles[foundIndex] = response\n          this.updateList(this.trackedVehicles)\n        }\n\n        break;\n\n      case \"DELETE\":\n        const onlineIndex = this.trackedVehicles.findIndex((vehicle: any) => {\n          return vehicle.id === response.id\n        })\n\n        if (onlineIndex !== -1) {\n          const deletedVehicle = this.trackedVehicles.splice(onlineIndex, 1)\n          deletedVehicle[0].event = response.event\n          this.onUpdate.emit({ ...deletedVehicle[0] })\n        }\n\n        this.updateList(this.trackedVehicles)\n        break;\n    }\n  }\n\n  renderAlertsColumn(row:any){\n    return row.alerts ? row.alerts.alertType.name : 'information'\n  }\n\n}\n","<mat-form-field appearance=\"standard\">\n    <mat-label>Search</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Tractor\" #input>\n</mat-form-field>\n\n<table class=\"vehicles__online\" mat-table [dataSource]=\"tableList\">\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"alert\">\n    <th mat-header-cell *matHeaderCellDef>Alert </th>\n    <td mat-cell *matCellDef=\"let col\"> \n        <mat-icon class=\"icon\" inline>\n            {{renderAlertsColumn(col)}} \n        </mat-icon>\n    </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef>ID </th>\n    <td mat-cell *matCellDef=\"let col\"> {{col.vehicle_id}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Name </th>\n    <td mat-cell *matCellDef=\"let col\"> {{col.name | titlecase }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"ip\">\n    <th mat-header-cell *matHeaderCellDef>IP </th>\n    <td mat-cell *matCellDef=\"let col\"> {{col.ip | titlecase }} </td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n    <tr mat-row \n    [class]= \"renderAlertsColumn(row)\" \n    *matRowDef=\"let row; columns: columns;\"\n    (click)=\"rowClick(row)\"\n    ></tr>\n    \n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data found; {{input.value}}</td>\n    </tr>\n</table>","import {NgModule} from '@angular/core';\nimport {APOLLO_OPTIONS} from 'apollo-angular';\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\n\nconst uri = 'http://localhost:4000/graphql'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  constructor( private gqlSubsctiption: GqlSubscriptionService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(){}\n\n}\n","<p>dashboard works!</p>\n<div id=\"map\"></div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SocialAuthService, GoogleLoginProvider, SocialUser } from 'angularx-social-login';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  googleUser: SocialUser | undefined;\n  isLoggedin: boolean = false;\n\n  constructor(\n    private socialAuthService: SocialAuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.socialAuthService.authState.subscribe((user) => {\n      this.googleUser = user;\n      this.isLoggedin = (user != null);\n      if (this.isLoggedin){\n        this.router.navigate([\"/\"])\n      }\n      // else\n      //   this.snackBar.open(\"LogIn Failed\");\n\n    });\n  }\n\n  loginWithGoogle(): void {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  logOut(): void {\n    this.socialAuthService.signOut();\n  }\n\n}\n","<div class=\"login\">\n    <mat-card class=\"login__card\">\n                <div class=\"login__card--logo\">\n                    <img src=\"/assets/brt-icon-sm.png\"/>\n                </div>\n                <div>\n                    <mat-divider></mat-divider>\n\n                </div>\n                <mat-card-actions>\n                    <button mat-flat-button color=\"primary\" *ngIf=\"isLoggedin === false\" type=\"button\" (click)=\"loginWithGoogle()\">\n                        Login with Google\n                        <mat-icon matSuffix aria-label=\"Log into Google\" >login</mat-icon>\n                    </button>                    \n                </mat-card-actions>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms'\nimport {ActivatedRoute, Event} from '@angular/router'\nimport moment from 'moment';\n\n@Component({\n  selector: 'app-vehicle-geolocation',\n  templateUrl: './vehicle-geolocation.component.html',\n  styleUrls: ['./vehicle-geolocation.component.scss']\n})\nexport class VehicleGeolocationComponent implements OnInit {\n  vehicleId: string=\"\"\n  startDateTime:string = \"\" \n  endDateTime:string  = \"\" \n  refresh: boolean = false\n  public fgGeolocationFilter: any \n\n  constructor(\n    private route: ActivatedRoute\n  ) { \n      this.formatTimestampForInputs()\n    }\n\n  private formatTimestampForInputs(){\n    const format = 'YYYY-MM-DDTHH:mm:ss'\n    this.startDateTime = moment().subtract(1,'hours').format(format)\n    this.endDateTime = moment().format(format)\n  }\n\n  ngOnInit(): void {\n    this.vehicleId = (this.route.parent as any).snapshot.params.id\n    this.fgGeolocationFilter = new FormGroup({\n      startDateTime: new FormControl(this.startDateTime,[Validators.required])\n      , endDateTime: new FormControl(this.endDateTime,[Validators.required])\n      , map: new FormControl(\"static\",[Validators.required])\n      , isLive: new FormControl(false,[Validators.required])\n    })\n    console.log(this.fgGeolocationFilter.get('map'))\n  }\n\n  refreshMap(){\n    this.refresh = !this.refresh\n    setTimeout(()=>this.refresh = !this.refresh, 0)\n    \n  }\n\n  onLiveToggle(event:any){\n    const isLive = !event.currentTarget.querySelector(\"input\").checked\n    if(isLive){\n      this.fgGeolocationFilter.controls.startDateTime.disable()\n      this.fgGeolocationFilter.controls.endDateTime.disable()\n      this.fgGeolocationFilter.controls.map.disable()\n    }\n    else {\n      this.fgGeolocationFilter.controls.startDateTime.enable()\n      this.fgGeolocationFilter.controls.endDateTime.enable()\n      this.fgGeolocationFilter.controls.map.enable()\n    }\n  }\n\n  onSubmit(): void{\n   this.startDateTime = this.fgGeolocationFilter.value.startDateTime\n   this.endDateTime = this.fgGeolocationFilter.value.endDateTime\n   this.refreshMap()\n  }\n}\n","<form class=\"geolocation__form\" \n    *ngIf=\"fgGeolocationFilter\" \n    [formGroup]=\"fgGeolocationFilter\"\n    (submit)=\"onSubmit()\"\n    >\n    <div class=\"geolocation__form--field\">\n        <mat-form-field class=\"example-form-field datetime\" appearance=\"fill\">\n            <mat-label>Start</mat-label>\n            <input matInput type=\"datetime-local\" \n                formControlName=\"startDateTime\">\n            <button matSuffix mat-icon-button aria-label=\"Clear\" >\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n    </div>\n    <div class=\"geolocation__form--field\">\n        <mat-form-field class=\"example-form-field datetime\" appearance=\"fill\">\n            <mat-label>End</mat-label>\n            <input matInput type=\"datetime-local\" \n                formControlName=\"endDateTime\">\n            <button matSuffix mat-icon-button aria-label=\"Clear\" >\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n    </div>\n    <div class=\"geolocation__form--field\">\n        <mat-radio-group aria-label=\"Change Map View\" \n            formControlName=\"map\">\n            <mat-radio-button value=\"static\" \n                class=\"geolocation__form--radio\" >\n                    Static\n            </mat-radio-button>\n            <mat-radio-button value=\"replay\" \n                class=\"geolocation__form--radio\">\n                Replay\n            </mat-radio-button>\n        </mat-radio-group>\n    </div>\n    <div class=\"geolocation__form--field\">\n        <mat-slide-toggle \n        formControlName=\"isLive\"\n        (click)=\"onLiveToggle($event)\"\n        >Live</mat-slide-toggle>\n    </div>\n    <div class=\"geolocation__form--field\">\n        <button \n            [disabled]=\"fgGeolocationFilter.get('isLive').value\"\n            mat-mini-fab color=\"primary\" aria-label=\"Submit geolocation query\">\n            <mat-icon>search</mat-icon>\n        </button>\n    </div>\n</form>\n\n\n<div class=\"grid gap\" *ngIf=\"!refresh; else loader\" >\n\n    <div class=\"grid__cell map\" *ngIf=\"fgGeolocationFilter.get('isLive').value; else history\">\n        <div class=\"grid__cell--label\">Live</div>\n        <div class=\"grid__cell--content\">\n            <app-starfire\n            playback=\"live\" \n            [showTractor]=true \n            [zoom]=20\n            [vehicleId]=\"vehicleId\"\n            ></app-starfire>\n        </div>\n    </div>\n    <ng-template #history>\n        <div class=\"grid__cell map\" *ngIf=\"fgGeolocationFilter.get('map').value==='static'\">\n            <div class=\"grid__cell--label\">Static</div>\n            <div class=\"grid__cell--content\">\n                <app-starfire \n                [startDateTime]=\"startDateTime\"\n                [endDateTime]=\"endDateTime\"\n                [showTractor]=true \n                [zoom]=20 \n                [vehicleId]=\"vehicleId\" ></app-starfire>\n            </div>\n        </div>\n        <div class=\"grid__cell map\"  *ngIf=\"fgGeolocationFilter.get('map').value==='replay'\">\n            <div class=\"grid__cell--label\">Replay</div>\n            <div class=\"grid__cell--content\">\n                <app-starfire \n                [startDateTime]=\"startDateTime\"\n                [endDateTime]=\"endDateTime\"\n                playback=\"replay\" \n                [showTractor]=true \n                [zoom]=20 \n                [vehicleId]=\"vehicleId\"></app-starfire>\n            </div>\n        </div>\n    </ng-template>\n</div>\n\n<ng-template #loader>\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms'\nimport {ActivatedRoute, Event} from '@angular/router'\nimport { Subscription } from 'rxjs';\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\nimport moment from 'moment';\n\n@Component({\n  selector: 'app-vehicle-images',\n  templateUrl: './vehicle-images.component.html',\n  styleUrls: ['./vehicle-images.component.scss']\n})\nexport class VehicleImagesComponent implements OnInit {\n  private topicsSubscription : Subscription | null = null;\n  vehicleId: string=\"\"\n  startDateTime:string = \"\" \n  endDateTime:string  = \"\" \n  fgImageFilter: FormGroup = new FormGroup({})\n  topics: {name:any, id:any}[] =  []\n  selectedTopic :string = \"\"\n\n  constructor(\n    private route: ActivatedRoute\n    , private gqlQuery: GqlQueryService\n  ) { \n      this.formatTimestampForInputs()\n    }\n\n  private formatTimestampForInputs(){\n    const format = 'YYYY-MM-DDTHH:mm:ss'\n    this.startDateTime = moment().subtract(1,'hours').format(format)\n    this.endDateTime = moment().format(format)\n  }\n\n  ngOnInit(): void {\n    this.vehicleId = (this.route.parent as any).snapshot.params.id\n\n    this.topicsSubscription = this.gqlQuery\n      .getTopicsByCategoryVehicleId({\n        vehicleId:this.vehicleId\n        , topicName:\"%/left/preview\"\n        , category:\"images\"\n      })\n      .subscribe((response:any)=>{\n        this.topics = response\n        this.fgImageFilter = new FormGroup({\n          // startDateTime: new FormControl(this.startDateTime,[Validators.required]),\n          // endDateTime: new FormControl(this.endDateTime,[Validators.required]),\n          topics: new FormControl(this.topics[0],[Validators.required]),\n          isLive: new FormControl(false,[Validators.required])\n        })\n        debugger;\n      })\n  }\n\n  onTopicChange(){\n    this.selectedTopic = \"\" \n    setTimeout(()=>this.selectedTopic = this.fgImageFilter.controls.topics.value,0)\n  }\n  onLiveToggle(event:any){\n\n  }\n  onSubmit(){\n\n  }\n\n}\n","<div  *ngIf=\"fgImageFilter && topics.length; else loader\" >\n    <form class=\"image__form\" \n        *ngIf=\"fgImageFilter\" \n        [formGroup]=\"fgImageFilter\"\n        (submit)=\"onSubmit()\"\n        >\n        <!-- <div class=\"image__form--field\">\n            <mat-form-field class=\"example-form-field datetime\" appearance=\"fill\">\n                <mat-label>Start</mat-label>\n                <input matInput type=\"datetime-local\" \n                    formControlName=\"startDateTime\">\n                <button matSuffix mat-icon-button aria-label=\"Clear\" >\n                <mat-icon>close</mat-icon>\n                </button>\n            </mat-form-field>\n        </div>\n        <div class=\"image__form--field\">\n            <mat-form-field class=\"example-form-field datetime\" appearance=\"fill\">\n                <mat-label>End</mat-label>\n                <input matInput type=\"datetime-local\" \n                    formControlName=\"endDateTime\">\n                <button matSuffix mat-icon-button aria-label=\"Clear\" >\n                <mat-icon>close</mat-icon>\n                </button>\n            </mat-form-field>\n        </div> -->\n        <div class=\"image__form--field\" >\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Image Topics</mat-label>\n                <mat-select formControlName=\"topics\"\n                    (selectionChange)=\"onTopicChange()\"\n                >\n                    <mat-option *ngFor=\"let topic of topics\"\n                        [value]=\"topic.name\">\n                        {{topic.name}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <!-- <div class=\"image__form--field\">\n            <mat-slide-toggle \n            formControlName=\"isLive\"\n            (click)=\"onLiveToggle($event)\"\n            >Live</mat-slide-toggle>\n        </div> -->\n        <!-- <div class=\"image__form--field\">\n            <button \n                mat-mini-fab color=\"primary\" aria-label=\"Submit geolocation query\">\n                <mat-icon>search</mat-icon>\n            </button>\n        </div> -->\n    </form>\n\n    <div class=\"grid gap\">\n        <div class=\"grid__cell map\">\n            <div class=\"grid__cell--label\">Images {{selectedTopic | json}}</div>\n            <div class=\"grid__cell--content\">\n                <app-preview \n                    *ngIf=\"selectedTopic\"\n                    [topic]=\"selectedTopic\"\n                    [vehicleId]=\"vehicleId\"\n                ></app-preview>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #loader>\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</ng-template>\n \n","import { Injectable } from '@angular/core';\nimport {FormGroup} from '@angular/forms'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleLoggingFilterService {\n\n  private fgLoggingFilter: FormGroup | null = null \n\n  constructor() {\n   }\n\n   saveFilterState(filterGroup:FormGroup){\n    this.fgLoggingFilter = filterGroup\n   }\n\n   getFilterState(){\n     return this.fgLoggingFilter \n   }\n}\n","import { Component, OnDestroy, OnInit, AfterViewInit} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {FormGroup, FormControl, Validators} from '@angular/forms'\nimport {ActivatedRoute, Event} from '@angular/router'\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service';\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport { TableUtil } from 'src/app/components/table/table-utils';\nimport {MatDialog} from '@angular/material/dialog';\nimport {VehicleStatusDetailComponent} from 'src/app/components/modals/vehicle-status-detail/vehicle-status-detail.component'\nimport {ObjectDetectionDetailComponent} from 'src/app/components/modals/object-detection-detail/object-detection-detail.component'\nimport {ScrollService} from 'src/app/services/layout/scroll.service'\nimport {VehicleLoggingFilterService} from './filter.service'\nimport moment from \"moment\"\n\n@Component({\n  selector: 'app-vehicle-logging',\n  templateUrl: './vehicle-logging.component.html',\n  styleUrls: ['./vehicle-logging.component.scss']\n})\nexport class VehicleLoggingComponent extends TableUtil implements OnInit, OnDestroy, AfterViewInit {\n  private logQuery:Subscription | null = null\n  private loggingSubscription: Subscription | null = null\n  private objectSubscription: Subscription | null = null\n  private statusSubscription: Subscription | null = null\n  private infiniteScrollSubscription: Subscription | null = null\n  private nodesSubscription: Subscription | null = null\n  private timeFormat = 'YYYY-MM-DDTHH:mm:ss'\n\n  fgLoggingFilter: any \n  vehicleId: string=\"\"\n  startDateTime:string = \"\" \n  endDateTime:string  = \"\" \n  logType:string[]=[\n    \"logging\"\n  ]\n  refresh: boolean = false\n  description: string =\"\"\n  logTypeOptions: any= [\n    {value: \"logging\", label: \"Logs\"},\n    {value: \"status\", label: \"Autonomy State\"},\n    {value: \"object\", label: \"Object Detection\"}\n  ]\n  nodes: string[] = []\n  isLive:boolean= false;\n  columns: string[] = [\n    'status'\n    , 'timestamp'\n    , 'type'\n    , 'node'\n    , 'description'];\n  cursor:number = 0\n  isScrollDataLoading:boolean = false\n  savedResults: any[] =[]\n  pagination: number = 20\n  paginationRange: number[] = [ 25, 50, 100]\n\n  \n  constructor(\n    private graphQLSubscription: GqlSubscriptionService\n    , private graphQLQuery: GqlQueryService\n    , private route: ActivatedRoute \n    , public dialog: MatDialog\n    , private scrollService: ScrollService\n    , private filterService: VehicleLoggingFilterService\n  ) { \n    super()\n    this.formatTimestampForInputs()\n    this.nodesSubscription = this.graphQLQuery.getLoggingNodes().subscribe((response:any)=>{\n      this.nodes = response\n    })\n  }\n\n  private updateTable({data, action} = {data:[], action:\"replace\"}){\n    switch(action){\n      case \"concat\":\n        this.savedResults = this.savedResults.concat(data)\n        break;\n      case \"prepend\":\n        this.savedResults.unshift(data)\n        break;\n      case \"append\":\n        this.savedResults.push(data)\n        break;\n      case \"replace\":\n      default:\n          this.savedResults = data\n          break;\n    }\n\n    this.updateList(this.savedResults)    \n  }\n\n  private formatTimestampForInputs(){\n    \n    this.startDateTime = moment().subtract(1,'hours').format(this.timeFormat)\n    this.endDateTime = moment().format(this.timeFormat)\n  }\n\n  private loadData(scroll?:boolean){\n    if(this.logQuery)\n      this.logQuery.unsubscribe()\n    \n    this.isScrollDataLoading = true\n\n    this.logQuery = this.graphQLQuery\n    .getAllVehicleLogsStatusDetection({\n      vehicleId: this.vehicleId\n      , cursor: this.cursor\n      , startDateTime: moment(this.fgLoggingFilter.value.startDateTime).utc().format(this.timeFormat)\n      , endDateTime: moment(this.fgLoggingFilter.value.endDateTime).utc().format(this.timeFormat)\n      , logType: this.fgLoggingFilter.value.logType\n      , paginationRange: this.fgLoggingFilter.value.paginationRange\n      , nodes: this.fgLoggingFilter.value.nodes\n\n    })\n    .subscribe((response:any)=>{\n      this.isScrollDataLoading = false\n\n        if(scroll)\n          this.updateTable({data:response, action:\"concat\"})\n        else\n          this.updateTable({data:response, action:\"replace\"})      \n    })\n  }\n\n\n  private initiateLiveSubscriptions(){\n    this.fgLoggingFilter.value.logType.forEach((type:any)=>{\n      switch(type){\n        case \"logging\":\n          if(this.loggingSubscription && !this.loggingSubscription.closed)\n            this.loggingSubscription?.unsubscribe()\n\n          this.loggingSubscription = this.graphQLSubscription\n            .getLoggingByVehicleId({vehicleId:this.vehicleId})\n            .subscribe((response:any)=>{\n              if(!response)\n                return\n                \n              if(this.fgLoggingFilter.value.nodes.indexOf(response.message.name) > -1)\n                this.updateTable({data:response, action:\"prepend\"})   \n            })\n            break;\n        case \"status\":\n          if(this.statusSubscription && !this.statusSubscription.closed)\n            this.statusSubscription?.unsubscribe()\n\n          this.statusSubscription = this.graphQLSubscription\n            .getVehicleStatus({vehicleId:this.vehicleId})\n            .subscribe((response:any):void | null=> {\n              if(!response)\n                return null\n\n              this.updateTable({data:response, action:\"prepend\"})  \n            })\n            break;\n        case \"object\":\n            if(this.objectSubscription && !this.objectSubscription.closed)\n              this.objectSubscription?.unsubscribe()\n\n            this.objectSubscription = this.graphQLSubscription\n              .getObjectDetectionByVehicleId({vehicleId:this.vehicleId})\n              .subscribe((response:any)=>{\n                this.updateTable({data:response, action:\"prepend\"})  \n              })\n          break;\n      }\n    })\n  }\n\n  private unsubscribeLiveSubscriptions(){\n    this.loggingSubscription?.unsubscribe()\n    this.objectSubscription?.unsubscribe()\n    this.statusSubscription?.unsubscribe()\n  }\n\n\n  onTypeChange(){\n    if(this.fgLoggingFilter.value.isLive)\n      this.initiateLiveSubscriptions()\n  }\n  \n  ngOnInit(): void {\n    this.vehicleId = (this.route.parent as any).snapshot.params.id\n    this.fgLoggingFilter = this.filterService.getFilterState() || new FormGroup({\n      startDateTime: new FormControl(this.startDateTime,[Validators.required])\n      , endDateTime: new FormControl(this.endDateTime,[Validators.required])\n      , logType: new FormControl(this.logType, [Validators.required])\n      , paginationRange: new FormControl(this.paginationRange[0], [Validators.required])\n      , nodes: new FormControl([], [Validators.required])\n      , isLive: new FormControl(this.isLive, [Validators.required])\n    })\n  \n    this.loadData()\n    this.infiniteScrollSubscription = this.scrollService.contentScroll.subscribe((scrolled:any)=>{\n      if(scrolled){\n        this.cursor  = this.pagination * ++this.cursor\n        this.loadData(scrolled)\n      }\n    })\n    if(this.fgLoggingFilter.value.isLive)\n      this.initiateLiveSubscriptions()\n  }\n\n  ngOnDestroy():void {\n    this.logQuery?.unsubscribe()\n    this.unsubscribeLiveSubscriptions()\n    this.infiniteScrollSubscription?.unsubscribe()\n    this.filterService.saveFilterState(this.fgLoggingFilter)\n    this.nodesSubscription?.unsubscribe()\n  }\n\n  ngAfterViewInit(): void{}\n\n  refreshMap(){\n    this.refresh = !this.refresh\n    setTimeout(()=>this.refresh = !this.refresh, 0)\n  }\n\n  onLiveToggle(event:any){\n    const isLive = !event.currentTarget.querySelector(\"input\").checked\n    if(isLive){\n      this.initiateLiveSubscriptions()\n    }\n    else {\n      this.unsubscribeLiveSubscriptions()\n    }\n  }\n\n  onSubmit(): void{\n    this.cursor = 0\n    this.startDateTime = this.fgLoggingFilter.value.startDateTime\n    this.endDateTime = this.fgLoggingFilter.value.endDateTime\n    this.loadData()\n    this.refreshMap()\n   }\n\n   openDialog(row:any): void{\n    let dialogRef;\n    switch(row.__typename){\n      case \"VehicleStatus\":\n          dialogRef = this.dialog.open(VehicleStatusDetailComponent, {\n            data:{\n                 node: row.message.header.node\n                , topic: row.topic.name\n                , alerts: row.alerts.nodes[0]\n                , vehicleStatusDetails: row.vehicleStatusDetails.nodes\n            }\n          });\n          dialogRef.afterClosed().subscribe(result => {\n            console.log(`Dialog closed: ${result}`);\n          });\n          break;\n      case \"Object\":\n          dialogRef = this.dialog.open(ObjectDetectionDetailComponent, {\n            data:row\n          });\n          dialogRef.afterClosed().subscribe(result => {\n            console.log(`Dialog closed: ${result}`);\n          });\n          break;\n      case \"VehicleLog\":\n          break;\n    }\n\n  }\n\n\n  renderNodeColumn(col:any){\n      switch(col.__typename){\n        case \"VehicleStatus\":\n            return (col.message || col.statusMessage).header.node\n              break;\n          case \"Object\":\n              return col.message.header.node\n              break;\n          case \"VehicleLog\":\n              return col.message.name\n              break;\n      }\n  }\n\n  renderDescriptionColumn(col:any){\n    switch(col.__typename){\n      case \"VehicleStatus\":\n          const reason = (col.vehicleStatusDetails.nodes || col.vehicleStatusDetails).filter((item:any)=>{\n            return item.isActive\n          })\n          return `${col.state.name}  ${reason.length ? \"(\" + reason[0].reason.name + \")\" : \"\"}`\n            break;\n        case \"Object\":\n            return col.message.header.node\n            break;\n        case \"VehicleLog\":\n            return col.message.msg\n            break;\n    }\n  }\n\n  renderTypeColumn(col:any){\n    let type = \"\"\n    switch(col.__typename){\n      case \"VehicleStatus\":\n            type = \"Autonomy\"\n            break;\n        case \"Object\":\n            type =  \"Object\"\n            break;\n        case \"VehicleLog\":\n            type = \"Log\"\n            break;\n    }\n\n    return type\n  }\n\n  renderAlertsColumn(col:any){\n    switch(col.__typename){\n      case \"VehicleStatus\":\n          return (col.alerts.alertType || col.alerts.nodes[0].alertType).name\n            break;\n        case \"Object\":\n        case \"VehicleLog\":\n            return \"info\"\n            break;\n    }\n  }\n}\n","<form class=\"logging__form\" \n    *ngIf=\"fgLoggingFilter\" \n    [formGroup]=\"fgLoggingFilter\"\n    (submit)=\"onSubmit()\"\n    >\n    <div class=\"logging__form--field\">\n        <mat-form-field class=\"example-form-field datetime\" appearance=\"fill\">\n            <mat-label>Start</mat-label>\n            <input matInput type=\"datetime-local\" \n                formControlName=\"startDateTime\">\n            <button matSuffix mat-icon-button aria-label=\"Clear\" >\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n    </div>\n    <div class=\"logging__form--field\">\n        <mat-form-field class=\"example-form-field datetime\" appearance=\"fill\">\n            <mat-label>End</mat-label>\n            <input matInput type=\"datetime-local\" \n                formControlName=\"endDateTime\">\n            <button matSuffix mat-icon-button aria-label=\"Clear\" >\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n    </div>\n    <div class=\"logging__form--field\" >\n        <mat-form-field appearance=\"fill\"  style=\"width:120px;\">\n            <mat-label>Results / type</mat-label>\n            <mat-select formControlName=\"paginationRange\" style=\"width:100px;\">\n                <mat-option *ngFor=\"let opts of paginationRange\"\n                    [value]=\"opts\">\n                    {{opts}}\n                </mat-option>\n            </mat-select>\n          </mat-form-field>\n    </div>\n    <div class=\"logging__form--field\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Log Type</mat-label>\n            <mat-select formControlName=\"logType\" multiple (selectionChange)=\"onTypeChange()\">\n                <mat-option *ngFor=\"let opts of logTypeOptions\"\n                    [value]=\"opts.value\">\n                    {{opts.label}}\n                </mat-option>\n            </mat-select>\n          </mat-form-field>\n    </div>\n    <div class=\"logging__form--field\"\n        *ngIf=\"fgLoggingFilter.get('logType').value.indexOf('logging') > -1\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Nodes</mat-label>\n            <mat-select formControlName=\"nodes\" multiple>\n                <mat-option *ngFor=\"let opts of nodes\"\n                    [value]=\"opts\">\n                    {{opts}}\n                </mat-option>\n            </mat-select>\n          </mat-form-field>\n    </div>\n    <div class=\"logging__form--field\">\n        <mat-slide-toggle \n        formControlName=\"isLive\"\n        (click)=\"onLiveToggle($event)\"\n        >Live</mat-slide-toggle>\n    </div>\n    <!-- <div class=\"logging__form--field\">\n        <mat-form-field class=\"example-form-field\" appearance=\"fill\">\n            <mat-label>Description</mat-label>\n            <input matInput type=\"text\" formControlName=\"description\">\n            <button *ngIf=\"fgLoggingFilter.get('description').value\" matSuffix mat-icon-button aria-label=\"Clear\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n    </div> -->\n    <div class=\"logging__form--field\">\n        <button \n            [disabled]=\"fgLoggingFilter.get('isLive').value\"\n            mat-mini-fab color=\"primary\" \n            aria-label=\"Submit logging filter\">\n            <mat-icon>search</mat-icon>\n        </button>\n    </div>\n</form>\n<div class=\"grid gap\">\n    <div class=\"grid__cell table\">\n        <div class=\"grid__cell--label\">Logs</div>\n        <div class=\"grid__cell--content scollable\">\n            <div *ngIf=\"savedResults.length; else loader;\">\n                <table  mat-table  class=\"vehicles__status\"  [dataSource]=\"tableList\" >\n                    <!-- Position Column -->\n            \n                    <!-- <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>ID </th>\n                        <td mat-cell *matCellDef=\"let col\"> {{col.id}} </td>\n                    </ng-container>         -->\n                    <ng-container matColumnDef=\"status\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header >Status </th>\n                      <td mat-cell *matCellDef=\"let col\"> \n                          <mat-icon class=\"icon\" inline>\n                              {{renderAlertsColumn(col)}} \n                        </mat-icon></td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"timestamp\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Timestamp </th>\n                        <td mat-cell *matCellDef=\"let col\"> {{col.readingat | date:'medium' }} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"type\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Type </th>\n                        <td mat-cell *matCellDef=\"let col\" class=\"type\"> {{renderTypeColumn(col)}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"node\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Node </th>\n                        <td mat-cell *matCellDef=\"let col\" class=\"node\"> {{renderNodeColumn(col)}} </td>\n                    </ng-container>       \n                    <ng-container matColumnDef=\"description\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Description </th>\n                        <td mat-cell *matCellDef=\"let col\" class=\"description\"> {{renderDescriptionColumn(col)}} </td>\n                    </ng-container>   \n\n                    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n                    <tr mat-row \n                      [class]= \"renderAlertsColumn(row)\" \n                      *matRowDef=\"let row; columns: columns;\"\n                      (click)=\"openDialog(row)\"\n                    ></tr>\n                </table>\n            </div>\n            <ng-template #loader>\n                <div>\n                    No Data\n                </div>\n              </ng-template>\n              <div *ngIf=\"isScrollDataLoading\">\n                <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n              </div>\n        </div>\n    </div>\n</div>","<div class=\"header\">\n    <div class=\"header__title\">\n        <h2>\n            Overview\n        </h2>\n        <button\n             *ngIf=\"isVehicleOnline\"\n            class=\"live-pulse\"\n            mat-mini-fab color=\"warn\" \n            aria-label=\"Section is live\">\n        </button>\n    </div>\n</div>\n<div class=\"grid gap col-2\">\n    <div class=\"grid__cell\">\n        <app-vehicle-mission-stats\n            [vehicleId]=\"vehicleId\"\n        ></app-vehicle-mission-stats>\n    </div>\n    <div class=\"grid__cell\">\n        <div class=\"grid__cell--label\">Status</div>\n        <div class=\"grid__cell--content\">\n            <app-vehicle-status\n            [vehicleId]=\"vehicleId\"\n            ></app-vehicle-status>\n        </div>\n    </div>\n    <div class=\"grid__cell grid__cell__full-width\">\n        <mat-divider class=\"divider\"></mat-divider>\n    </div>\n    <div class=\"grid__cell\">\n        <div class=\"grid__cell--label\">Stop Images</div>\n        <div class=\"grid__cell--content\">\n            <app-stop-images \n            [vehicleId]=\"vehicleId\"\n            [live]=true\n            ></app-stop-images>\n        </div>\n    </div>\n    <div class=\"grid__cell\">\n        <div class=\"preview-images\" *ngIf=\"isImagesLoaded; else loader\">\n            <div class=\"preview-images__img\" \n                *ngFor=\"let imageInfo of vehicleImages\" >\n                <div *ngIf=\"imageInfo\">\n                    <div class=\"grid__cell--label\">{{imageInfo.topic.replace(\"/left/preview\",\"\").replace(\"/\", \"\").replace(\"/\",\"\").replace(\"_\",\" \") | titlecase}}</div>\n                    <div class=\"grid__cell--content\">\n                        <app-image [data]=\"imageInfo.image\" \n                            [label]=\"imageInfo.topic\" \n                            [headerId]=\"imageInfo.header.headerId\">\n                        </app-image>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #loader>\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n        </ng-template>\n    </div>\n    <!-- <div class=\"grid__cell grid__cell__full-width\">\n        <mat-divider class=\"divider\"></mat-divider>\n    </div>\n    <div class=\"grid__cell grid__cell__full-width\">\n        <div class=\"grid__cell--label\">Geolocation</div>\n        <div class=\"grid__cell--content\">\n            <div *ngIf=\"vehiclesLastCoordinates.length; else emptymap\"  class=\"map\" >\n                <app-starfire  *ngIf=\"isVehicleOnline\"\n                    playback=\"live\" \n                    [showTractor]=true \n                    [zoom]=20\n                    [vehicleId]=\"vehicleId\"\n                    ></app-starfire>\n                <app-starfire  *ngIf=\"!isVehicleOnline\"\n                    playback=\"static\" \n                    [showTractor]=true \n                    [zoom]=20\n                    [vehicleId]=\"vehicleId\"\n                    [coordinates]=\"vehiclesLastCoordinates\"\n                    [lastPosition]=\"true\"\n                    ></app-starfire>\n            </div>\n            <ng-template #emptymap >\n                <div class=\"map\">\n                    <app-starfire  *ngIf=\"!isVehicleOnline\"\n                        playback=\"static\" \n                        [showTractor]=true \n                        [zoom]=20\n                        [vehicleId]=\"vehicleId\"\n                        [lastPosition]=\"true\"\n                    ></app-starfire>\n                </div>\n            </ng-template>\n        </div>\n    </div> -->\n</div>","import { Component, OnDestroy, OnInit, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {GeolocationService} from 'src/app/services/geolocation/geolocation.service'\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport { GqlQueryService } from 'src/app/services/graphql/gql-query.service';\nimport {ActivatedRoute} from '@angular/router'\nimport { toPublicName } from '@angular/compiler/src/i18n/serializers/xmb';\n\n@Component({\n  selector: 'app-vehicle-overview',\n  templateUrl: './vehicle-overview.component.html',\n  styleUrls: ['./vehicle-overview.component.scss']\n})\nexport class VehicleOverviewComponent implements OnInit, OnDestroy, AfterViewInit {\n  geoUpdateSubscription:Subscription | null = null\n  onlineStatusQuery:Subscription | null = null\n  onlineStatusSubscription:Subscription | null = null\n  previousCoordinatesQuery:Subscription | null = null\n  previewImagesSubscription:Subscription | null = null\n  imageSubscriptions:Subscription[]  = []\n  allImageSubscriptions:Subscription  | null = null\n  vehiclesLastCoordinates:number[][] = []\n  vehicleImages:any[] =[]\n  isImagesLoaded:boolean = false\n  vehicleId: string=\"\"\n  isVehicleOnline: boolean = false;\n\n  \n  constructor(\n    private gisService: GeolocationService\n    , private graphQLSubscription: GqlSubscriptionService\n    , private graphQLQuery: GqlQueryService\n    , private route: ActivatedRoute\n    ) { }\n\n  \n  private setupLiveImageSubscription(){\n    this.allImageSubscriptions = \n    this.graphQLSubscription\n    .getVehiclePreviewImages({vehicleId:this.vehicleId})\n    .subscribe((response:any)=>{\n      const imageIndex = this.vehicleImages.findIndex((image:any)=>{\n        return !image ? false : image.topicId === response.topicId\n      }) \n\n      if(imageIndex === -1){\n        this.previewImageQuery()\n      }\n    })\n  }\n\n  private previewImageQuery(){\n    this.previewImagesSubscription?.unsubscribe()\n    this.imageSubscriptions.forEach(subscription=>{\n      subscription.unsubscribe()\n    })\n\n    this.previewImagesSubscription = this.graphQLQuery\n    .getVehiclePreviewImages({id:this.vehicleId})\n    .subscribe((response:any)=>{\n      this.vehicleImages = response.filter((item:any)=>!!item)\n      this.vehicleImages.forEach((image:any, index:number, array:any[])=>{\n        if(!image)\n          return;\n\n        this.imageSubscriptions[index]  =  \n          this.graphQLSubscription\n          .getPreviewImageByVehicleIdTopicId({vehicleId:this.vehicleId, topicId:image.topicId})\n          .subscribe((response:any): void | null=>{\n            if(!response)\n              return null;\n\n            array[index] = response\n          })\n      })\n      this.isImagesLoaded = true\n    })\n  }\n\n  private setupOnlineSubscription(){\n    this.onlineStatusQuery = this.graphQLQuery\n    .getVehicleOnlineStatus({id:this.vehicleId})\n    .subscribe((response:any)=>{\n        this.isVehicleOnline = response.online ? true : false\n    })\n\n    this.onlineStatusSubscription = this.graphQLSubscription\n    .getVehicleOnlineStatus({id:this.vehicleId})\n    .subscribe((response:any)=>{\n      if(response)\n        this.isVehicleOnline = response.online\n    })\n  }\n\n  private setupVehicleGeolocationSubscription(){\n    this.previousCoordinatesQuery = this.graphQLQuery\n    .getVehiclePreviousLocation({vehicle_id:this.vehicleId})\n    .subscribe((response:any)=>{\n      if(response)\n        this.vehiclesLastCoordinates = [[response.longitude, response.latitude]]\n    })\n  }\n\n  ngOnInit(): void {\n    this.vehicleId = (this.route.parent as any).snapshot.params.id\n    this.setupVehicleGeolocationSubscription()\n    this.setupOnlineSubscription()\n    this.previewImageQuery()\n    this.setupLiveImageSubscription()\n  }\n\n  ngOnDestroy() :void{\n    this.onlineStatusSubscription?.unsubscribe()\n    this.onlineStatusQuery?.unsubscribe()\n    this.previousCoordinatesQuery?.unsubscribe()\n    this.previewImagesSubscription?.unsubscribe()\n    this.allImageSubscriptions?.unsubscribe()\n    this.imageSubscriptions.forEach(subscription=>{\n      subscription.unsubscribe()\n    })\n  }\n\n  ngAfterViewInit() :void{\n\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-vehicle-system',\n  templateUrl: './vehicle-system.component.html',\n  styleUrls: ['./vehicle-system.component.scss']\n})\nexport class VehicleSystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>vehicle-system works!</p>\n","import { Injectable } from '@angular/core';\n\nclass CurrentVehicleTopic {\n\n    private topic={name:\"\",id:null}\n\n    set topicInfo(data:any){\n        this.topic = {name: data.topic.name,id:data.topic.id}\n    }\n\n    get topicInfo(){\n        return this.topic;\n    }\n}\n\nexport {CurrentVehicleTopic}","import { Component, DoCheck, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { MenuService } from 'src/app/services/navigation/menu.service';\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { CurrentVehicleTopic } from './services/current-topic.service'\n\n@Component({\n  selector: 'app-vehicle',\n  templateUrl: './vehicle.component.html',\n  styleUrls: ['./vehicle.component.scss'],\n  providers:[CurrentVehicleTopic]\n})\nexport class VehicleComponent implements OnInit, OnDestroy, DoCheck {\n\n  geoUpdateSubscription:Subscription | null = null\n  currentRoute: string =  \"\"\n  vehicleId: string = \"\";\n  paramSubscription: Subscription | undefined\n  \n  constructor(\n    private menuService: MenuService\n    , private router: Router\n    , private route: ActivatedRoute\n    , private graphqlQueryService: GqlQueryService\n    , private currentVehicleTopicService : CurrentVehicleTopic) {\n      this.paramSubscription = this.route.params.subscribe(data=>{\n        this.vehicleId = data.id\n      })\n     }\n\n    private loadMenu(obj:any) {\n      const { data, loading } = obj\n  \n      if (!loading)\n        this.menuService.menu.next({\n          header: `Vehicle: ${this.vehicleId }`,\n          links: [\n            {\n              label:\"Overview\"\n              , url:`/vehicles/${this.vehicleId}/overview`\n              , tooltip:`Vehicle: ${this.vehicleId} Overview Page`\n            },\n            // {\n            //   label:\"Geolocation\"\n            //   , url:`/vehicles/${this.vehicleId}/geolocation`\n            //   , tooltip:`Vehicle: ${this.vehicleId} Geolocation Page`\n            // },\n            // {\n            //   label:\"Images\"\n            //   , url:`/vehicles/${this.vehicleId}/images`\n            //   , tooltip:`Vehicle: ${this.vehicleId} Images Page`\n            // },\n            {\n              label:\"Logging\"\n              , url:`/vehicles/${this.vehicleId}/logging`\n              , tooltip:`Vehicle: ${this.vehicleId} Logging Page`\n            },\n            // {\n            //   label:\"System\"\n            //   , url:`/vehicles/${this.vehicleId}/system`\n            //   , tooltip:`Vehicle: ${this.vehicleId} System Page`\n            // },\n            // ...data.topics.nodes.map((vehicleTopic:any)=>{\n            //     if(!vehicleTopic.vehicleTopics.nodes.length)\n            //       return {}\n\n            //     const topicType = vehicleTopic.vehicleTopics.nodes.map((topic:any)=>{\n            //           return topic\n            //       })[0]\n            //     return  {\n            //       label: topicType.topic.name,\n            //       callback:()=> {\n            //         this.currentVehicleTopicService.topicInfo = topicType\n            //         this.loadTopic(topicType.topic)\n            //       }\n            //     }\n            //   })\n              ]\n            }\n        )\n  }\n\n  loadTopic(topic:any){\n    // @ts-ignore\n    this.router.navigateByUrl(`/${this.vehicleId}`, {skipLocationChange: false})\n    .then(() => {\n      this.router.navigate(\n          [this.vehicleId, ...topic.name.replace(/\\//,\"\").split(\"/\")])\n      })\n  }\n\n  ngOnInit(): void {\n    this.currentRoute =  (this.route.url as any).value.join(\"/\")\n    this.graphqlQueryService\n      .getTopicsByVehicleId({id:this.vehicleId})\n      .subscribe(response=>\n        this.loadMenu(response)\n      );\n  }\n\n  ngOnDestroy(): void{\n    this.menuService.menu.next(null)\n    this.paramSubscription?.unsubscribe()\n  }\n\n  ngDoCheck(){\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport {Subscription} from 'rxjs'\nimport {ActivatedRoute, Router} from '@angular/router'\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\n\n@Component({\n  selector: 'app-vehicle-list',\n  templateUrl: './vehicle-list.component.html',\n  styleUrls: ['./vehicle-list.component.scss']\n})\nexport class VehicleListComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  updates: any ={}\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnDestroy(){\n  }\n\n  onRowClick(id:number){\n    this.router.navigate([id],{relativeTo:this.route})\n  }\n\n  onLiveUpdate(event:any){\n      this.updates = event;\n  }\n}\n","<mat-tab-group mat-align-tabs=\"center\">\n    <mat-tab label=\"Online\">\n      <app-vehicles-online \n        (onClick)=\"onRowClick($event)\"\n        (onUpdate) = \"onLiveUpdate($event)\"\n        ></app-vehicles-online>\n    </mat-tab>\n    <mat-tab label=\"Offline\">\n      <app-vehicles-offline  \n      [update]=\"updates\"\n      (onClick)=\"onRowClick($event)\"></app-vehicles-offline>\n    </mat-tab>\n  </mat-tab-group>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {GeolocationService} from 'src/app/services/geolocation/geolocation.service'\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport {ActivatedRoute} from '@angular/router'\nconst mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\n\n@Component({\n  selector: 'app-vehicle-live',\n  templateUrl: './vehicle-live.component.html',\n  styleUrls: ['./vehicle-live.component.scss']\n})\nexport class VehicleLiveComponent implements OnInit, OnDestroy {\n\n  geoUpdateSubscription:Subscription | null = null\n  vehicleId: string=\"\"\n\n  constructor(\n    private gisService: GeolocationService\n    , private graphQLSubscription: GqlSubscriptionService\n    , private route: ActivatedRoute) { }\n\n  async ngOnInit() {\n    this.vehicleId = (this.route.parent as any).snapshot.params.id\n\n    // const {map,geoJson} = await this.gisService.getLiveMap(\n    //   {\n    //     container:\"map1\"\n    //     , showTractor:true\n    //     , coordinates:[]\n    //     , zoom:15}\n    // )\n\n    // this.geoUpdateSubscription = this.graphQLSubscription.getGeolocationStream().subscribe(\n    //   (response:any) => {\n    //     console.log(response.data.geographicCoordinates)\n    //     const {longitude,latitude} = (response.data.geographicCoordinates as {longitude:number, latitude:number})\n\n    //     // @ts-ignore\n    //     geoJson.data.features[0].geometry.coordinates.push([longitude,latitude])\n    //     map.getSource('trace').setData(geoJson.data);\n    //     map.panTo([longitude,latitude]);\n    //   },\n    //   error => {\n    //     console.log(error);\n    //   }\n    // )\n  }\n\n  ngOnDestroy(): void{\n    // this.geoUpdateSubscription?.unsubscribe()\n  }\n\n}\n","<div class=\"header\">\n    <div class=\"header__title\">\n        <h2>\n            LIVE\n        </h2>\n        <button \n            class=\"live-pulse\"\n            mat-mini-fab color=\"warn\" \n            aria-label=\"Section is live\">\n        </button>\n    </div>\n</div>\n<div class=\"grid gap\">\n    <div class=\"grid__cell\">\n        <div class=\"grid__cell--label\">Geolocation</div>\n        <app-starfire \n            playback=\"live\" \n            [showTractor]=true \n            [zoom]=20\n            [vehicleId]=\"vehicleId\"\n            ></app-starfire>\n    </div>\n</div>\n<router-outlet></router-outlet>\n","<h2>/{{currentRoute}}</h2>\n<div [ngSwitch]=\"currentRoute\">\n    <div *ngSwitchCase=\"'starfire'\">\n        <div class=\"grid gap\">\n            <div class=\"grid__cell\">\n                <div class=\"grid__cell--label\">Static</div>\n                <app-starfire [showTractor]=true [zoom]=20 [vehicleId]=\"vehicleId\" ></app-starfire>\n            </div>\n            <div class=\"grid__cell\">\n                <div class=\"grid__cell--label\">Replay</div>\n                <app-starfire playback=\"replay\" [showTractor]=true [zoom]=30 [vehicleId]=\"vehicleId\"></app-starfire>\n            </div>\n        </div>\n    </div>\n    <div *ngSwitchCase=\"'front_center/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'front_right/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'front_left/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'front_left/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'side_right/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'side_right/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'rear/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'rear/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>\n    <div *ngSwitchCase=\"'side_left/debayered'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div>  \n    <div *ngSwitchCase=\"'side_left/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div> \n    <div *ngSwitchCase=\"'front_right/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div> \n    <div *ngSwitchCase=\"'front_center/visualization/top_down_view'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div> \n    <div *ngSwitchCase=\"'front_right/segmentation_map'\">\n        <app-image-pair [topic]='\"/\"+currentRoute'></app-image-pair>\n    </div> \n    <div *ngSwitchCase=\"'side_left/left/preview'\">\n        <app-preview \n        [topic]='\"/\"+currentRoute'\n        [topicId]=\"topicId\"\n        [vehicleId]=\"vehicleId\"\n        ></app-preview>\n    </div>\n    <div *ngSwitchCase=\"'side_right/left/preview'\">\n        <app-preview \n        [topic]='\"/\"+currentRoute'\n        [topicId]=\"topicId\"\n        [vehicleId]=\"vehicleId\"\n        ></app-preview>\n    </div>\n    <div *ngSwitchCase=\"'rear/left/preview'\">\n        <app-preview \n        [topic]='\"/\"+currentRoute'\n        [topicId]=\"topicId\"\n        [vehicleId]=\"vehicleId\"\n        ></app-preview>\n    </div>\n    <div *ngSwitchCase=\"'front_left/left/preview'\">\n        <app-preview \n        [topic]='\"/\"+currentRoute'\n        [topicId]=\"topicId\"\n        [vehicleId]=\"vehicleId\"\n        ></app-preview>\n    </div>\n    <div *ngSwitchCase=\"'front_right/left/preview'\">\n        <app-preview \n        [topic]='\"/\"+currentRoute'\n        [topicId]=\"topicId\"\n        [vehicleId]=\"vehicleId\"\n        ></app-preview>\n    </div>\n    <div *ngSwitchCase=\"'front_center/left/preview'\">\n        <app-preview \n        [topic]='\"/\"+currentRoute'\n        [topicId]=\"topicId\"\n        [vehicleId]=\"vehicleId\"\n        ></app-preview>\n    </div>\n    <div *ngSwitchDefault>Coming Soon! {{currentRoute}}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router'\nimport {CurrentVehicleTopic } from '../../../vehicle/services/current-topic.service'\n\n@Component({\n  selector: 'app-vehicle-topic',\n  templateUrl: './vehicle-topic.component.html',\n  styleUrls: ['./vehicle-topic.component.scss']\n})\nexport class VehicleTopicComponent implements OnInit {\n  currentRoute: string =  \"\"\n  vehicleId: string=\"\"\n  topicId: number | null = null\n  topicName: string = \"\"\n\n  constructor( \n    private route: ActivatedRoute\n    , private currentTopicService: CurrentVehicleTopic) { \n    this.topicName = this.currentTopicService.topicInfo.name\n    this.topicId = this.currentTopicService.topicInfo.id\n  }\n\n  ngOnInit(): void {\n    this.currentRoute =  (this.route.url as any).value.join(\"/\")\n    this.vehicleId = (this.route.parent as any).snapshot.params.id\n  }\n\n}\n","<div class=\"header\">\n    <div class=\"header__title\">\n        <h1>\n            Vehicles  \n        </h1>\n\n    </div>\n      <ng-template #topic>\n          <div class=\"header__topic\">\n            <b>Topic: </b>{{rootPath}}\n          </div>\n      </ng-template>\n</div>\n<app-ng-dynamic-breadcrumb\n[bgColor]=\"breadcrumbConfig['bgColor']\"\n[fontSize]=\"breadcrumbConfig['fontSize']\"\n[fontColor]=\"breadcrumbConfig['fontColor']\"\n[lastLinkColor]=\"breadcrumbConfig['lastLinkColor']\"\n[symbol]=\"breadcrumbConfig['symbol']\"\n[ngClass]=\"{'breadcrumb':true}\"\n>\n</app-ng-dynamic-breadcrumb>\n<hr/>\n<router-outlet></router-outlet>\n\n","import { Component, OnInit, OnDestroy, ViewEncapsulation, DoCheck, OnChanges } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { MenuService } from 'src/app/services/navigation/menu.service';\nimport { IMenu, IMenuLinks } from 'src/app/interfaces/navigation/menu'\nimport { Router, ActivatedRoute } from '@angular/router'\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\n\nconst SubscriptionQL = require('src/app/graphql/query-syntax/subscriptions')\nconst QueryQL = require(\"src/app/graphql/query-syntax/query\")\n\n\n@Component({\n  selector: 'app-vehicles',\n  templateUrl: './vehicles.component.html',\n  styleUrls: ['./vehicles.component.scss'],\n  encapsulation: ViewEncapsulation.None\n\n})\nexport class VehiclesComponent implements OnInit, OnDestroy, DoCheck, OnChanges {\n\n  rootPath: string = \"\";\n  breadcrumbConfig: any = {\n    bgColor: 'inherit',\n    fontSize: 'inherit',\n    fontColor: 'inherit',\n    lastLinkColor: 'inherit',\n    symbol: ' > ',\n  }\n\n  constructor(\n     private menuService: MenuService\n    , private router: Router\n    , private route: ActivatedRoute\n    , private graphqlQueryService: GqlQueryService) {\n  }\n\n  // private loadMenu(obj:any) {\n  //   const { data, loading } = obj\n\n  //   if (!loading)\n  //     this.menuService.menu.next({\n  //       header: \"Device Topics\",\n  //       links: data.topics.map((topic: any) => {\n  //         return {\n  //           label: topic.name,\n  //           callback:()=> {\n  //             this.loadTopic(topic)\n  //           }\n  //         }\n  //       })\n  //     }\n  //     )\n  // }\n  ngOnInit(): void {\n    // this.rootPath = \"\"\n    // this.graphqlQueryService\n    //   .getTopics()\n    //   .subscribe(data=>this.loadMenu(data));\n  }\n\n  // loadTopic(topic:any){\n  //   this.router.navigateByUrl(``, {skipLocationChange: false})\n  //   .then(() => this.router.navigate(\n  //     [this.route.snapshot.routeConfig?.path,...topic.name.replace(/\\//,\"\").split(\"/\")]\n  //   ))\n  // }\n\n  ngOnDestroy() {\n    // this.menuService.menu.next(null)\n  }\n\n  ngDoCheck(){\n    // @ts-ignore\n    // this.rootPath = this.route.snapshot._routerState.url.replace(`/${this.route.snapshot.routeConfig?.path}`,\"\")\n  }\n\n  ngOnChanges(){\n  }\n\n}\n","import { RouterModule, Routes } from \"@angular/router\"\nimport { NgModule } from \"@angular/core\"\nimport { AppComponent } from '../app.component'\nimport { LoginComponent } from \"../pages/login/login.component\"\nimport { DashboardComponent } from \"../pages/dashboard/dashboard.component\"\nimport { ProfileComponent } from \"../pages/profile/profile.component\"\nimport { LayoutComponent } from \"../components/layout/layout.component\"\nimport { VehiclesComponent } from \"../pages/vehicles/vehicles.component\"\nimport { AuthGuardService } from \"../services/auth/auth-guard.service\"\nimport { ErrorComponent } from \"src/app/pages/error/error.component\"\nimport { VehicleTopicComponent } from \"src/app/pages/vehicles/pages/vehicle-topic/vehicle-topic.component\"\nimport { VehicleLiveComponent } from \"../pages/vehicles/pages/vehicle-live/vehicle-live.component\"\nimport { VehicleListComponent } from \"../pages/vehicles/pages/vehicle-list/vehicle-list.component\"\nimport { VehicleComponent } from \"../pages/vehicle/vehicle.component\"\nimport { VehicleOverviewComponent } from '../pages/vehicle/pages/vehicle-overview/vehicle-overview.component';\nimport { VehicleGeolocationComponent } from '../pages/vehicle/pages/vehicle-geolocation/vehicle-geolocation.component';\nimport { VehicleImagesComponent } from '../pages/vehicle/pages/vehicle-images/vehicle-images.component';\nimport { VehicleLoggingComponent } from '../pages/vehicle/pages/vehicle-logging/vehicle-logging.component';\nimport { VehicleSystemComponent } from '../pages/vehicle/pages/vehicle-system/vehicle-system.component';\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: LayoutComponent,\n        canActivate: [AuthGuardService],\n        runGuardsAndResolvers: 'always',\n        children: [\n            {\n                path: \"\",\n                redirectTo:\"vehicles\",\n                pathMatch:\"full\"\n            },\n            {\n                path: \"profile\",\n                component: ProfileComponent\n            },\n            {\n                // Main / Home Page\n                path: \"vehicles\",\n                component: VehiclesComponent\n                , children: [\n                    {\n                        // Vehicle List is degailt page on Main / Home Page\n                        path: \"\",\n                        component: VehicleListComponent\n                        , data: {\n                            title: 'Vehicle List',\n                            breadcrumb: [\n                              {\n                                label: 'Vehices',\n                                url: ''\n                              }\n                            ]\n                        },\n                    },\n                    {\n                        path: \":id\"\n                        , component: VehicleComponent\n                        , data: {\n                            title: 'Vehicle',\n                            breadcrumb: [\n                              {\n                                label: 'Vehicle',\n                                url: ':id'\n                              }\n                            ]\n                          }\n                        , children:[\n                            {\n                                path:\"\",\n                                redirectTo:\"overview\",\n                                pathMatch: \"full\"\n                            },\n                            {\n                                path:\"overview\",\n                                component:VehicleOverviewComponent\n                                , data: {\n                                    title: 'Overview',\n                                    breadcrumb: [\n                                    {\n                                        label: 'Vehices',\n                                        url: '../'\n                                    },\n                                      {\n                                        label: 'Overview',\n                                        url: ''\n                                      }\n                                    ]\n                                  },\n                            },\n                            {\n                                path:\"geolocation\",\n                                component:VehicleGeolocationComponent\n                                , data: {\n                                    title: 'Geolocation',\n                                    breadcrumb: [\n                                    {\n                                        label: 'Vehices',\n                                        url: '../'\n                                    },\n                                    {\n                                        label: ' Geolocation',\n                                        url: ''\n                                      }\n                                    ]\n                                  },\n                            },\n                            {\n                                path:\"images\",\n                                component:VehicleImagesComponent\n                                , data: {\n                                    title: 'Images',\n                                    breadcrumb: [\n                                    {\n                                        label: 'Vehices',\n                                        url: '../'\n                                    },\n                                    {\n                                        label: 'Images',\n                                        url: ''\n                                      }\n                                    ]\n                                  },\n                            },\n                            {\n                                path:\"logging\",\n                                component:VehicleLoggingComponent\n                                , data: {\n                                    title: 'Logging',\n                                    breadcrumb: [\n                                    {\n                                        label: 'Vehices',\n                                        url: '../'\n                                    },                                      \n                                    {\n                                        label: 'Logging',\n                                        url: ''\n                                    }\n                                    ]\n                                  },\n                            },\n                            {\n                                path:\"system\",\n                                component:VehicleSystemComponent\n                                , data: {\n                                    title: 'Configuration',\n                                    breadcrumb: [\n                                    {\n                                        label: 'Vehices',\n                                        url: '../'\n                                    },                                       \n                                      {\n                                        label: 'Configuration',\n                                        url: ''\n                                      }\n                                    ]\n                                  },\n                            },\n                            {\n                                path: \"**\"\n                                , component: VehicleTopicComponent\n                            }]\n                    }\n                ]\n            },\n            // {\n            //     path: \"vehicles\",\n            //     component: VehiclesComponent,\n            //     children: [\n            //         {\n            //             path: \"\",\n            //             component: VehicleListComponent\n            //         },\n            //         {\n            //             path: \":id\",\n            //             component: VehicleComponent,\n            //             children:[\n            //                 {\n            //                     path:\"\",\n            //                     component:VehicleLiveComponent\n            //                 },\n            //                 {\n            //                     path: \"**\"\n            //                     , component: VehicleTopicComponent\n            //                 }]\n            //         }\n            //     ]\n            // },\n        ]\n    },\n    {\n        path: \"login\",\n        component: LoginComponent\n    }\n\n]\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\n    exports: [RouterModule]\n})\nexport class AppRoutes { }","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router'\nimport { SocialAuthService, GoogleLoginProvider, SocialUser } from 'angularx-social-login';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    private socialAuthService: SocialAuthService,\n    private router: Router\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):Observable<boolean> | Promise<boolean> | boolean{\n    return new Promise((resolve)=>{\n      this.socialAuthService.authState.subscribe((user) => {\n        if(user != null)\n          resolve(user != null)\n        else\n          this.router.navigate([\"/login\"])  \n      });\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Apollo, gql } from 'apollo-angular';\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { environment } from '../../../environments/environment'\nimport { IGeolocationConfig, IGeoJSONArgs, IAddImageArgs, IPaintLine } from '../../interfaces/geolocation/geolocation'\n// import {geographicCoordinates} from '../../graphql/query-syntax/subscriptions/geographic-coordinates'\n\nconst mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\nmapboxgl.accessToken = environment.mapboxAPIKey\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n  private readonly mapboxgl = mapboxgl\n  private tractorName:string = 'tractor'\n\n  constructor(private apollo: Apollo) {\n    mapboxgl.accessToken = environment.mapboxAPIKey\n  }\n\n\n  private setupMap(container: string, center: number[] | undefined | null, zoom: number) {\n    return new mapboxgl.Map({\n      container, // container ID\n      style: 'mapbox://styles/mapbox/satellite-v9', // style URL\n      center, // starting position [lng, lat]\n      zoom // starting zoom\n    });\n  }\n\n  private addImage({ coordinates = [], map }: IAddImageArgs) {\n    map.loadImage(\n      '/assets/tractor.png',\n      (error: any, image: any) => {\n        if (error) throw error;\n\n        // Add the image to the map style.\n        map.addImage(this.tractorName, image);\n\n        // Add a data source containing one point feature.\n        map.addSource(this.tractorName\n          , this.getFeaturesGEOJSON({ type: 'geojson', dataType: 'FeatureCollection', geometryType: 'Feature', coordinates }));\n\n        // Add a layer to use the image to represent the data.\n        map.addLayer({\n          'id': 'points',\n          'type': 'symbol',\n          'source': this.tractorName, // reference the data source\n          'layout': {\n            'icon-image': this.tractorName, // reference the image\n            'icon-size': 0.05\n          }\n        });\n      });\n  }\n\n  private paintLine(config: IPaintLine, map: any) {\n    const { \n        lineSize = 5\n        , lineColor = \"red\"\n        , source = \"route\" \n      } = config\n\n    map.addLayer({\n      'id': 'route',\n      'type': 'line',\n      'source': source,\n      'layout': {\n        'line-join': 'round',\n        'line-cap': 'round'\n      },\n      'paint': {\n        'line-color': lineColor,\n        'line-width': lineSize,\n        'line-opacity': 0.8\n      }\n    });\n  }\n\n  private onLoadStaticMapHandler(config: IGeolocationConfig, map: any) {\n    const { coordinates\n      , showTractor\n      , lineColor\n      , lineSize \n    } = config\n\n    map.addSource('route'\n      , this.getGEOJSON({ type: \"geojson\", dataType: 'Feature', geometryType: 'LineString', coordinates }));\n\n    if (showTractor)\n      this.addImage({ coordinates: coordinates[coordinates.length - 1], map })\n\n    this.paintLine({ source: \"route\", lineColor, lineSize }, map)\n  }\n\n\n  getGEOJSON(config: IGeoJSONArgs) {\n    const { type, dataType, geometryType, coordinates } = config\n\n    return {\n      'type': type,\n      'data': {\n        'type': dataType,\n        'properties': {},\n        'geometry': {\n          'type': geometryType,\n          'coordinates': coordinates\n        }\n      }\n    }\n  }\n\n   getFeaturesGEOJSON(config: IGeoJSONArgs) {\n    const { type\n      , dataType\n      , geometryType\n      , coordinateType = \"Point\"\n      , coordinates \n    } = config\n\n    return {\n      'type': type,\n      'data': {\n        'type': dataType,\n        'features': [\n          {\n            'type': geometryType,\n            'geometry': {\n              'type': coordinateType,\n              'coordinates': coordinates\n            }\n          }\n        ]\n      }\n    }\n  }\n\n  getStaticMap(config: IGeolocationConfig) {\n    const { container = \"map\"\n            , coordinates = [[]]\n            , center = coordinates[0]\n            , showTractor = false\n            , zoom = 15\n            , lineColor\n            , lineSize \n          } = config\n    const map = this.setupMap(container, center, zoom)\n\n    map.on(\"load\", () => {\n      this.onLoadStaticMapHandler({ container, coordinates, center, showTractor, lineColor, lineSize }, map)\n    })\n\n  }\n\n  getReplayMap(config: IGeolocationConfig): void {\n    const { \n      container = \"map\"\n      , coordinates = [[]]\n      , center = coordinates[0]\n      , showTractor = false\n      , zoom = 20\n      , lineColor\n      , lineSize \n    } = config\n\n    const map = this.setupMap(container, center, zoom)\n    \n    map.on(\"load\", () => {\n      const geoJson = this.getFeaturesGEOJSON({\n        type: 'geojson'\n        , dataType: 'FeatureCollection'\n        , geometryType: 'Feature'\n        , coordinateType: \"LineString\"\n        , coordinates: [coordinates[0]]\n      })\n\n      map.addSource('trace', geoJson);\n      this.paintLine({ source: \"trace\", lineColor, lineSize }, map)\n      if (showTractor)\n        this.addImage({ coordinates, map })\n\n      map.jumpTo({ 'center': coordinates[0], 'zoom': 14 });\n      map.setPitch(30);\n\n      let i = 0;\n      let timer = window.setInterval(() => {\n        if (i < coordinates.length) {\n          geoJson.data.features[0].geometry.coordinates.push(\n            // @ts-ignore\n            coordinates[i]\n          )\n          map.getSource('trace').setData(geoJson.data);\n          map.panTo(coordinates[i]);\n          if (showTractor){\n            const imagePosition = this.getFeaturesGEOJSON({\n              type: 'geojson'\n              , dataType: 'FeatureCollection'\n              , geometryType: 'Feature'\n              , coordinateType: \"LineString\"\n              , coordinates: [coordinates[i]]\n            })\n            map.getSource(this.tractorName).setData(imagePosition.data);\n          }\n          i++;\n        } else {\n          window.clearInterval(timer);\n        }\n      }\n        , 1000);\n    });\n  }\n  \n  getLiveMap(config: IGeolocationConfig): Promise<any>{\n    const { \n      container = \"map\"\n      , coordinates = [[]]\n      , showTractor = false\n      , center\n      , zoom = 20\n      , lineColor\n      , lineSize \n    } = config\n\n    const map = this.setupMap(container, center, zoom)\n\n    return new Promise((resolve,reject)=>{\n      map.on(\"load\", () => {\n        const geoJson = this.getFeaturesGEOJSON({\n          type: 'geojson'\n          , dataType: 'FeatureCollection'\n          , geometryType: 'Feature'\n          , coordinateType: \"LineString\"\n          , coordinates: []\n        })\n        map.addSource('trace', geoJson);\n        this.paintLine({ source: \"trace\", lineColor, lineSize }, map)\n        \n        if (showTractor)\n          this.addImage({ coordinates, map })\n        \n          map.setPitch(30);\n\n        resolve({map, geoJson, image:this.tractorName})\n  \n      });\n    })\n\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Apollo, gql } from 'apollo-angular';\nimport { rawListeners } from 'process';\nimport { v4 as uuid } from \"uuid\"\nimport { map } from 'rxjs/operators'\nimport {ImageService} from 'src/app/services/images/image.service'\nimport { resourceLimits } from 'worker_threads';\nconst QueryQL = require(\"src/app/graphql/query-syntax/query\")\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GqlQueryService {\n\n  constructor( \n    private graphService: Apollo\n    , private imageService:ImageService \n  ) { }\n\n  private basicFilteredQuery (Query:any, variables:any={}) {\n    return this.graphService\n    .watchQuery<any>({ \n      query: Query, \n      variables\n    })\n    .valueChanges\n  }\n\n  getTopics(){\n    return this.graphService\n      .watchQuery<any>({ query: QueryQL.Topics.All })\n      .valueChanges\n  }\n\n  getTopicsByVehicleId(variables:any){\n    return this.basicFilteredQuery(QueryQL.Topics.ByVehicleId, variables)\n  }\n\n  getGeolocaton(variables:any){\n    // return this.graphService\n    //   .watchQuery<any>({ query: QueryQL.Geolocation.ById,variables })\n    //   .valueChanges\n\n      return this.basicFilteredQuery(QueryQL.Geolocation.ById, variables)\n      .pipe(map((response:any)=>{\n        return response.data.starfires.nodes\n      }))\n  }\n\n  getImagePair(variables:any){\n    return this.basicFilteredQuery(QueryQL.Images.ImagePair, variables)\n  }\n\n  getSegmentationMap(variables:any){\n    return this.basicFilteredQuery(QueryQL.Images.SegmentationMap, variables)\n  }\n\n  getAllVehicles(){\n    return this.basicFilteredQuery(QueryQL.Vehicles.All)\n      .pipe(map(response=>{\n        return response.data.vehicles.nodes.map((vehicle:any)=>{\n          return {...vehicle, type: vehicle.type.type}\n        })\n      }))\n  }\n\n  getOnlineVehicles({sort=\"\"}={}){\n    return this.basicFilteredQuery(QueryQL.Vehicles.Online)\n      .pipe(map(response=>{\n        const results = !response.data.vehiclesOnlines ? [] : response.data.vehiclesOnlines.nodes.map((vehicle:any)=>{\n          const result = {...vehicle.vehicle}\n          result.id = vehicle.id\n          if(result.vehicleStatuses.nodes.length){\n            result.alerts = result.vehicleStatuses.nodes[0].alerts.nodes[0]\n            result.state = result.vehicleStatuses.nodes[0].state\n          }\n\n          return result\n        })\n        switch(sort){\n          case \"alert\":\n            return results.sort((a:any, b:any)=>\n              a.alerts.alertType.severity - b.alerts.alertType.severity\n            )\n            break;\n          default:\n            return results\n            break;\n        }\n\n      }))\n  }\n\n  getOfflineVehicles(){\n    return this.basicFilteredQuery(QueryQL.Vehicles.Offline)\n      .pipe(map(response=>{\n        return response.data.vehiclesOfflines.nodes.map((vehicle:any)=>{\n          return {...vehicle}\n        })\n      }))\n  }\n\n  getVehicleOnlineStatus(variables:any){\n      return this.basicFilteredQuery(QueryQL.Vehicles.OnlineOrOfflineById, variables)\n        .pipe(map(response=>{\n          const results = response.data\n          return { online: !results.online.nodes.length ?\n                         null : {...results.online.nodes[0]}\n                   , offline: !results.offline.nodes.length ?\n                        null : {...results.offline.nodes[0]}\n                  }\n        }))  \n  }\n\n  getVehicleById(variables:any){\n    return this.basicFilteredQuery(QueryQL.Vehicles.ById, variables)\n  }\n\n  getSegmentationMapByHeaderId(variables:any){\n    return this\n      .basicFilteredQuery(QueryQL.Images.SegmentationMapByHeaderId, variables)\n      .pipe(map(response=>{\n        if(!response.data.cameraMessageHeaders)\n          return []\n\n        return response.data.cameraMessageHeaders.nodes.filter((msg:any) =>{\n          if(!msg.cameraMessagesByHeaderId.nodes.length)\n            return false\n            \n          return msg.cameraMessagesByHeaderId.nodes[0].image.encoding === \"rgb8\" || \n                  msg.cameraMessagesByHeaderId.nodes[0].image.encoding === \"mono8\"\n            }).map((msg:any)=>{\n                const image = {...msg.cameraMessagesByHeaderId.nodes[0].image}\n                image.data = JSON.parse(image.data.data)\n                return image\n            })\n      }))\n  }\n\n  getImagePreview(variables:any){\n    return this.basicFilteredQuery(QueryQL.Images.PreviewByVehicleIdTopicName, variables)\n    .pipe(map((response:any)=>{\n      const cameraData = response.data.topics.nodes[0].cameras\n      const totalCount = cameraData.totalCount\n      const images = cameraData.nodes.map((info:any)=>{\n        const image =  {\n            ...info.msg.image\n            , timestamp: new Date(info.readingat).toUTCString()\n            , vehicle: info.vehicle.name\n            , id: info.id\n            , imageId: uuid()\n            , data: JSON.parse(info.msg.image.data.data) \n            , headerId : info.msg.header.headerId\n            , meta : info.msg.cameraMeta\n          }\n          image.url = this.imageService.getDataURL(image)\n        \n        return image\n      })\n      return {cameraData, totalCount, images }\n    }))\n  }\n\n  getAlerts(){\n    return this.graphService\n      .watchQuery<any>({ query: QueryQL.Notifications.Alerts })\n      .valueChanges\n  }\n\n  getVehiclePreviousLocation(variables:any = {}){\n    return this.basicFilteredQuery(QueryQL.Geolocation.PreviousLocation, variables)\n    .pipe(map((response:any)=>{\n      return response.data.starfires.nodes.length ? response.data.starfires.nodes[0].msg : null\n    }))\n  }\n\n  getVehicleStatus(variables:any){\n    return this.basicFilteredQuery(QueryQL.Status.Vehicle, variables)\n    .pipe(map((response:any)=>{\n      const nodes =  response.data.vehicleStatuses.edges.map((results:any)=>{\n        const node = results.node\n        return {\n            id:node.id\n            , missionStats: node.statusMessage.missionStats\n            , timestamp:node.statusMessage.header.readingat\n            , headerId: node.statusMessage.header.headerid\n            , node: node.statusMessage.header.node\n            , topic: node.topic.name\n            , state: node.state\n            , alerts: node.alerts.nodes\n            , vehicleStatusDetails: node.vehicleStatusDetails.nodes\n          }\n      })\n      return {\n        ...response.data.vehicleStatuses.pageInfo\n        ,totalCount: response.data.vehicleStatuses.totalCount\n        , nodes\n      }\n    }))\n  }\n\n  getVehiclePreviewImages(variables={}){\n    return this.basicFilteredQuery(QueryQL.Images.PreviewDetailsByVehicleId, variables)\n    .pipe(map((response:any)=>{\n      return response.data.topicCategories.nodes[0].topics.nodes.map((item:any)=>{\n        const preview = item.cameras.nodes[0]\n          if(!preview)\n            return null\n            \n          const cameraMessages = preview.msg.image.cameraMessages.nodes[0]\n          const image = cameraMessages.image\n          const header = cameraMessages.header\n          return {\n            topic: preview.topic.name\n            , topicId: preview.topic.id\n            , image: {...image, data: JSON.parse(image.data.data)}\n            , header: header\n          }\n      })\n    }))\n  }\n\n  getVehicleLocationByDateTimestamp(variables={}){\n    return this.basicFilteredQuery(QueryQL.Geolocation.ByVehicleIdDateTimestamp, variables)\n    .pipe(map((response:any)=>{\n      return response.data.starfires.nodes \n      // ? null :\n      //   response.data.starfires.nodes.map((geo:any)=>{\n      //     return {\n      //       readingat: geo.readingat\n      //       , id : geo.id\n      //       , ...geo.msg\n      //       , headerId: geo.msg.headerId\n      //     }\n      //   })\n    }))\n  }\n\n  getAllVehicleLogsStatusDetection(variables:any={logType:[], paginationRange:25, nodes:[]}){\n    return this.basicFilteredQuery(\n          QueryQL.Logging.QueryBuilder(\n                  variables.logType\n                  , variables.paginationRange\n                  , variables.nodes\n                )\n              , variables)\n          .pipe(map((response:any)=>{\n            const logging:any = []\n              if(!response || !response.data)\n                return logging\n\n              response.data.logging ? response.data.logging.nodes.map((item:any)=>item.vehicleLogsByMessageId.nodes.forEach((innerItem:any)=>{logging.push(innerItem)})) :null\n\n              return [].concat(logging || [])\n                .concat(response.data.objectDetection ? response.data.objectDetection.nodes : [])\n                .concat(response.data.vehicleStatus ? response.data.vehicleStatus.nodes : [])\n                .sort((a,b)=>new Date((b as any).readingat).valueOf() - new Date((a as any).readingat).valueOf())\n          }))\n  }\n\n  getPreviewImageByCameraMessageHeaderId(variables={}){\n    return this.basicFilteredQuery(QueryQL.Images.PreviewByMessageHeaderId, variables)\n        .pipe(map((response:any)=>{\n          if(!response.data.cameraMessageHeaders.nodes.length)\n            return null\n\n          const header =  response.data.cameraMessageHeaders.nodes[0]\n          const image = {\n              ...header.cameraMessagesByHeaderId.nodes[0].image\n              , data: JSON.parse(header.cameraMessagesByHeaderId.nodes[0].image.data.data)\n            }\n\n            return {\n              seq: header.seq\n              , node: header.node\n              , readingat: header.readingat\n              , ...image\n            }\n        }))\n  }\n\n  getObjectDetectionByVehicleId(variables={}){\n    return this.basicFilteredQuery(QueryQL.Detection.ByVehicleId, variables)\n    .pipe(map((response:any)=>{\n      return response.data.objects\n    }))\n  }\n\n  getLoggingNodes(){\n    return this.basicFilteredQuery(QueryQL.Logging.Nodes)\n    .pipe(map((response:any)=>{\n      return response.data.vehicleLogNodeTypes.nodes.map((node:any)=>node.name)\n    }))\n  }\n\n  getTopicsByCategoryVehicleId(variables={}){\n    return this.basicFilteredQuery(QueryQL.Topics.ByCategoryVehicleId, variables)\n    .pipe(map((response:any)=>{\n      return response.data\n            .topicCategories.nodes[0]\n            .topics.nodes.map((result:any)=>{\n              if(result.vehicleTopics.nodes.length)\n                return result.vehicleTopics.nodes[0].topic\n              return null\n            }).filter((results:any)=>!!results)\n    }))\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Apollo, gql } from 'apollo-angular';\nimport {map} from 'rxjs/operators'\n\nconst SubscriptionQL = require('src/app/graphql/query-syntax/subscriptions')\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GqlSubscriptionService {\n\n  constructor( private graphService: Apollo ) { }\n\n  getDeviceStream(){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.DeviceMessageSubscription\n    })\n  }\n\n  getGeolocationStream(variables={}){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.Geolocation.Vehicles\n      , variables\n    })\n  }\n\n  getOnlineVehicles(){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.Vehicles.Online\n    }).pipe(map((response:any)=>{\n      const vehicle =  response.data.sqlVehiclesOnline.vehicle_online ? \n        response.data.sqlVehiclesOnline.vehicle_online.vehicle : null\n      const result:any = {\n        event: response.data.sqlVehiclesOnline.event\n        , id : response.data.sqlVehiclesOnline.row.id\n      }\n\n      if(vehicle) {\n        result.name   = vehicle.name\n        result.ip     = vehicle.ip\n        result.vehicle_id = vehicle.vehicle_id\n        result.type   = vehicle.type.type\n        if(vehicle.vehicleStatuses.nodes.length){\n          result.alerts =  vehicle.vehicleStatuses.nodes[0].alerts.nodes[0]\n          result.state = vehicle.vehicleStatuses.nodes[0].state\n        }\n      }\n      \n      return result\n\n    }))\n  }\n\n  getVehicleOnlineStatus(variables={}){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.Vehicles.OnlineOrOfflineById\n      , variables\n    }).pipe(map((response:any)=>{\n      const result = response.data.sqlVehiclesOnline\n      if(!result.vehicle_online)\n        return null;\n\n      switch(result.event){\n        case \"INSERT\":\n        case \"UPDATE\":\n          return {\n            online:true\n            , rowId: result.row.id\n            , vehicleId: result.vehicle_online.vehicleid\n            , name : result.vehicle_online.vehicle.name\n          }\n          break;\n        default:\n          return {online:false}\n          break;\n      }\n    }))\n  }\n\n  getAlerts(){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.Notifications.Alerts\n    }).pipe(map((response:any)=>{\n        const alert = response.data.sqlAlerts.alerts\n        const event = response.data.sqlAlerts.event\n       return {...alert\n              , event\n              , alertMessage:`${alert.vehicleStatus.topic.name } : ${alert.vehicleStatus.state.name}`\n            }\n    }))\n  }\n\n  getVehicleStatus(variables={}){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.Vehicles.State\n      , variables\n    }).pipe(map((response:any)=>{\n      if(!response.data.sqlVehicleStatus.vehicle_status )\n        return null\n\n      const results =  response.data.sqlVehicleStatus.vehicle_status      \n      return {\n        ...results\n        , missionStats: results.statusMessage.missionStats\n        , topic: results.topic.name\n        , node: results.statusMessage.header.node\n        , headerId: results.statusMessage.header.headerid\n        , status:results.state.name\n        , timestamp: results.statusMessage.header.readingat\n        , state:results.state\n        , vehicleStatusDetails: results.vehicleStatusDetails.nodes\n        , alerts:results.alerts.nodes.length ? results.alerts.nodes[0] : null}\n    }))\n  }\n\n  getVehiclePreviewImages(variables={}){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.Images.PreviewImagesByVehicleId\n      , variables\n    }).pipe(map((response:any)=>{\n      return {\n        topic: response.data.sqlCamera.camera.topic.name\n        , topicId: response.data.sqlCamera.camera.topic.id\n        , image: {...response.data.sqlCamera.camera.msg.image, data: JSON.parse(response.data.sqlCamera.camera.msg.image.data.data)}\n        , header:response.data.sqlCamera.camera.msg.header\n      }\n\n      // return response.data.topicCategories.nodes[0].topics.nodes.map((item:any)=>{\n      //     const preview = item.cameras.nodes[0]\n      //     const cameraMessages = preview.msg.image.cameraMessages.nodes[0]\n      //     const image = cameraMessages.image\n      //     const header = cameraMessages.header\n      //     return {\n      //       topic: preview.topic.name\n      //       , image: {...image, data: JSON.parse(image.data.data)}\n      //       , header: header\n      //     }\n      // })\n    }))\n  }\n\n  getPreviewImageByVehicleIdTopicId(variables={}){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.Images.PreviewImagesByVehicleIdTopicId\n      , variables\n    }).pipe(map((response:any)=>{\n      if(!response.data.sqlCamera.camera)\n        return null;\n\n      const topic = response.data.sqlCamera.camera.vehicle.vehicleTopics.nodes[0].topic\n      const msg = topic.cameras.nodes[0].msg\n      const image = msg.image\n      const header =  msg.header\n      return {\n        topic: topic.name\n        , topicId: topic.id\n        , image: {...image, data: JSON.parse(image.data.data) }\n        , header \n      }\n    }))\n  }\n\n  getLoggingByVehicleId(variables={}){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.Logging.ByVehicleId\n      , variables\n    }).pipe(map((response:any)=>{\n      return response.data.sqlVehicleLogging.vehicle_logs\n    }))\n  }\n\n  getObjectDetectionByVehicleId(variables={}){\n    return this.graphService.subscribe({\n      query: SubscriptionQL.Detection.ByVehicleId\n      ,variables\n    }).pipe(map((response:any)=>{\n      return response.data.sqlObjectDetection.object\n    }))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Image } from 'image-js';\nimport {GetDataUrl} from 'src/app/interfaces/images/args'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n   \n  constructor() { }\n\n\n  private mapRGBChannels(data: number[], index:number, red:number, green:number, blue:number, reverse?:boolean | number){\n    if(!reverse){\n      data[index] =  red;     // red\n      data[index + 1] = green; // green\n      data[index + 2] =  blue; // blue\n    } else {\n      data[index + 2] =  blue; // blue\n      data[index + 1] = green; // green\n      data[index] =  red;     // red\n    }\n  }\n\n  private generateSegmentationColor( data:number[], index:number, step:number, value:number[], reverse?:boolean | number ){\n    const code = value[step]\n\n    switch(code){\n      // ‘Drivable’: (0, 0, 0), # Black\n      case 0: \n        this.mapRGBChannels(data,index, 0, 0, 0, reverse)\n        break;\n      // ‘Obstacle’: (1.0, 0, 0), # Red\n      case 1:\n        this.mapRGBChannels(data,index, 255, 0, 0, reverse)\n        break;\n      // ‘Sky’: (0, 0, 1.0), # Blue\n      case 2:\n        this.mapRGBChannels(data,index, 0, 0, 255, reverse)\n        break; \n      // ‘Trees’: (0, 1.0, 0), # Green\n      case 3:\n        this.mapRGBChannels(data,index, 0, 255, 0, reverse)\n        break;\n      // ‘Implement’: (1.0, 1.0, 0.0), # Yellow \n      case 4:\n        this.mapRGBChannels(data,index, 255, 255, 0, reverse)\n        break;\n      // ‘Human’: (0.0, 1.0, 1.0), # Teal\n      case 5:\n        this.mapRGBChannels(data,index, 0, 255, 255, reverse)\n        break;      \n      }\n\n    data[index + 3] =  !code ? 0 : 125;  // alpha\n  }\n\n  private generateRgbColor(data:number[], index:number, step:number, value:number[], reverse:boolean | number){\n    this.mapRGBChannels(data,index, value[step], value[step + 1], value[step + 2], reverse)\n    data[index + 3] = 255;  // alpha\n  }\n\n  private reMapData(config:GetDataUrl){\n    const {width=0, height=0, step=1, is_bigendian=0, data=[], bitDepth=8, isSegmentation=false} = config\n    const parsedData:number[] =[]\n    let i = 0, j, y = 0, x;\n\n    while (y < height) {\n        j = y * step;\n        for (x = 0; x < width; x++) {   \n            \n          if(isSegmentation)\n            this.generateSegmentationColor(parsedData, i, j, data, is_bigendian)\n          else\n            this.generateRgbColor(parsedData, i, j, data, is_bigendian)\n            i += 4;\n            j += 3;\n        }\n        \n        y++;\n    }\n\n    return new Image(\n      width,\n      height,\n      parsedData,\n      {\n        bitDepth,\n      }\n    )\n  }\n\n  getDataURL(config:GetDataUrl): string{\n    return this.reMapData(config).toDataURL()\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollService {\n  contentScroll :Subject<boolean | null> = new Subject<boolean |  null>();\n\n  constructor() { \n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {IMenu} from \"../../interfaces/navigation/menu\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  menu:Subject<IMenu | null> = new Subject<IMenu |  null>();\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs'\nimport {GqlSubscriptionService} from 'src/app/services/graphql/gql-subscription.service'\nimport {GqlQueryService} from 'src/app/services/graphql/gql-query.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  private currentAlerts:any[] = []\n  alerts:Subject<any> = new Subject<any>();\n\n  constructor(\n    private gqlQueryService: GqlQueryService,\n    private gqlSubscriptionService: GqlSubscriptionService\n    ) {\n      this.gqlSubscriptionService\n        .getAlerts()\n        .subscribe(response=>{\n          switch(response.event){\n            case \"INSERT\":\n              // this.currentAlerts.push(response.data.sqlAlerts.alerts)\n              // this.alerts.next(this.currentAlerts)\n              this.alerts.next(response)\n              break;\n            case \"UPDATE\":\n              // const index = this.currentAlerts.findIndex((alert:any)=>{\n              //   alert.id === response.data.sqlAlerts.alerts\n              // })\n\n              // if(response.data.sqlAlerts.alerts.dismissed)\n              //   this.currentAlerts.splice(index,1)\n              // else\n              //   this.currentAlerts[index] = response.data.sqlAlerts.alerts\n              // this.alerts.next(this.currentAlerts)\n              this.alerts.next(response)\n              break;\n          }\n        })\n  }\n\n  getAlerts(){\n      this.gqlQueryService\n        .getAlerts()\n        .subscribe(response=>{\n        this.currentAlerts = response.data.alerts.nodes\n        // this.alerts.next(this.currentAlerts)\n      })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nimport sharedConfig from './shared.confg'\n\nexport const environment = {\n  production: false,\n  ...sharedConfig\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","const sharedConfig =  {\n    googleAuthClientId:'1068443878218-kk375e4311cc3r2rk3b0hn9ukm900tjo.apps.googleusercontent.com',\n    mapboxAPIKey:\"pk.eyJ1IjoiYW50Ymx1ZXJpdmVydGVjaCIsImEiOiJja295a3IwemowbjMwMndwZ2RkdHY2bmJjIn0.xpY0kRQNFTeFgc5l6hqRtQ\",\n    serviceEndpoint:\"/graphql\",\n}\n\nexport {sharedConfig as default}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 6431,\n\t\"./af.js\": 6431,\n\t\"./ar\": 1286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 3160,\n\t\"./ar-ly.js\": 3160,\n\t\"./ar-ma\": 2551,\n\t\"./ar-ma.js\": 2551,\n\t\"./ar-sa\": 9989,\n\t\"./ar-sa.js\": 9989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 1286,\n\t\"./az\": 5887,\n\t\"./az.js\": 5887,\n\t\"./be\": 4572,\n\t\"./be.js\": 4572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 3344,\n\t\"./bm.js\": 3344,\n\t\"./bn\": 8985,\n\t\"./bn-bd\": 3990,\n\t\"./bn-bd.js\": 3990,\n\t\"./bn.js\": 8985,\n\t\"./bo\": 4391,\n\t\"./bo.js\": 4391,\n\t\"./br\": 6728,\n\t\"./br.js\": 6728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 1043,\n\t\"./ca.js\": 1043,\n\t\"./cs\": 420,\n\t\"./cs.js\": 420,\n\t\"./cv\": 3513,\n\t\"./cv.js\": 3513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 7978,\n\t\"./da.js\": 7978,\n\t\"./de\": 6061,\n\t\"./de-at\": 5204,\n\t\"./de-at.js\": 5204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 6061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 5724,\n\t\"./en-au.js\": 5724,\n\t\"./en-ca\": 525,\n\t\"./en-ca.js\": 525,\n\t\"./en-gb\": 2847,\n\t\"./en-gb.js\": 2847,\n\t\"./en-ie\": 7216,\n\t\"./en-ie.js\": 7216,\n\t\"./en-il\": 9305,\n\t\"./en-il.js\": 9305,\n\t\"./en-in\": 3364,\n\t\"./en-in.js\": 3364,\n\t\"./en-nz\": 9130,\n\t\"./en-nz.js\": 9130,\n\t\"./en-sg\": 1161,\n\t\"./en-sg.js\": 1161,\n\t\"./eo\": 802,\n\t\"./eo.js\": 802,\n\t\"./es\": 328,\n\t\"./es-do\": 5551,\n\t\"./es-do.js\": 5551,\n\t\"./es-mx\": 5615,\n\t\"./es-mx.js\": 5615,\n\t\"./es-us\": 4790,\n\t\"./es-us.js\": 4790,\n\t\"./es.js\": 328,\n\t\"./et\": 6389,\n\t\"./et.js\": 6389,\n\t\"./eu\": 2961,\n\t\"./eu.js\": 2961,\n\t\"./fa\": 6151,\n\t\"./fa.js\": 6151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 8898,\n\t\"./fil.js\": 8898,\n\t\"./fo\": 7779,\n\t\"./fo.js\": 7779,\n\t\"./fr\": 8174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 8867,\n\t\"./fr-ch.js\": 8867,\n\t\"./fr.js\": 8174,\n\t\"./fy\": 452,\n\t\"./fy.js\": 452,\n\t\"./ga\": 5014,\n\t\"./ga.js\": 5014,\n\t\"./gd\": 4127,\n\t\"./gd.js\": 4127,\n\t\"./gl\": 2124,\n\t\"./gl.js\": 2124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 7953,\n\t\"./gom-latn.js\": 7953,\n\t\"./gu\": 6604,\n\t\"./gu.js\": 6604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 4235,\n\t\"./hi.js\": 4235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 7735,\n\t\"./hu.js\": 7735,\n\t\"./hy-am\": 402,\n\t\"./hy-am.js\": 402,\n\t\"./id\": 9187,\n\t\"./id.js\": 9187,\n\t\"./is\": 536,\n\t\"./is.js\": 536,\n\t\"./it\": 5007,\n\t\"./it-ch\": 4667,\n\t\"./it-ch.js\": 4667,\n\t\"./it.js\": 5007,\n\t\"./ja\": 2093,\n\t\"./ja.js\": 2093,\n\t\"./jv\": 59,\n\t\"./jv.js\": 59,\n\t\"./ka\": 6870,\n\t\"./ka.js\": 6870,\n\t\"./kk\": 880,\n\t\"./kk.js\": 880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 8785,\n\t\"./kn.js\": 8785,\n\t\"./ko\": 1721,\n\t\"./ko.js\": 1721,\n\t\"./ku\": 7851,\n\t\"./ku.js\": 7851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 346,\n\t\"./lb.js\": 346,\n\t\"./lo\": 3002,\n\t\"./lo.js\": 3002,\n\t\"./lt\": 4035,\n\t\"./lt.js\": 4035,\n\t\"./lv\": 6927,\n\t\"./lv.js\": 6927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 4173,\n\t\"./mi.js\": 4173,\n\t\"./mk\": 6320,\n\t\"./mk.js\": 6320,\n\t\"./ml\": 1705,\n\t\"./ml.js\": 1705,\n\t\"./mn\": 1062,\n\t\"./mn.js\": 1062,\n\t\"./mr\": 2805,\n\t\"./mr.js\": 2805,\n\t\"./ms\": 1341,\n\t\"./ms-my\": 9900,\n\t\"./ms-my.js\": 9900,\n\t\"./ms.js\": 1341,\n\t\"./mt\": 7734,\n\t\"./mt.js\": 7734,\n\t\"./my\": 9034,\n\t\"./my.js\": 9034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 6495,\n\t\"./ne.js\": 6495,\n\t\"./nl\": 673,\n\t\"./nl-be\": 6272,\n\t\"./nl-be.js\": 6272,\n\t\"./nl.js\": 673,\n\t\"./nn\": 2486,\n\t\"./nn.js\": 2486,\n\t\"./oc-lnc\": 6219,\n\t\"./oc-lnc.js\": 6219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 8444,\n\t\"./pl.js\": 8444,\n\t\"./pt\": 3170,\n\t\"./pt-br\": 6117,\n\t\"./pt-br.js\": 6117,\n\t\"./pt.js\": 3170,\n\t\"./ro\": 6587,\n\t\"./ro.js\": 6587,\n\t\"./ru\": 9264,\n\t\"./ru.js\": 9264,\n\t\"./sd\": 2135,\n\t\"./sd.js\": 2135,\n\t\"./se\": 5366,\n\t\"./se.js\": 5366,\n\t\"./si\": 3379,\n\t\"./si.js\": 3379,\n\t\"./sk\": 6143,\n\t\"./sk.js\": 6143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 1082,\n\t\"./sq.js\": 1082,\n\t\"./sr\": 1621,\n\t\"./sr-cyrl\": 8963,\n\t\"./sr-cyrl.js\": 8963,\n\t\"./sr.js\": 1621,\n\t\"./ss\": 1404,\n\t\"./ss.js\": 1404,\n\t\"./sv\": 5685,\n\t\"./sv.js\": 5685,\n\t\"./sw\": 6490,\n\t\"./sw.js\": 6490,\n\t\"./ta\": 4106,\n\t\"./ta.js\": 4106,\n\t\"./te\": 9204,\n\t\"./te.js\": 9204,\n\t\"./tet\": 3692,\n\t\"./tet.js\": 3692,\n\t\"./tg\": 6361,\n\t\"./tg.js\": 6361,\n\t\"./th\": 1735,\n\t\"./th.js\": 1735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 6129,\n\t\"./tl-ph.js\": 6129,\n\t\"./tlh\": 3759,\n\t\"./tlh.js\": 3759,\n\t\"./tr\": 1644,\n\t\"./tr.js\": 1644,\n\t\"./tzl\": 875,\n\t\"./tzl.js\": 875,\n\t\"./tzm\": 6878,\n\t\"./tzm-latn\": 1041,\n\t\"./tzm-latn.js\": 1041,\n\t\"./tzm.js\": 6878,\n\t\"./ug-cn\": 4357,\n\t\"./ug-cn.js\": 4357,\n\t\"./uk\": 4810,\n\t\"./uk.js\": 4810,\n\t\"./ur\": 6794,\n\t\"./ur.js\": 6794,\n\t\"./uz\": 8966,\n\t\"./uz-latn\": 7959,\n\t\"./uz-latn.js\": 7959,\n\t\"./uz.js\": 8966,\n\t\"./vi\": 5386,\n\t\"./vi.js\": 5386,\n\t\"./x-pseudo\": 3156,\n\t\"./x-pseudo.js\": 3156,\n\t\"./yo\": 8028,\n\t\"./yo.js\": 8028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 9380,\n\t\"./zh-hk.js\": 9380,\n\t\"./zh-mo\": 874,\n\t\"./zh-mo.js\": 874,\n\t\"./zh-tw\": 6508,\n\t\"./zh-tw.js\": 6508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"sourceRoot":"webpack:///"}